<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://vepo.github.io/atom.xml" rel="self" type="application/atom+xml" /><link href="https://vepo.github.io/" rel="alternate" type="text/html" /><updated>2022-04-29T19:25:09+00:00</updated><id>https://vepo.github.io/atom.xml</id><title type="html">vepo</title><subtitle>Um reposit√≥rio para todos os posts, palestras e tutoriais que j√° fiz. Java, Desenvolvimento de Software e reflex√µes sobre filosofia</subtitle><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><entry><title type="html">Como come√ßar a aprender Java</title><link href="https://vepo.github.io/posts/java-101" rel="alternate" type="text/html" title="Como come√ßar a aprender Java" /><published>2022-04-29T00:00:00+00:00</published><updated>2022-04-29T00:00:00+00:00</updated><id>https://vepo.github.io/posts/14-29-00-java-101-como-comecar</id><content type="html" xml:base="https://vepo.github.io/posts/java-101">&lt;p&gt;Nos √∫ltimos meses muitas pessoas vem me perguntando por onde come√ßar a desenvolver Java. Eu sei que existem v√°rios cursos na internet que tem essa resposta e n√£o quero me propor a criar um curso Java. Creio que o conhecimento deve ser livre e sem escasses. Por isso vou te apresentar o b√°sico que voc√™ deve saber sobre Java.&lt;/p&gt;

&lt;p&gt;Eu vou tentar seguir a ordem dessa thread que fiz em dezembro.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;pt&quot; dir=&quot;ltr&quot;&gt;Voc√™ quer aprender &lt;a href=&quot;https://twitter.com/hashtag/Java?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#Java&lt;/a&gt; do come√ßo? Ent√£o acompanha aqui o que voc√™ precisa saber?&lt;br /&gt;&lt;br /&gt;!!Java n√£o √© Spring!!&lt;br /&gt;&lt;br /&gt;1. Tenha uma IDE. Instale no seu computador uma IDE que voc√™ saiba usar. Se n√£o sabe tente conhecer. Eu recomendo o &lt;a href=&quot;https://twitter.com/intellijidea?ref_src=twsrc%5Etfw&quot;&gt;@intellijidea&lt;/a&gt;. Aprenda a criar um projeto e executar ele.&lt;/p&gt;&amp;mdash; Victor Os√≥rio (@vepo) &lt;a href=&quot;https://twitter.com/vepo/status/1473250093742571521?ref_src=twsrc%5Etfw&quot;&gt;December 21, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;java-√©-um-ecossistema&quot;&gt;Java √© um ecossistema&lt;/h1&gt;

&lt;p&gt;Muitos tendem a querer comparar Java com outras linguagens. Alguns tem a pretens√£o de comparar Java com linguagens como Javascript ou mesmo Scala. Esse √© um erro crasso! Java n√£o √© apenas uma linguagem, mas um ecossistema.&lt;/p&gt;

&lt;p&gt;Primeiro para entender melhor vamos tentar definir o que √© uma linguagem de programa√ß√£o‚Ä¶&lt;/p&gt;

&lt;p&gt;Quando a computa√ß√£o eletr√¥nica come√ßou a se popularizar, existiam in√∫meras plataformas e cada uma delas haviam um conjunto de instru√ß√µes. Para desenvolver qualquer software era preciso conhecer o hardware e o conjunto de instru√ß√µes que existem naquele hardware. Quer ver um exemplo? Tenta navegar no &lt;a href=&quot;https://github.com/chrislgarry/Apollo-11&quot;&gt;c√≥digo da Apollo 11&lt;/a&gt; para tentar entender algo. √â praticamente imposs√≠vel, at√© mesmo para quem j√° desenvolveu em Assembly. Isso acontece porque o cojunto de instru√ß√µes e a arquitetura do hardware s√£o completamente diferentes das m√°quinas que temos hoje.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/apollo11.png&quot; alt=&quot;Olha o c√≥digo da igni√ß√£o da Apolo 11! üò≤&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Com o tempo as m√°quinas ganharam um padr√£o, tanto de processadores como de Opcodes. Hoje sabemos que existe um processador, um barramento, mem√≥ria, registradores, etc‚Ä¶ Esses componentes variam um pouco de arquitetura pra arquitetura, mas eles continuam seguindo um padr√£o. Abaixo voc√™ pode ver a documenta√ß√£o de um opcode.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/opcode.png&quot; alt=&quot;Exemplo de Opcode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚Äî Cara qual a rela√ß√£o disso com Java?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Bom, vamos l√°! Eu vou chegar l√°! Eu prometo! Tudo que um computador reconhece s√£o opcodes! Nenhum computador entende nenhuma linguagem de programa√ß√£o. Ah, mas voc√™ vai me dizer que algumas pessoas desenvolvem assembly‚Ä¶ Sim! Mas mesmo para quem faz esses progamas √© preciso transcrever o programa em linguagem de m√°quina. Por exemplo, no opcode acima, o computador n√£o sabe o que √© &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOP&lt;/code&gt;, ele s√≥ sabe que a opera√ß√£o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01&lt;/code&gt; n√£o deve produzir nenhum efeito. Ent√£o todo programa precisa ser compilado para uma s√©rie de instru√ß√µes que chegam a praticamente o formato de m√°quina. Estou falando do famoso &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EXE&lt;/code&gt; do Windows. Mas esses programas tamb√©m dependem de uma s√©rie de bibliotecas do sistema operacional para o qual foram compilados.&lt;/p&gt;

&lt;p&gt;At√© 1990 era comum um programa ser compilado para uma m√°quina especifica. Quem j√° trabalhou com Linux nos anos 2000 sabe o que √© isso. MAS uma grande empresa do Vale do Sil√≠cio teve uma grande ideia! E se escrev√™ssemos uma linguagem em que ao se escrever um c√≥digo ele poder√° ser executado em qualquer lugar?&lt;/p&gt;

&lt;p&gt;Essa ideia era pensada porque come√ßavam a existir dispositivos que no futuro poderiam ter um processador de uso gen√©rico. Mas como fazer para encapsular toda a l√≥gica do hardware e do sistema operacional? Por isso surgiu algo que √© t√£o importante quanto a linguagem Java: a &lt;strong&gt;Java Virtual Machine&lt;/strong&gt;! Ou JVM para os mais intimos‚Ä¶&lt;/p&gt;

&lt;p&gt;A JVM √© um programa que l√™ um conjunto de classes e executa como se fosse um processador em alto n√≠vel. Ela tem uma arquitetura como se fosse uma m√°quina e tem instru√ß√µes como se fosse um processador. A &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se18/html/index.html&quot;&gt;especifica√ß√£o&lt;/a&gt; dela √© aberta e pode ser acessada por qualquer fornecedor que queira porta ela em seu sistema operacional.&lt;/p&gt;

&lt;p&gt;Ent√£o agora para e olha para o transformador que existe na sua rua‚Ä¶ E se eu te dissesse que √© provavel que existe uma JVM rodando perto dele para monitora ele? Voc√™ acreditaria? Em algumas cidades existe. Isso s√≥ √© poss√≠vel porque ela √© port√°til em qualquer sistema operacional.&lt;/p&gt;

&lt;p&gt;Para criar o Java, foi preciso criar uma m√°quina virtual poderosa e √© ela quem tem grande parte do cr√©dito porque ao abstrair as particularidades de v√°rios sistemas operacionais e hardwares, foi poss√≠vel se econimizar tempo escrevendo c√≥digo.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚Äî Ent√£o voc√™ t√° falando que o Java √© famoso s√≥ por causa da JVM?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;√ìbvio que n√£o! A JVM j√° vem com uma biblioteca padr√£o que √© muito poderosa. Podemos ter acesso a biblioteca de cole√ß√µes que √© poderosa, a biblioteca de Reflections foi a base da grande maioria dos frameworks dos anos 2000, etc‚Ä¶ A JVM era poderosa e ela era umbilicalmente ligada ao Java. Ela era t√£o boa que surgiram linguagens que compilavam para rodar JVM.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚Äî Mas porque tudo tem que ser um objeto em Java? Quem teve essa id√©ia infeliz?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Eu poderia colocar essa pergunta como um &lt;em&gt;age√≠smo&lt;/em&gt;, mas eu prefiro o tempo &lt;em&gt;esnobismo cronol√≥gico&lt;/em&gt;. Porque voc√™ est√° certo! Na minha humilde opini√£o, essa id√©ia √© infeliz! Mas sabemos disso porque a linguagem Java nos mostrou isso. Quando ela foi desenvolvida a cren√ßa comum era de que Orienta√ß√£o Objeto era a panaceia para todos os males da computa√ß√£o. Se quiser reclamar, pode! Houveram at√© ideias bem horrendas como Bando de Dados OO.&lt;/p&gt;

&lt;p&gt;Al√©m disso houveram projetos para que os componentes fosse a principal forma de desenvolvimento de software. Na √©poca existia um grande esfor√ßo para que n√£o fosse mais necess√°rio se escrever c√≥digo. Por isso existiu um projeto, o qual n√£o lembro o nome, que prometia um software altamente customizavel sem c√≥digo. Nem preciso dizer que ele falhou completamente, mas dele surgiram algumas boas ideias como o Java Beans.&lt;/p&gt;

&lt;p&gt;Java Beans √© uma especifica√ß√£o que deu origem ao que conhecemos hoje como Jakarta EE. √â o falecido Java EE! √â um modelo de programa√ß√£o em que seu c√≥digo n√£o fica dependente de um framework, da mesma forma que seu c√≥digo n√£o √© dependente de uma m√°quina. Hoje √© poss√≠vel voc√™ escrever um programa para Quarkus e usar o mesmo c√≥digo para OpenLiberty.&lt;/p&gt;

&lt;h2 id=&quot;instalando-tudo&quot;&gt;Instalando tudo‚Ä¶&lt;/h2&gt;

&lt;p&gt;N√£o gaste tempo procurando cada programa‚Ä¶ nem mesmo o Java. Voc√™ precisa de apenas uma coisa: o &lt;a href=&quot;https://sdkman.io/&quot;&gt;SDKMan!&lt;/a&gt;. Com ele √© poss√≠vel instalar qualquer vers√£o de Java que voc√™ deseja e algumas outras ferramentas como vamos citar mais a frente.&lt;/p&gt;

&lt;p&gt;Tamb√©m recomendo ter uma boa linha de comando. Se voc√™ usa Windows‚Ä¶ Errado! Brincadeira! hehehe Voc√™ pode usar Windows, tanto que eu uso Windows (n√£o por livre e espont√¢nea vontade). No Windows voc√™ pode usar o Git Bash que √© um porte do MinGW que por sua vez √© um porte dos programas GNU para Windows.&lt;/p&gt;

&lt;p&gt;Sobre a IDE, escolha a que voc√™ mais gosta. Todas as IDEs relavantes tem suporte a Java. Voc√™ precisa de uma IDE porque √© mais f√°cil desenvolver usando ferramentas para fazer a marca√ß√£o da linguagem (&lt;em&gt;o famoso code highlight&lt;/em&gt;) e para propor c√≥digo (&lt;em&gt;o famoso auto-complete&lt;/em&gt;). Desenvolvedores experientes preferem comodidade porque os problemas j√° s√£o complexos demais para ficar perdendo tempo. Eu recomendo usar ou o Eclipse, ou o Intellij Idea ou o VS Code. As tr√™s IDEs s√£o boas.&lt;/p&gt;

&lt;p&gt;Logo em resumo, o que voc√™ precisa √©:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SDKMan!&lt;/li&gt;
  &lt;li&gt;Maven&lt;/li&gt;
  &lt;li&gt;Java&lt;/li&gt;
  &lt;li&gt;Uma boa IDE&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;construindo-meu-primeiro-programa-java&quot;&gt;Construindo meu primeiro programa Java&lt;/h2&gt;

&lt;p&gt;Ent√£o agora que voc√™ sabe que o Java √© mais que uma linguagem, vamos escrever nosso primeiro c√≥digo Java?&lt;/p&gt;

&lt;p&gt;O erro mais comum de quem vai come√ßar em Java √© baixar uma IDE e criar um projeto Java. ü§Ø Eu fiz isso por muito tempo, at√© descobrir que √© s√≥ dor de cabe√ßa. √â mais f√°cil voc√™ usar o Maven ou o Gradle. Eu uso Maven por comodidade, j√° tive vontade de aprender Gradle, mas‚Ä¶ Bom‚Ä¶&lt;/p&gt;

&lt;p&gt;Com o Maven voc√™ pode facilmente criar um projeto Java e compilar ele independente de IDE. O Maven tamb√©m vai se encarregar√° de encontrar todas as dep√™ncias em suas vers√µes e depend√™ncias. Ent√£o para criar um projeto Java basta criar um arquivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; e um arquivo Java, como na estrutura abaixo.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
‚îú‚îÄ‚îÄ src
‚îÇ   ‚îî‚îÄ‚îÄ main
‚îÇ       ‚îî‚îÄ‚îÄ java
‚îÇ           ‚îî‚îÄ‚îÄ io
‚îÇ               ‚îî‚îÄ‚îÄ vepo
‚îÇ                   ‚îî‚îÄ‚îÄ helloworld
‚îÇ                       ‚îî‚îÄ‚îÄ HelloWorld.java
‚îî‚îÄ‚îÄ pom.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para quem n√£o conhece o Maven (&lt;em&gt;d√™ uma olhada nesse &lt;a href=&quot;https://github.com/dev-roadmap/backend-roadmap/blob/main/caso-de-uso-00-configurando-um-projeto-quarkus.md&quot;&gt;simples tutorial&lt;/a&gt;&lt;/em&gt;), ele vai gerenciar a build do seu projetos Java. O arquivo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt; vai conter as informa√ß√µes b√°sicas do projeto e as depend√™ncias. Voc√™ pode achar estranha a estrutura de diret√≥rios, mas ela √© bastante √∫til para evitar configura√ß√µes. O Maven atua por um padr√£o chamado &lt;a href=&quot;https://pt.wikipedia.org/wiki/Conven%C3%A7%C3%A3o_sobre_configura%C3%A7%C3%A3o&quot;&gt;Conven√ß√£o sobre configura√ß√£o&lt;/a&gt;, ao inv√™s de colocar todas as configura√ß√µes do projeto, basta seguir essa regrinha b√°sica de estrutura de diret√≥rios.&lt;/p&gt;

&lt;p&gt;Para encontrar depend√™ncias Maven, √© poss√≠vel procurar no mvnrepository.com. Cada depend√™ncia √© definida pelas coordenadas &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;groupId&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;artifactId&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt; e elas podem ser encontradas diretamente no mvnrepository.com, como √© o caso do Kafka Clientes &lt;a href=&quot;https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients&quot;&gt;mvnrepository.com/artifact/org.apache.kafka/kafka-clients&lt;/a&gt;. Observe o padr√£o da URL, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvnrepository.com/artifact/{groupId}/{artifactId}&lt;/code&gt;. √â poss√≠vel tamb√©m adicionar a vers√£o na URL &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvnrepository.com/artifact/{groupId}/{artifactId}/{version}&lt;/code&gt;. Isso facilita a busca pode depend√™ncias.&lt;/p&gt;

&lt;p&gt;Para facilitar na execu√ß√£o, j√° estou colocando o plugin &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.codehaus.mojo:exec-maven-plugin&lt;/code&gt; corretamente configurado para apontar para a classe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;io.vepo.helloworld.HelloWorld&lt;/code&gt;, assim para executar basta usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn clean compile exec:java&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.vepo.helloworld&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hello-world&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0.0-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Hello World!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;java.version&amp;gt;&lt;/span&gt;18&lt;span class=&quot;nt&quot;&gt;&amp;lt;/java.version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;project.reporting.outputEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.reporting.outputEncoding&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;maven.compiler.parameters&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/maven.compiler.parameters&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;maven.compiler.source&amp;gt;&lt;/span&gt;${java.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/maven.compiler.source&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;maven.compiler.target&amp;gt;&lt;/span&gt;${java.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/maven.compiler.target&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;


    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Procure as depend√™ncias no mvnrepository.com --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;finalName&amp;gt;&lt;/span&gt;hello-world&lt;span class=&quot;nt&quot;&gt;&amp;lt;/finalName&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.codehaus.mojo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;exec-maven-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;io.vepo.helloworld.HelloWorld&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Observe como √© simples‚Ä¶ Com isso todas as configura√ß√µes ficam dispon√≠veis em um √∫nico arquivo que pode ser usado pela sua IDE preferida.&lt;/p&gt;

&lt;p&gt;Agora √© s√≥ criar a classe como o exemplo abaixo e pronto! Execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn clean compile exec:java&lt;/code&gt; e voc√™ ver√° o resultado na tela.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;io.vepo.helloworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Agora caso voc√™ queira criar um programa usando um framework‚Ä¶ Eu recomendo voc√™ procurar o tutorial desse framework. Talvez voc√™ precisar√° escrever um &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; espec√≠fico ou mesmo usar um conjunto de anota√ß√µes.&lt;/p&gt;

&lt;h2 id=&quot;pr√≥ximos-passos&quot;&gt;Pr√≥ximos passos&lt;/h2&gt;

&lt;p&gt;Agora que voc√™ sabe como escrever e executar um programa Java, voc√™ pode conhecer um pouco mais da sintaxe da linguagem. Ela √© baseada na linguagem C, mas tem algumas especificadades‚Ä¶ Eu recomendei o tutorial do &lt;a href=&quot;https://www.w3schools.com/java/java_syntax.asp&quot;&gt;W3CSchools&lt;/a&gt; por ter ao menos uma listagem das principais constru√ß√µes do Java 8. Tente saber como declarar uma classe, um m√©todo, vari√°veis, quais s√£o as principais estruturas de loop (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;while&lt;/code&gt;) e suas varia√ß√µes e por fim as estruturas l√≥gicas (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;switch&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Depois conhe√ßa ao menos alguns dos pacotes b√°sicos da linguagem, a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/18/docs/api/java.base/module-summary.html&quot;&gt;documenta√ß√£o&lt;/a&gt; est√° dispon√≠vel na internet. Eu recomendo que voc√™ comece pelo pacote &lt;a href=&quot;https://docs.oracle.com/en/java/javase/18/docs/api/java.base/java/util/package-summary.html&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java.util&lt;/code&gt;&lt;/a&gt; ele vai conter as classes b√°sicas de cole√ß√µes. No pr√≥ximo post vamos focar exatamente nela!&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Java" /><summary type="html">Nos √∫ltimos meses muitas pessoas vem me perguntando por onde come√ßar a desenvolver Java. Eu sei que existem v√°rios cursos na internet que tem essa resposta e n√£o quero me propor a criar um curso Java. Creio que o conhecimento deve ser livre e sem escasses. Por isso vou te apresentar o b√°sico que voc√™ deve saber sobre Java. Eu vou tentar seguir a ordem dessa thread que fiz em dezembro. Voc√™ quer aprender #Java do come√ßo? Ent√£o acompanha aqui o que voc√™ precisa saber?!!Java n√£o √© Spring!!1. Tenha uma IDE. Instale no seu computador uma IDE que voc√™ saiba usar. Se n√£o sabe tente conhecer. Eu recomendo o @intellijidea. Aprenda a criar um projeto e executar ele.&amp;mdash; Victor Os√≥rio (@vepo) December 21, 2021 Java √© um ecossistema Muitos tendem a querer comparar Java com outras linguagens. Alguns tem a pretens√£o de comparar Java com linguagens como Javascript ou mesmo Scala. Esse √© um erro crasso! Java n√£o √© apenas uma linguagem, mas um ecossistema. Primeiro para entender melhor vamos tentar definir o que √© uma linguagem de programa√ß√£o‚Ä¶ Quando a computa√ß√£o eletr√¥nica come√ßou a se popularizar, existiam in√∫meras plataformas e cada uma delas haviam um conjunto de instru√ß√µes. Para desenvolver qualquer software era preciso conhecer o hardware e o conjunto de instru√ß√µes que existem naquele hardware. Quer ver um exemplo? Tenta navegar no c√≥digo da Apollo 11 para tentar entender algo. √â praticamente imposs√≠vel, at√© mesmo para quem j√° desenvolveu em Assembly. Isso acontece porque o cojunto de instru√ß√µes e a arquitetura do hardware s√£o completamente diferentes das m√°quinas que temos hoje. Com o tempo as m√°quinas ganharam um padr√£o, tanto de processadores como de Opcodes. Hoje sabemos que existe um processador, um barramento, mem√≥ria, registradores, etc‚Ä¶ Esses componentes variam um pouco de arquitetura pra arquitetura, mas eles continuam seguindo um padr√£o. Abaixo voc√™ pode ver a documenta√ß√£o de um opcode. ‚Äî Cara qual a rela√ß√£o disso com Java? Bom, vamos l√°! Eu vou chegar l√°! Eu prometo! Tudo que um computador reconhece s√£o opcodes! Nenhum computador entende nenhuma linguagem de programa√ß√£o. Ah, mas voc√™ vai me dizer que algumas pessoas desenvolvem assembly‚Ä¶ Sim! Mas mesmo para quem faz esses progamas √© preciso transcrever o programa em linguagem de m√°quina. Por exemplo, no opcode acima, o computador n√£o sabe o que √© NOP, ele s√≥ sabe que a opera√ß√£o 01 n√£o deve produzir nenhum efeito. Ent√£o todo programa precisa ser compilado para uma s√©rie de instru√ß√µes que chegam a praticamente o formato de m√°quina. Estou falando do famoso EXE do Windows. Mas esses programas tamb√©m dependem de uma s√©rie de bibliotecas do sistema operacional para o qual foram compilados. At√© 1990 era comum um programa ser compilado para uma m√°quina especifica. Quem j√° trabalhou com Linux nos anos 2000 sabe o que √© isso. MAS uma grande empresa do Vale do Sil√≠cio teve uma grande ideia! E se escrev√™ssemos uma linguagem em que ao se escrever um c√≥digo ele poder√° ser executado em qualquer lugar? Essa ideia era pensada porque come√ßavam a existir dispositivos que no futuro poderiam ter um processador de uso gen√©rico. Mas como fazer para encapsular toda a l√≥gica do hardware e do sistema operacional? Por isso surgiu algo que √© t√£o importante quanto a linguagem Java: a Java Virtual Machine! Ou JVM para os mais intimos‚Ä¶ A JVM √© um programa que l√™ um conjunto de classes e executa como se fosse um processador em alto n√≠vel. Ela tem uma arquitetura como se fosse uma m√°quina e tem instru√ß√µes como se fosse um processador. A especifica√ß√£o dela √© aberta e pode ser acessada por qualquer fornecedor que queira porta ela em seu sistema operacional. Ent√£o agora para e olha para o transformador que existe na sua rua‚Ä¶ E se eu te dissesse que √© provavel que existe uma JVM rodando perto dele para monitora ele? Voc√™ acreditaria? Em algumas cidades existe. Isso s√≥ √© poss√≠vel porque ela √© port√°til em qualquer sistema operacional. Para criar o Java, foi preciso criar uma m√°quina virtual poderosa e √© ela quem tem grande parte do cr√©dito porque ao abstrair as particularidades de v√°rios sistemas operacionais e hardwares, foi poss√≠vel se econimizar tempo escrevendo c√≥digo. ‚Äî Ent√£o voc√™ t√° falando que o Java √© famoso s√≥ por causa da JVM? √ìbvio que n√£o! A JVM j√° vem com uma biblioteca padr√£o que √© muito poderosa. Podemos ter acesso a biblioteca de cole√ß√µes que √© poderosa, a biblioteca de Reflections foi a base da grande maioria dos frameworks dos anos 2000, etc‚Ä¶ A JVM era poderosa e ela era umbilicalmente ligada ao Java. Ela era t√£o boa que surgiram linguagens que compilavam para rodar JVM. ‚Äî Mas porque tudo tem que ser um objeto em Java? Quem teve essa id√©ia infeliz? Eu poderia colocar essa pergunta como um age√≠smo, mas eu prefiro o tempo esnobismo cronol√≥gico. Porque voc√™ est√° certo! Na minha humilde opini√£o, essa id√©ia √© infeliz! Mas sabemos disso porque a linguagem Java nos mostrou isso. Quando ela foi desenvolvida a cren√ßa comum era de que Orienta√ß√£o Objeto era a panaceia para todos os males da computa√ß√£o. Se quiser reclamar, pode! Houveram at√© ideias bem horrendas como Bando de Dados OO. Al√©m disso houveram projetos para que os componentes fosse a principal forma de desenvolvimento de software. Na √©poca existia um grande esfor√ßo para que n√£o fosse mais necess√°rio se escrever c√≥digo. Por isso existiu um projeto, o qual n√£o lembro o nome, que prometia um software altamente customizavel sem c√≥digo. Nem preciso dizer que ele falhou completamente, mas dele surgiram algumas boas ideias como o Java Beans. Java Beans √© uma especifica√ß√£o que deu origem ao que conhecemos hoje como Jakarta EE. √â o falecido Java EE! √â um modelo de programa√ß√£o em que seu c√≥digo n√£o fica dependente de um framework, da mesma forma que seu c√≥digo n√£o √© dependente de uma m√°quina. Hoje √© poss√≠vel voc√™ escrever um programa para Quarkus e usar o mesmo c√≥digo para OpenLiberty. Instalando tudo‚Ä¶ N√£o gaste tempo procurando cada programa‚Ä¶ nem mesmo o Java. Voc√™ precisa de apenas uma coisa: o SDKMan!. Com ele √© poss√≠vel instalar qualquer vers√£o de Java que voc√™ deseja e algumas outras ferramentas como vamos citar mais a frente. Tamb√©m recomendo ter uma boa linha de comando. Se voc√™ usa Windows‚Ä¶ Errado! Brincadeira! hehehe Voc√™ pode usar Windows, tanto que eu uso Windows (n√£o por livre e espont√¢nea vontade). No Windows voc√™ pode usar o Git Bash que √© um porte do MinGW que por sua vez √© um porte dos programas GNU para Windows. Sobre a IDE, escolha a que voc√™ mais gosta. Todas as IDEs relavantes tem suporte a Java. Voc√™ precisa de uma IDE porque √© mais f√°cil desenvolver usando ferramentas para fazer a marca√ß√£o da linguagem (o famoso code highlight) e para propor c√≥digo (o famoso auto-complete). Desenvolvedores experientes preferem comodidade porque os problemas j√° s√£o complexos demais para ficar perdendo tempo. Eu recomendo usar ou o Eclipse, ou o Intellij Idea ou o VS Code. As tr√™s IDEs s√£o boas. Logo em resumo, o que voc√™ precisa √©: SDKMan! Maven Java Uma boa IDE Construindo meu primeiro programa Java Ent√£o agora que voc√™ sabe que o Java √© mais que uma linguagem, vamos escrever nosso primeiro c√≥digo Java? O erro mais comum de quem vai come√ßar em Java √© baixar uma IDE e criar um projeto Java. ü§Ø Eu fiz isso por muito tempo, at√© descobrir que √© s√≥ dor de cabe√ßa. √â mais f√°cil voc√™ usar o Maven ou o Gradle. Eu uso Maven por comodidade, j√° tive vontade de aprender Gradle, mas‚Ä¶ Bom‚Ä¶ Com o Maven voc√™ pode facilmente criar um projeto Java e compilar ele independente de IDE. O Maven tamb√©m vai se encarregar√° de encontrar todas as dep√™ncias em suas vers√µes e depend√™ncias. Ent√£o para criar um projeto Java basta criar um arquivo pom.xml e um arquivo Java, como na estrutura abaixo. . ‚îú‚îÄ‚îÄ src ‚îÇ ‚îî‚îÄ‚îÄ main ‚îÇ ‚îî‚îÄ‚îÄ java ‚îÇ ‚îî‚îÄ‚îÄ io ‚îÇ ‚îî‚îÄ‚îÄ vepo ‚îÇ ‚îî‚îÄ‚îÄ helloworld ‚îÇ ‚îî‚îÄ‚îÄ HelloWorld.java ‚îî‚îÄ‚îÄ pom.xml Para quem n√£o conhece o Maven (d√™ uma olhada nesse simples tutorial), ele vai gerenciar a build do seu projetos Java. O arquivo pom.xml vai conter as informa√ß√µes b√°sicas do projeto e as depend√™ncias. Voc√™ pode achar estranha a estrutura de diret√≥rios, mas ela √© bastante √∫til para evitar configura√ß√µes. O Maven atua por um padr√£o chamado Conven√ß√£o sobre configura√ß√£o, ao inv√™s de colocar todas as configura√ß√µes do projeto, basta seguir essa regrinha b√°sica de estrutura de diret√≥rios. Para encontrar depend√™ncias Maven, √© poss√≠vel procurar no mvnrepository.com. Cada depend√™ncia √© definida pelas coordenadas groupId, artifactId e version e elas podem ser encontradas diretamente no mvnrepository.com, como √© o caso do Kafka Clientes mvnrepository.com/artifact/org.apache.kafka/kafka-clients. Observe o padr√£o da URL, mvnrepository.com/artifact/{groupId}/{artifactId}. √â poss√≠vel tamb√©m adicionar a vers√£o na URL mvnrepository.com/artifact/{groupId}/{artifactId}/{version}. Isso facilita a busca pode depend√™ncias. Para facilitar na execu√ß√£o, j√° estou colocando o plugin org.codehaus.mojo:exec-maven-plugin corretamente configurado para apontar para a classe io.vepo.helloworld.HelloWorld, assim para executar basta usar mvn clean compile exec:java. &amp;lt;?xml version=&quot;1.0&quot;?&amp;gt; &amp;lt;project xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot; xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;io.vepo.helloworld&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hello-world&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;name&amp;gt;Hello World!&amp;lt;/name&amp;gt; &amp;lt;properties&amp;gt; &amp;lt;java.version&amp;gt;18&amp;lt;/java.version&amp;gt; &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt; &amp;lt;project.reporting.outputEncoding&amp;gt;UTF-8&amp;lt;/project.reporting.outputEncoding&amp;gt; &amp;lt;maven.compiler.parameters&amp;gt;true&amp;lt;/maven.compiler.parameters&amp;gt; &amp;lt;maven.compiler.source&amp;gt;${java.version}&amp;lt;/maven.compiler.source&amp;gt; &amp;lt;maven.compiler.target&amp;gt;${java.version}&amp;lt;/maven.compiler.target&amp;gt; &amp;lt;/properties&amp;gt; &amp;lt;dependencyManagement&amp;gt; &amp;lt;dependencies&amp;gt;&amp;lt;/dependencies&amp;gt; &amp;lt;/dependencyManagement&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;!-- Procure as depend√™ncias no mvnrepository.com --&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;build&amp;gt; &amp;lt;finalName&amp;gt;hello-world&amp;lt;/finalName&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.codehaus.mojo&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;exec-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;mainClass&amp;gt;io.vepo.helloworld.HelloWorld&amp;lt;/mainClass&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt; &amp;lt;/project&amp;gt; Observe como √© simples‚Ä¶ Com isso todas as configura√ß√µes ficam dispon√≠veis em um √∫nico arquivo que pode ser usado pela sua IDE preferida. Agora √© s√≥ criar a classe como o exemplo abaixo e pronto! Execute mvn clean compile exec:java e voc√™ ver√° o resultado na tela. package io.vepo.helloworld; public class HelloWorld { public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } Agora caso voc√™ queira criar um programa usando um framework‚Ä¶ Eu recomendo voc√™ procurar o tutorial desse framework. Talvez voc√™ precisar√° escrever um main espec√≠fico ou mesmo usar um conjunto de anota√ß√µes. Pr√≥ximos passos Agora que voc√™ sabe como escrever e executar um programa Java, voc√™ pode conhecer um pouco mais da sintaxe da linguagem. Ela √© baseada na linguagem C, mas tem algumas especificadades‚Ä¶ Eu recomendei o tutorial do W3CSchools por ter ao menos uma listagem das principais constru√ß√µes do Java 8. Tente saber como declarar uma classe, um m√©todo, vari√°veis, quais s√£o as principais estruturas de loop (for e while) e suas varia√ß√µes e por fim as estruturas l√≥gicas (if e switch). Depois conhe√ßa ao menos alguns dos pacotes b√°sicos da linguagem, a documenta√ß√£o est√° dispon√≠vel na internet. Eu recomendo que voc√™ comece pelo pacote java.util ele vai conter as classes b√°sicas de cole√ß√µes. No pr√≥ximo post vamos focar exatamente nela!</summary></entry><entry><title type="html">Arquitetura Event-Driven</title><link href="https://vepo.github.io/posts/event-driven-architecture" rel="alternate" type="text/html" title="Arquitetura Event-Driven" /><published>2022-04-01T00:00:00+00:00</published><updated>2022-04-01T00:00:00+00:00</updated><id>https://vepo.github.io/posts/10-04-00-event-driven-architecture</id><content type="html" xml:base="https://vepo.github.io/posts/event-driven-architecture">&lt;p&gt;Nesse post vamos fazer uma pequena introdu√ß√£o do que √© uma Arquitetura Event-Driven (EDA) e o que a diferencia de uma arquitetura Cliente-Servidor. Mas antes de falarmos especificamente sobre EDA, vamos recapitular alguns conceitos sobre Sistemas Distribu√≠dos que podem ser muito √∫teis para caracterizar cada um dos sistemas.&lt;/p&gt;

&lt;h1 id=&quot;recapitulando&quot;&gt;Recapitulando&lt;/h1&gt;

&lt;h2 id=&quot;o-que-√©-uma-arquitetura&quot;&gt;O que √© uma Arquitetura?&lt;/h2&gt;

&lt;p&gt;Resumidamente, uma arquitetura √© uma abstra√ß√£o do software em execu√ß√£o em v√°rios n√≠veis. Todo software vai possuir algumas caracteristicas que podem ser associadas a alguns padr√µes comuns. Um exemplo √© quando falamos de uma aplica√ß√£o linha de comando, j√° sabemos o que significa e estamos falando de uma pequena base de c√≥digo que ser√° executada em uma m√°quina especifica. Mas se falamos de um sistema web, podemos estar falando de um conjunto de softwares que interagem entre si atrav√©s de conex√µes IP e esse sistema pode conter tamb√©m uma aplica√ß√£o de linha de comando. Tanto a arquitetura da linha de comando como do sistema web s√£o arquiteturas v√°lidas, mas em n√≠veis diferentes, quando falamos do sistema web, podemos omitir o programa de linha de comando caso ele n√£o seja relevante para o entendimento do que est√° sendo feito. √â como se tivessemos aumentando e diminuindo o zoom da nossa architetura e omitindo algumas informa√ß√µes quando elas deixam de ser relavantes no que queremos observar.&lt;/p&gt;

&lt;p&gt;Toda arquitetura ir√° conter uma s√©rie de Componentes, Conectores e Dados. Para detalhar o que √© cada um dos elementos, veja a thread abaixo que fiz no twitter em fevereiro de 2021 ao ler a tese que define a arquitetura REST.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; align=&quot;center&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;pt&quot; dir=&quot;ltr&quot;&gt;Um Estilo Arquitetural √© um conjunto regras que v√£o definir como a Arquitetura ser√° definida. Isso ir√° impactar em como os Elementos e os Conectores ser√£o desenhados.&lt;/p&gt;&amp;mdash; dev-roadmap (@dev_roadmap) &lt;a href=&quot;https://twitter.com/dev_roadmap/status/1358053172992950272?ref_src=twsrc%5Etfw&quot;&gt;February 6, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;o-que-√©-um-estilo-arquitetural&quot;&gt;O que √© um Estilo Arquitetural?&lt;/h2&gt;

&lt;p&gt;Ao definirmos uma arquitetura, vamos encontrar alguns padr√µes em comum. Esses padr√µes s√£o definidos por um conjunto de regras e essas regras √© o que chamamos de Estilo Arquitural. Ao definir um estilo arquitural, j√° colocamos que nossa aplica√ß√£o dever√° ter alguma similaridade com outras aplica√ß√µes do mesmo estilo arquitetural. Logo definir um estilo arquitetural √© criar uma s√©rie de regras que devem ser seguidas, totalmente ou em parte, por uma aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;Um estilo n√£o √© uma imposi√ß√£o, √© uma constata√ß√£o ou um direcionamento. Aplica√ß√µes devem adaptar o estilo arquitetural para tentar responder ao seu neg√≥cio, caso o estilo torne complicado resolver o problema de neg√≥cio, pode significar que a escolha do estilo est√° errada. Nesse caso, √© preciso reavaliar a arquitetura do sistema. Vamos ver como isso se d√° mais a frente.&lt;/p&gt;

&lt;h2 id=&quot;o-que-s√£o-sistemas-distribu√≠dos&quot;&gt;O que s√£o Sistemas Distribu√≠dos?&lt;/h2&gt;

&lt;p&gt;Segundo Van Steen e Tanembaum, Sistemas distribu√≠dos &lt;em&gt;s√£o um conjunto de elementos computacionais aut√¥nomos que aparentam ser um √∫nico sistema coerente para os seus usu√°rios&lt;/em&gt;. Esses sistemas podem ser heterog√™neos, isso significa que n√£o precisam estar rodando na mesma m√°quina, ou sistema operacional, ou mesmo n√£o precisam ser implementados na mesma linguagem. Eles interagem atrav√©s da rede usando trocas de mensagens e essa heterogeneidade √© garantida pelo Middleware. Middleware √© a camada de software que fornece abstra√ß√£o de programa√ß√£o e pode mascarar heterogeneidade. Um middleware pode ser composto por processos, bibliotecas e frameworks.&lt;/p&gt;

&lt;p&gt;Um sistema distribu√≠do pode ser s√≠ncrono ou ass√≠ncrono. Quando o sistema √© caracterizado como s√≠ncrono, significa que cada etapa de processamento tem um limite especifico de tempo, cada mensagem deve ser recebida e processada dentro de um intervalo de tempo especificado. Quando o sistema √© ass√≠ncrono, significa que n√£o h√° limita√ß√µes de tempo para o processamento. Esses sistemas podem ter conex√µes s√≠ncronas ou ass√≠ncronas. √â importante n√£o confundir conex√£o s√≠ncrona com sistema s√≠ncrono. Quando falamos de conex√£o s√≠ncrona, significa que quando um processo envia uma mensagem, ele ir√° esperar por uma resposta e uma conex√£o ass√≠ncrona significa que quando um processo envia uma mensagem, ele n√£o vai esperar por uma resposta.&lt;/p&gt;

&lt;p&gt;Conex√µes tamb√©m podem ser caracterizadas pelo n√∫mero de elementos que a comp√µes. Podemos afirma que uma conex√£o √© &lt;em&gt;um-para-um&lt;/em&gt; (&lt;em&gt;one-to-one&lt;/em&gt;) ou &lt;em&gt;um-para-muitos&lt;/em&gt; (&lt;em&gt;one-to-many&lt;/em&gt;). Quando falamos de um-para-um, dizemos que uma mesma requisi√ß√£o s√≥ ser√° processada por um componente, mas quando falamos de um-para-muitos uma mesma requisi√ß√£o pode ser processada por muitos elementos.&lt;/p&gt;

&lt;h1 id=&quot;defini√ß√£o-de-uma-arquitetura-cliente-servidor&quot;&gt;Defini√ß√£o de uma Arquitetura Cliente-Servidor&lt;/h1&gt;

&lt;p&gt;Antes de falarmos de uma Arquitetura Event-Driven precisamos entender o que √© uma Arquitetura Cliente-Servidor e quais as limita√ß√µes dela s√£o endera√ßadas. Resumidamente um sistema Cliente-Servidor √© quando cada compomente da arquitetura tem um papel bem definido, o &lt;strong&gt;um cliente&lt;/strong&gt; elabora uma requisi√ß√£o, envia para &lt;strong&gt;um servidor&lt;/strong&gt; que ir√° ler e responder essa requisi√ß√£o s√≠ncronamente. A conex√£o entre cliente e servidor √© s√≠ncrona e para cada requisi√ß√£o h√° uma resposta. Nessa defini√ß√£o eu coloquei em destaque que ela sempre envolve um cliente e um servidor, porque toda comunica√ß√£o cliente servidor √© &lt;strong&gt;um-para-um&lt;/strong&gt;, n√£o havendo comunica√ß√£o &lt;strong&gt;um-para-muitos&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A natureza &lt;strong&gt;um-para-um&lt;/strong&gt; do estilo cliente-servidor j√° exp√µes uma das limita√ß√µes existente. Ao se adicionar um novo servidor, √© preciso que os clientes saibam da exist√™ncia dele. N√£o estou falando de inst√¢ncia, mas de tipo de servidor. Uma nova inst√¢ncia de um servidor pode ser adicionada e o processo de service discovery ir√° fazer com que o cliente encontre esse servidor, mas ele dever√° ser de um tipo ou uma API j√° conhecida pelos clientes.&lt;/p&gt;

&lt;p&gt;Outra liminta√ß√£o √© a natureza s√≠ncrona da comunica√ß√£o, pois para processos demorados ser√° necess√°rio se criar toda infraestrutura para cria√ß√£o do processo. √â poss√≠vel criar eventos ass√≠ncronos em sistemas cliente-servidor, mas isso traz complexidade ao processo e a API.&lt;/p&gt;

&lt;p&gt;Com essa duas limita√ß√µes, podemos dizer que sistemas cliente-servidor tem um alto acoplamento, pois a cada novo servi√ßo adicionado, √© preciso que outros servi√ßos saibam da sua exist√™ncia, isso significa que o cliente precisa saber quem √© o servidor e qual a interface exposta pelo servidor.&lt;/p&gt;

&lt;p&gt;Uma outra limita√ß√£o √© que quando um cliente depende de um servidor, ele est√° automaticamente diminuindo a sua disponilidade. A disponibilidade real de um servi√ßo √© definida pela multiplica√ß√£o da sua disponibilidade pela disponibilidade de todos os servi√ßos que ele depende. Isso significa que se meu servi√ßo tem uma disponibilidade de 99,9% e depende de outro com tamb√©m 99,9%, a disponibilidade real dele √© 99,8%. O n√∫mero pode parecer pequeno, mas quando colocado em minutos por ano pode surpreender. Se esse servi√ßo estiver indispon√≠vel, √© preciso que haja uma retentativa e temos mais uma complexidade no sistema que precisa se respondida: falhamos a requisi√ß√£o ou tentamos novamente? Seja qual for a resposta, estamos adicionando lat√™ncia e complexidade.&lt;/p&gt;

&lt;p&gt;Uma arquitetura cliente-servidor n√£o precisa ser obrigat√≥riamente implementada usando HTTP, mas este √© o protocolo mais comum hoje em dia a usar essa arquitura. Assim todo estilo arquitetural que usa HTTP tamb√©m √© cliente-servidor, como o REST, GraphQL e todas as implementa√ß~eos RCPs (como gRPC, SOAP, etc).&lt;/p&gt;

&lt;h1 id=&quot;uma-solu√ß√£o-desacoplada&quot;&gt;Uma solu√ß√£o desacoplada&lt;/h1&gt;

&lt;p&gt;Logo, para buscarmos uma solu√ß√£o um pouco melhor para os nossos problemas, precisamos ter tr√™s objetivos em mente:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Diminuir o acoplamento&lt;/li&gt;
  &lt;li&gt;Diminuir a lat√™ncia&lt;/li&gt;
  &lt;li&gt;Controlar a complexidade&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Esses objetivos devem ser endere√ßado durante o design do sistema. Isso significa que um sistema cliente-servidor precisaria ter sua arquitetura refatorada para alcan√ßar esses objetivos, o que n√£o √© simples e possa ser feito em um passe de m√°gica.&lt;/p&gt;

&lt;p&gt;Podemos &lt;strong&gt;diminuir o acoplamento&lt;/strong&gt; ao propor que um servi√ßo s√≥ deva conhecer a si mesmo e as mensagens que ele mesmo emite e recebe. Ele n√£o deve conhecer quais s√£o os outros servi√ßos e nem quais APIs eles implementam.&lt;/p&gt;

&lt;p&gt;Podemos &lt;strong&gt;diminuir a lat√™ncia&lt;/strong&gt; ao propor que nem todas as trocas de mensagem sejam s√≠ncronas, ao se fazer uma requisi√ß√£o, v√°rias mensagens possam ser emitidas e processos iniciado, mas a requisi√ß√£o pode retornar sem saber como esses processos terminaram.&lt;/p&gt;

&lt;p&gt;Podemos &lt;strong&gt;controlar a complexidade&lt;/strong&gt; propondo que um sistema n√£o deva controlar a chamada a outros sistemas. Cada sistema deve emitir mensagens informando o resultado do seu processamento e todo o processamento se d√° assincronamente.&lt;/p&gt;

&lt;p&gt;Observe que refatorando o design do sistema, podemos criar processos ass√≠ncronos para resolver esses problemas, mesmo com conex√µes s√≠ncronas. Essas mudan√ßas podem ser feitas por HTTP? Podem, mas a complexidade para sincronia e retentativa seria exagerada. √â preciso um Middleware que encapsule essa complexidade.&lt;/p&gt;

&lt;h1 id=&quot;caracterizando-uma-arquitetura-event-driven&quot;&gt;Caracterizando uma Arquitetura Event-Driven&lt;/h1&gt;

&lt;p&gt;Em uma EDA, cada sistema deve emitir &lt;strong&gt;Eventos&lt;/strong&gt; que capturam a mudan√ßa de estado, &lt;strong&gt;Comandos&lt;/strong&gt; para execu√ß√£o de processos ou consultas ou &lt;strong&gt;Documentos&lt;/strong&gt; que s√£o mensagem que cont√©m apenas dados. Esses eventos s√£o criados por &lt;strong&gt;Publishers&lt;/strong&gt; e podem ser consumidor por &lt;strong&gt;Subscribers&lt;/strong&gt; ou &lt;strong&gt;Streamers&lt;/strong&gt;. O fluxo de dados √© chamado de &lt;strong&gt;Stream&lt;/strong&gt;, e os Streamers s√£o processos que apenas transformam o dado j√° existente. Streamers operam em tempo real, processando mensagens assim que elas est√£o dispon√≠vel no broker. O tempo de processamento pode aumentar caso o paralelismo n√£o seja suficiente, impactando seriamente a lat√™ncia. Processos &lt;strong&gt;Subscribers&lt;/strong&gt; n√£o usam os dados podendo tamb√©m emitri eventos, nesse caso s√£o tamb√©m caracterizados como &lt;strong&gt;Subscribers&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Todo evento pertence a um, e exatamente um, &lt;strong&gt;Canal&lt;/strong&gt;. Os eventos s√£o enviados para um &lt;strong&gt;Broker&lt;/strong&gt;, que deve coordenar qual processo ir√° ler qual mensagem. Ao contr√°rio de uma API cliente-servidor, um canal pode ser qualificado como &lt;strong&gt;um-para-um&lt;/strong&gt; e &lt;strong&gt;um-para-todos&lt;/strong&gt; assim a entrega da mensagem pode ser feita at√© uma vez (&lt;em&gt;at most once&lt;/em&gt;), exatamente uma vez (&lt;em&gt;exactly one&lt;/em&gt;) ou ao menos uma vez (&lt;em&gt;at least once&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;Um evento pode ser caracterizado ainda por ser um &lt;strong&gt;Evento de Notifica√ß√£o&lt;/strong&gt; (&lt;em&gt;Event Notification&lt;/em&gt;) ou um &lt;strong&gt;Evento de Transporte de Estado&lt;/strong&gt; (&lt;em&gt;Event-Carried State Transfer&lt;/em&gt;). Um evento de notifica√ß√£o apenas informa que um evento ocorreu e o evento de transporte de estado cont√©m todas as informa√ß√µes relacionadas ao evento.&lt;/p&gt;

&lt;p&gt;Todos os tipos de eventos possuem dados no &lt;strong&gt;Corpo da Mensagem&lt;/strong&gt; (&lt;em&gt;Payload&lt;/em&gt;), assim como Headers, Metadados e Timestamps. O corpo da mensagem pode ser em qualquer formato, sendo Apache Avro, Protobuf e JSON os mais comuns.&lt;/p&gt;

&lt;p&gt;Quando temos um sistema Cliente-Servidor, algum servi√ßo ter√° que atuar como &lt;strong&gt;Orquestrador&lt;/strong&gt; fazendo a chamada e o controle de transa√ß√£o de todo o processo. Mas em um sistema Event-Driven essa fun√ß√£o n√£o existe, ao contr√°rio temos um &lt;strong&gt;Coreografia&lt;/strong&gt; em que as responsabilidades s√£o distribu√≠das e cabe ao broker enviar as mensagens em tempo real a cada sistema independentemente. Por ser um sistema naturalmente distribu√≠do, o controle de transa√ß√£o √© imposs√≠vel, quase sempre apresentando &lt;strong&gt;Consist√™ncia Eventual&lt;/strong&gt; de Dados.&lt;/p&gt;

&lt;p&gt;As transa√ß√µes podem ser implementadas com a implementa√ß√£o de um padr√£o chamado &lt;strong&gt;Sagas&lt;/strong&gt;, em que cada processamento ir√° emitir uma mensagem de sucesso e fracasso, de forma que os outros sistemas possam ser informados e possam atuar para mitigar o erro ou o pr√≥prio sistema possa fazer uma retentativa. Quando uma messagem n√£o √© processada corretamente, ela pode ser enviada para um canal especifico para que posteriormente possa haver uma retentativa, esse padr√£o √© conhecido como &lt;strong&gt;Dead Letter Queue&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Os brokers tamb√©m podem ser caracterizados como &lt;strong&gt;Message Broker&lt;/strong&gt; e &lt;strong&gt;Event Streaming&lt;/strong&gt;. Um message broker ir√° enviar a mensagem para todos os subscribers dispon√≠vel no momento que a mensagem √© gerada. J√° um event streaming armazenar√° um hist√≥rico de mensagens (em formato &lt;em&gt;log&lt;/em&gt;) para que possa ser processado posteriormente ou mesmo para possibilitar o reprocessamento dessas mensagens.&lt;/p&gt;

&lt;p&gt;Para realizar o tracking de mensagens, √© necess√°ria a cria√ß√£o de um &lt;strong&gt;Correlation ID&lt;/strong&gt; que poder√° calcular o tempo de processamento e associar o log de execu√ß√£o das aplica√ß√µes com as mensagens sendo processadas. Esse id de correla√ß√£o n√£o precisa ser armazenado na mensagem, ele pode fazer parte dos cabe√ßalhos.&lt;/p&gt;

&lt;p&gt;O canal √© a forma de armazenamento de toda informa√ß√£o existente em um broker. Para que o sistema seja suscet√≠vel a falhas, todo dado dentro dele pode ser &lt;strong&gt;replicado&lt;/strong&gt;, assim caso um broker falhe, outro pode assumir a fun√ß√£o sem preju√≠zo a execu√ß√£o. Para que o sistema escale, o canal tamb√©m pode ser &lt;strong&gt;particionado&lt;/strong&gt;, de forma que cada parti√ß√£o atue independentemente. Os canais n√£o possuem indices para navegar, todas as mensagens s√£o entregues em ordem cronol√≥gica dentro da sua parti√ß√£o.&lt;/p&gt;

&lt;p&gt;A documenta√ß√£o de uma Arquitetura Event-Driven √© complexa se usarmos as nota√ß√µes UML, mas ela pode ser mais simples se usarmos &lt;strong&gt;Business Process Model and Notation&lt;/strong&gt; (BPMN). Os processos e as mensagens podem ser documentadas, assim como as decis√µes. Para documentar a topologia dos canais existe o projeto &lt;a href=&quot;https://www.asyncapi.com/&quot;&gt;AsyncAPI&lt;/a&gt; que procura criar ferramentas de visualiza√ß√£o e documenta√ß√£o similares ao OpenAPI.&lt;/p&gt;

&lt;h1 id=&quot;conclus√£o&quot;&gt;Conclus√£o&lt;/h1&gt;

&lt;p&gt;Essa √© uma pequena descri√ß√£o de todo o ecossistema de aplica√ß√µes Event-Driven. Ela n√£o √© exaustiva, tenta focar nos conceitos e tecnologias.&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Event-Driven Architecture" /><category term="Apache Kafka" /><category term="Arquitetura" /><summary type="html">Nesse post vamos fazer uma pequena introdu√ß√£o do que √© uma Arquitetura Event-Driven (EDA) e o que a diferencia de uma arquitetura Cliente-Servidor. Mas antes de falarmos especificamente sobre EDA, vamos recapitular alguns conceitos sobre Sistemas Distribu√≠dos que podem ser muito √∫teis para caracterizar cada um dos sistemas. Recapitulando O que √© uma Arquitetura? Resumidamente, uma arquitetura √© uma abstra√ß√£o do software em execu√ß√£o em v√°rios n√≠veis. Todo software vai possuir algumas caracteristicas que podem ser associadas a alguns padr√µes comuns. Um exemplo √© quando falamos de uma aplica√ß√£o linha de comando, j√° sabemos o que significa e estamos falando de uma pequena base de c√≥digo que ser√° executada em uma m√°quina especifica. Mas se falamos de um sistema web, podemos estar falando de um conjunto de softwares que interagem entre si atrav√©s de conex√µes IP e esse sistema pode conter tamb√©m uma aplica√ß√£o de linha de comando. Tanto a arquitetura da linha de comando como do sistema web s√£o arquiteturas v√°lidas, mas em n√≠veis diferentes, quando falamos do sistema web, podemos omitir o programa de linha de comando caso ele n√£o seja relevante para o entendimento do que est√° sendo feito. √â como se tivessemos aumentando e diminuindo o zoom da nossa architetura e omitindo algumas informa√ß√µes quando elas deixam de ser relavantes no que queremos observar. Toda arquitetura ir√° conter uma s√©rie de Componentes, Conectores e Dados. Para detalhar o que √© cada um dos elementos, veja a thread abaixo que fiz no twitter em fevereiro de 2021 ao ler a tese que define a arquitetura REST. Um Estilo Arquitetural √© um conjunto regras que v√£o definir como a Arquitetura ser√° definida. Isso ir√° impactar em como os Elementos e os Conectores ser√£o desenhados.&amp;mdash; dev-roadmap (@dev_roadmap) February 6, 2021 O que √© um Estilo Arquitetural? Ao definirmos uma arquitetura, vamos encontrar alguns padr√µes em comum. Esses padr√µes s√£o definidos por um conjunto de regras e essas regras √© o que chamamos de Estilo Arquitural. Ao definir um estilo arquitural, j√° colocamos que nossa aplica√ß√£o dever√° ter alguma similaridade com outras aplica√ß√µes do mesmo estilo arquitetural. Logo definir um estilo arquitetural √© criar uma s√©rie de regras que devem ser seguidas, totalmente ou em parte, por uma aplica√ß√£o. Um estilo n√£o √© uma imposi√ß√£o, √© uma constata√ß√£o ou um direcionamento. Aplica√ß√µes devem adaptar o estilo arquitetural para tentar responder ao seu neg√≥cio, caso o estilo torne complicado resolver o problema de neg√≥cio, pode significar que a escolha do estilo est√° errada. Nesse caso, √© preciso reavaliar a arquitetura do sistema. Vamos ver como isso se d√° mais a frente. O que s√£o Sistemas Distribu√≠dos? Segundo Van Steen e Tanembaum, Sistemas distribu√≠dos s√£o um conjunto de elementos computacionais aut√¥nomos que aparentam ser um √∫nico sistema coerente para os seus usu√°rios. Esses sistemas podem ser heterog√™neos, isso significa que n√£o precisam estar rodando na mesma m√°quina, ou sistema operacional, ou mesmo n√£o precisam ser implementados na mesma linguagem. Eles interagem atrav√©s da rede usando trocas de mensagens e essa heterogeneidade √© garantida pelo Middleware. Middleware √© a camada de software que fornece abstra√ß√£o de programa√ß√£o e pode mascarar heterogeneidade. Um middleware pode ser composto por processos, bibliotecas e frameworks. Um sistema distribu√≠do pode ser s√≠ncrono ou ass√≠ncrono. Quando o sistema √© caracterizado como s√≠ncrono, significa que cada etapa de processamento tem um limite especifico de tempo, cada mensagem deve ser recebida e processada dentro de um intervalo de tempo especificado. Quando o sistema √© ass√≠ncrono, significa que n√£o h√° limita√ß√µes de tempo para o processamento. Esses sistemas podem ter conex√µes s√≠ncronas ou ass√≠ncronas. √â importante n√£o confundir conex√£o s√≠ncrona com sistema s√≠ncrono. Quando falamos de conex√£o s√≠ncrona, significa que quando um processo envia uma mensagem, ele ir√° esperar por uma resposta e uma conex√£o ass√≠ncrona significa que quando um processo envia uma mensagem, ele n√£o vai esperar por uma resposta. Conex√µes tamb√©m podem ser caracterizadas pelo n√∫mero de elementos que a comp√µes. Podemos afirma que uma conex√£o √© um-para-um (one-to-one) ou um-para-muitos (one-to-many). Quando falamos de um-para-um, dizemos que uma mesma requisi√ß√£o s√≥ ser√° processada por um componente, mas quando falamos de um-para-muitos uma mesma requisi√ß√£o pode ser processada por muitos elementos. Defini√ß√£o de uma Arquitetura Cliente-Servidor Antes de falarmos de uma Arquitetura Event-Driven precisamos entender o que √© uma Arquitetura Cliente-Servidor e quais as limita√ß√µes dela s√£o endera√ßadas. Resumidamente um sistema Cliente-Servidor √© quando cada compomente da arquitetura tem um papel bem definido, o um cliente elabora uma requisi√ß√£o, envia para um servidor que ir√° ler e responder essa requisi√ß√£o s√≠ncronamente. A conex√£o entre cliente e servidor √© s√≠ncrona e para cada requisi√ß√£o h√° uma resposta. Nessa defini√ß√£o eu coloquei em destaque que ela sempre envolve um cliente e um servidor, porque toda comunica√ß√£o cliente servidor √© um-para-um, n√£o havendo comunica√ß√£o um-para-muitos. A natureza um-para-um do estilo cliente-servidor j√° exp√µes uma das limita√ß√µes existente. Ao se adicionar um novo servidor, √© preciso que os clientes saibam da exist√™ncia dele. N√£o estou falando de inst√¢ncia, mas de tipo de servidor. Uma nova inst√¢ncia de um servidor pode ser adicionada e o processo de service discovery ir√° fazer com que o cliente encontre esse servidor, mas ele dever√° ser de um tipo ou uma API j√° conhecida pelos clientes. Outra liminta√ß√£o √© a natureza s√≠ncrona da comunica√ß√£o, pois para processos demorados ser√° necess√°rio se criar toda infraestrutura para cria√ß√£o do processo. √â poss√≠vel criar eventos ass√≠ncronos em sistemas cliente-servidor, mas isso traz complexidade ao processo e a API. Com essa duas limita√ß√µes, podemos dizer que sistemas cliente-servidor tem um alto acoplamento, pois a cada novo servi√ßo adicionado, √© preciso que outros servi√ßos saibam da sua exist√™ncia, isso significa que o cliente precisa saber quem √© o servidor e qual a interface exposta pelo servidor. Uma outra limita√ß√£o √© que quando um cliente depende de um servidor, ele est√° automaticamente diminuindo a sua disponilidade. A disponibilidade real de um servi√ßo √© definida pela multiplica√ß√£o da sua disponibilidade pela disponibilidade de todos os servi√ßos que ele depende. Isso significa que se meu servi√ßo tem uma disponibilidade de 99,9% e depende de outro com tamb√©m 99,9%, a disponibilidade real dele √© 99,8%. O n√∫mero pode parecer pequeno, mas quando colocado em minutos por ano pode surpreender. Se esse servi√ßo estiver indispon√≠vel, √© preciso que haja uma retentativa e temos mais uma complexidade no sistema que precisa se respondida: falhamos a requisi√ß√£o ou tentamos novamente? Seja qual for a resposta, estamos adicionando lat√™ncia e complexidade. Uma arquitetura cliente-servidor n√£o precisa ser obrigat√≥riamente implementada usando HTTP, mas este √© o protocolo mais comum hoje em dia a usar essa arquitura. Assim todo estilo arquitetural que usa HTTP tamb√©m √© cliente-servidor, como o REST, GraphQL e todas as implementa√ß~eos RCPs (como gRPC, SOAP, etc). Uma solu√ß√£o desacoplada Logo, para buscarmos uma solu√ß√£o um pouco melhor para os nossos problemas, precisamos ter tr√™s objetivos em mente: Diminuir o acoplamento Diminuir a lat√™ncia Controlar a complexidade Esses objetivos devem ser endere√ßado durante o design do sistema. Isso significa que um sistema cliente-servidor precisaria ter sua arquitetura refatorada para alcan√ßar esses objetivos, o que n√£o √© simples e possa ser feito em um passe de m√°gica. Podemos diminuir o acoplamento ao propor que um servi√ßo s√≥ deva conhecer a si mesmo e as mensagens que ele mesmo emite e recebe. Ele n√£o deve conhecer quais s√£o os outros servi√ßos e nem quais APIs eles implementam. Podemos diminuir a lat√™ncia ao propor que nem todas as trocas de mensagem sejam s√≠ncronas, ao se fazer uma requisi√ß√£o, v√°rias mensagens possam ser emitidas e processos iniciado, mas a requisi√ß√£o pode retornar sem saber como esses processos terminaram. Podemos controlar a complexidade propondo que um sistema n√£o deva controlar a chamada a outros sistemas. Cada sistema deve emitir mensagens informando o resultado do seu processamento e todo o processamento se d√° assincronamente. Observe que refatorando o design do sistema, podemos criar processos ass√≠ncronos para resolver esses problemas, mesmo com conex√µes s√≠ncronas. Essas mudan√ßas podem ser feitas por HTTP? Podem, mas a complexidade para sincronia e retentativa seria exagerada. √â preciso um Middleware que encapsule essa complexidade. Caracterizando uma Arquitetura Event-Driven Em uma EDA, cada sistema deve emitir Eventos que capturam a mudan√ßa de estado, Comandos para execu√ß√£o de processos ou consultas ou Documentos que s√£o mensagem que cont√©m apenas dados. Esses eventos s√£o criados por Publishers e podem ser consumidor por Subscribers ou Streamers. O fluxo de dados √© chamado de Stream, e os Streamers s√£o processos que apenas transformam o dado j√° existente. Streamers operam em tempo real, processando mensagens assim que elas est√£o dispon√≠vel no broker. O tempo de processamento pode aumentar caso o paralelismo n√£o seja suficiente, impactando seriamente a lat√™ncia. Processos Subscribers n√£o usam os dados podendo tamb√©m emitri eventos, nesse caso s√£o tamb√©m caracterizados como Subscribers. Todo evento pertence a um, e exatamente um, Canal. Os eventos s√£o enviados para um Broker, que deve coordenar qual processo ir√° ler qual mensagem. Ao contr√°rio de uma API cliente-servidor, um canal pode ser qualificado como um-para-um e um-para-todos assim a entrega da mensagem pode ser feita at√© uma vez (at most once), exatamente uma vez (exactly one) ou ao menos uma vez (at least once). Um evento pode ser caracterizado ainda por ser um Evento de Notifica√ß√£o (Event Notification) ou um Evento de Transporte de Estado (Event-Carried State Transfer). Um evento de notifica√ß√£o apenas informa que um evento ocorreu e o evento de transporte de estado cont√©m todas as informa√ß√µes relacionadas ao evento. Todos os tipos de eventos possuem dados no Corpo da Mensagem (Payload), assim como Headers, Metadados e Timestamps. O corpo da mensagem pode ser em qualquer formato, sendo Apache Avro, Protobuf e JSON os mais comuns. Quando temos um sistema Cliente-Servidor, algum servi√ßo ter√° que atuar como Orquestrador fazendo a chamada e o controle de transa√ß√£o de todo o processo. Mas em um sistema Event-Driven essa fun√ß√£o n√£o existe, ao contr√°rio temos um Coreografia em que as responsabilidades s√£o distribu√≠das e cabe ao broker enviar as mensagens em tempo real a cada sistema independentemente. Por ser um sistema naturalmente distribu√≠do, o controle de transa√ß√£o √© imposs√≠vel, quase sempre apresentando Consist√™ncia Eventual de Dados. As transa√ß√µes podem ser implementadas com a implementa√ß√£o de um padr√£o chamado Sagas, em que cada processamento ir√° emitir uma mensagem de sucesso e fracasso, de forma que os outros sistemas possam ser informados e possam atuar para mitigar o erro ou o pr√≥prio sistema possa fazer uma retentativa. Quando uma messagem n√£o √© processada corretamente, ela pode ser enviada para um canal especifico para que posteriormente possa haver uma retentativa, esse padr√£o √© conhecido como Dead Letter Queue. Os brokers tamb√©m podem ser caracterizados como Message Broker e Event Streaming. Um message broker ir√° enviar a mensagem para todos os subscribers dispon√≠vel no momento que a mensagem √© gerada. J√° um event streaming armazenar√° um hist√≥rico de mensagens (em formato log) para que possa ser processado posteriormente ou mesmo para possibilitar o reprocessamento dessas mensagens. Para realizar o tracking de mensagens, √© necess√°ria a cria√ß√£o de um Correlation ID que poder√° calcular o tempo de processamento e associar o log de execu√ß√£o das aplica√ß√µes com as mensagens sendo processadas. Esse id de correla√ß√£o n√£o precisa ser armazenado na mensagem, ele pode fazer parte dos cabe√ßalhos. O canal √© a forma de armazenamento de toda informa√ß√£o existente em um broker. Para que o sistema seja suscet√≠vel a falhas, todo dado dentro dele pode ser replicado, assim caso um broker falhe, outro pode assumir a fun√ß√£o sem preju√≠zo a execu√ß√£o. Para que o sistema escale, o canal tamb√©m pode ser particionado, de forma que cada parti√ß√£o atue independentemente. Os canais n√£o possuem indices para navegar, todas as mensagens s√£o entregues em ordem cronol√≥gica dentro da sua parti√ß√£o. A documenta√ß√£o de uma Arquitetura Event-Driven √© complexa se usarmos as nota√ß√µes UML, mas ela pode ser mais simples se usarmos Business Process Model and Notation (BPMN). Os processos e as mensagens podem ser documentadas, assim como as decis√µes. Para documentar a topologia dos canais existe o projeto AsyncAPI que procura criar ferramentas de visualiza√ß√£o e documenta√ß√£o similares ao OpenAPI. Conclus√£o Essa √© uma pequena descri√ß√£o de todo o ecossistema de aplica√ß√µes Event-Driven. Ela n√£o √© exaustiva, tenta focar nos conceitos e tecnologias.</summary></entry><entry><title type="html">Como avaliar uma API</title><link href="https://vepo.github.io/posts/como-avaliar-uma-api" rel="alternate" type="text/html" title="Como avaliar uma API" /><published>2022-01-16T00:00:00+00:00</published><updated>2022-01-16T00:00:00+00:00</updated><id>https://vepo.github.io/posts/22-14-00-como-avaliar-uma-api</id><content type="html" xml:base="https://vepo.github.io/posts/como-avaliar-uma-api">&lt;p&gt;Nos cap√≠tulos anteriores vimos as especifica√ß√µes do que √© o protocolo HTTP e do que s√£o APIs REST. Agora vamos caminhar tentando trazer mais elementos a nossas APIs. Para tentar responder a pergunta &lt;em&gt;como podemos avaliar uma API&lt;/em&gt; podemos levantar algumas poss√≠bilidades, desde a identifica√ß√£o de padr√µes e antipadroes, an√°lise da complexidade, at√© por fim chegarmos a maturidade. Ent√£o nosso primeiro desafio ser√° responder √† seguinte pergunta: &lt;em&gt;existe alguma defini√ß√£o de padr√µes de projetos para APIs REST?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Antes de responder a essa pergunta precisamos definir o que √© um padr√£o de projeto, o que √© um antipadr√£o e como eles podem nos ajudar.&lt;/p&gt;

&lt;h2 id=&quot;padr√µes-e-antipadr√µes-de-projetos&quot;&gt;Padr√µes e antipadr√µes de projetos&lt;/h2&gt;

&lt;p&gt;A primeira pergunta que vamos responder √©: &lt;em&gt;de onde vem o conceito de padr√µes de projeto&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Padr√µes n√£o surgiram na computa√ß√£o, √© um conceito importado da arquitetutra. Quando se come√ßa a pensar em uma casa, √© preciso fazer in√∫meras escolhas sobre pequenas coisas para resolver problemas triviais. Essas escolhas j√° envolvem alguns padr√µes que s√£o universais como ‚Äúporta‚Äù, ‚Äúch√£o‚Äù, ‚Äúmesa‚Äù e outros m√≥veis. Para catalogar outros padr√µes, Christopher Alexander escreveu o livro &lt;em&gt;House generated by patterns&lt;/em&gt; em 1969 em que ele descreve v√°rias estruturas arquitet√¥nicas e urban√≠sticas usando uma estrutura descritiva bem simples mostrando o contexto, a solu√ß√£o e uma an√°lise dos problemas que a solu√ß√£o pode trazer. Esse livro deu origem a outros projetos, incluindo o livro &lt;em&gt;A Pattern Language: Towns, Buildings, Construction&lt;/em&gt; de 1977, em que Alexander cria uma linguagem usando padr√µes e o conceito de Linguagem de Padr√µes. Descri√ß√£o de projetos s√£o simplificadas usando uma linguagem de padr√µes, pois ao inv√©s de descrever detalhadamente o projeto √© poss√≠vel referenciar os padr√µes j√° descritos, cada padr√£o vai apresentar a melhor solu√ß√£o at√© o momento para um determinado problema.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/http/christopher-alexanderc.png&quot; alt=&quot;Padr√£o Gradiente de Intimidade descrito no livro &amp;quot;House generated by patterns&amp;quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Em 1987, Kent Beck e Ward Cunningham escreveram o artigo &lt;a href=&quot;http://c2.com/doc/oopsla87.html&quot;&gt;&lt;em&gt;Using Pattern Languages for Object-Oriented Programs&lt;/em&gt;&lt;/a&gt; aplicando o conceito de Linguagem de Padr√µes para interfaces gr√°ficas de programas Smalltalk. No artigo apenas um padr√£o √© descrito textualmente, o ‚ÄúCollect Low-level Protocol‚Äù, mas os autores relatam que estavam descrevendo uma linguagem com mais de 150 padr√µes.&lt;/p&gt;

&lt;p&gt;Em 1994, Doug Lea publicou um artigo na revista Software Engineering Notes chamado &lt;a href=&quot;https://dl.acm.org/doi/pdf/10.1145/181610.181617&quot;&gt;&lt;em&gt;Christopher Alexander: an introduction for object-oriented designers&lt;/em&gt;&lt;/a&gt;, onde havia a adapta√ß√£o dos modelos de padr√µes urbanisticos de Christopher Alexander para o mundo do software. Nesse artigo vemos pela primeira vez a proposi√ß√£o de um formato para descri√ß√£o de padr√µes. Um padr√£o deveria ter um nome, um exemplo e uma descri√ß√£o do modelo onde deveria ser usado. Na verdade, no artigo est√£o presentes outras propriedades que em muitos casos n√£o s√£o facilmente aplicadas, como encapsulamento, generatividade, equilibrio, abstra√ß√£o, abertura e composibilidade.&lt;/p&gt;

&lt;p&gt;Com o artigo de Doug Lea, ainda em 1994, Erich Gamma, Richard Helm, Ralph Johnson e John Vlissides se juntam para escrever o livro mais conhecido sobre padr√µes &lt;em&gt;Padr√µes de Projetos: Solu√ß√µes Reutiliz√°veis de Software Orientados a Objetos&lt;/em&gt;. Nesse livro podemos encontrar a defini√ß√£o de v√°rios padr√µes encontrados em projetos de software orientado a objetos. Por ter sido escrito por quatro autores, √© popularmente conhecido como &lt;em&gt;Gang of Four&lt;/em&gt; (gangue de quatro em tradu√ß√£o livre), ou pela sigla GoF. Os padr√µes do GoF s√£o apresentados seguindo um modelo mais simples do que o proposto por Lea, cada padr√£o tem inten√ß√£o, motiva√ß√£o, aplicabilidade, estrutura, participantes, colabora√ß√µes, consequ√™ncias, implementa√ß√£o, exemplo de c√≥digo, usos conhecidos e padr√µes relacionados. Os padr√µes por sua vez s√£o divididos entre padr√µes de cria√ß√£o, estruturais e comportamentais.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚Äî E como esses padr√µes surgem?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ao contr√°rio do que se imagina, os padr√µes n√£o s√£o propostos, eles s√£o identificados. Padr√µes j√° existem em projetos como solu√ß√µes para problemas recorrentes, o que ocorre √© que eles s√£o identificados, especificados e analisados. Existem at√© confer√™ncias para apresenta√ß√µes de padr√µes, como √© o caso da &lt;em&gt;Pattern Language of Programs&lt;/em&gt;, em que padr√µes s√£o lidos e discutidos em grupos.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚Äî E para que servem esses tais padr√µes? Nunca precisei de um!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Conhecer padr√µes serve para aumentar o nosso vocabul√°rio como desenvolvedores. Padr√µes, quando descritos, j√° v√™m acompanhados de uma pr√©via discuss√£o, mas depois que s√£o propostos eles est√£o sujeitos a cr√≠tica. Alguns padr√µes recebem tanta cr√≠tica que s√£o catalogados como antipadr√µes. Mas padr√µes e antipadr√µes n√£o significam que s√£o de uso imperativo ou n√£o. Eles apenas servem para avaliarmos se uma solu√ß√£o √© boa ou n√£o. Um padr√£o tem sempre um contexto, um problema e uma solu√ß√£o, mas tamb√©m possui as an√°lises de vantagens e desvantagens que sua aplica√ß√£o traz.&lt;/p&gt;

&lt;p&gt;Quando tempos um bom repert√≥rio de padr√µes, come√ßamos a responder mais rapidamente ao desafio de escrever e revisar c√≥digo. Podemos identificar estruturas para podermos resolver os problemas de c√≥digo do dia a dia. E tamb√©m podemos identificar vantangens e desvantagens de estruturas propostas.&lt;/p&gt;

&lt;h2 id=&quot;quem-anda-escrevendo-sobre-padr√µes-rest&quot;&gt;Quem anda escrevendo sobre padr√µes REST&lt;/h2&gt;

&lt;p&gt;Antes de escrever sobre padr√µes REST, precisamos fazer uma busca para identificar e reconhecer quem j√° escreve sobre o assunto, para identificar algumas publica√ß√µes interessantes. Nossa discuss√£o vai se limitar aos tr√™s artigos a seguir, que podem trazer padr√µes e ideias interessantes sobre como avaliar uma API REST, embora todos em ingl√™s.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2014 - &lt;a href=&quot;https://link.springer.com/chapter/10.1007/978-3-662-45391-9_16&quot;&gt;Detection of REST Patterns and Antipatterns: A Heuristics-Based Approach&lt;/a&gt;: Francis Palma, Johann Dubois, Naouel Moha, and Yann-Ga√´l Gu√©h√©neuc&lt;/li&gt;
  &lt;li&gt;2017 - &lt;a href=&quot;https://ieeexplore.ieee.org/abstract/document/7930199&quot;&gt;A Framework for the Structural Analysis of REST APIs&lt;/a&gt;: Florian Haupt, Frank Leymann, Anton Scherer, Karolina Vukojevic-Haupt&lt;/li&gt;
  &lt;li&gt;2020 - &lt;a href=&quot;https://link.springer.com/chapter/10.1007/978-3-030-59155-7_32&quot;&gt;Defining Design Patterns for IoT APIs&lt;/a&gt;: Rasmus Svensson, Adell Tatrous, Francis Palma&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;O primeiro artigo prop√µe uma heur√≠stica para determina√ß√£o de padr√µes e antipadr√µes em APIs REST. Como ele foi escrito antes da proposi√ß√£o do &lt;a href=&quot;https://spec.openapis.org/oas/latest.html&quot;&gt;OpenAPI&lt;/a&gt;, em 2015, sua an√°lise n√£o se baseia em documenta√ß√µes, mas em implementa√ß√µes. Sua an√°lise prop√µe alguns padr√µes e antipadr√µes que mostraremos a seguir, assim como um algoritmo para identificar o padr√£o dentro do projeto de c√≥digo.&lt;/p&gt;

&lt;p&gt;No segundo artigo Haupt prop√µe uma an√°lise estrutural baseada na documenta√ß√£o da API usando OpenAPI. As documenta√ß√µes de APIs abertas foram analisadas por uma ferramenta para se extrair o modelo da API. Segundo Haupt, cada API constiria de uma s√©rie de recursos possuem m√©todos e relacionamentos. Ele por sua vez se baseia no &lt;em&gt;Atomic Resource Model&lt;/em&gt; e no &lt;em&gt;URI Model&lt;/em&gt;. O primeiro descreve uma API atrav√©s de seus elementos b√°sicos como recursos, verbos e representa√ß√µes. J√° o segundo modelo estende o primeiro, dando a oportunidade ao cliente da API de navegar nos recursos baseados em hyperlinks providos pela propria API. Com essa an√°lise √© possivel conhecer a complexidade da API, descrevendo quantos recursos ela possui, quantos desses s√£o &lt;em&gt;ReadOnly&lt;/em&gt; e quais as rela√ß√µes entre eles atrav√©s de links.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/http/rest-haupt.png&quot; alt=&quot;Metamodelo de uma API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;E por fim, no terceiro artigo, Svensson faz uma an√°lise de algumas APIs de mercado para IoT e prop√µes 8 padr√µes de projetos, baseado no modelo no GoF. APIs de IoT s√£o altamente voltada a recursos, pois cada dispositivo √© um recurso. Segundo Svensson, os padr√µes presentes na literatura s√£o mais voltados para garantir a qualidade RESTful das APIs e n√£o para o desenho dos endpoints, por isso todos esses padr√µes se concentram na URI.&lt;/p&gt;

&lt;h2 id=&quot;revisando-a-anatomia-de-uma-requisi√ß√£o&quot;&gt;Revisando a anatomia de uma requisi√ß√£o&lt;/h2&gt;

&lt;p&gt;Para detalhar as padr√µes de API REST, precisamos revisar como podemos subdividir uma URI. Segundo a IETF &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt;, temos os seguintes componentes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scheme://Authority/Path?Query#Fragment&lt;/code&gt;. Cada componente de uma URI tem sua especificidade e signific√¢ncia que devem ser levadas em conta na constru√ß√£o de uma API, n√≥s vimos no cap√≠tulo 3 como cada elemento √© descrito, agora vamos expandir essas defini√ß√µes.&lt;/p&gt;

&lt;p&gt;O caminho (Path) pode ser subdividdo em base (Base) e principal (Main) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scheme://Authority/Base/Main?Query&lt;/code&gt;. A base √© identificada quando existe caminhos comuns em uma API, ela pode ter uma fun√ß√£o primordial quando precisamos definir qual API e/ou qual vers√£o da API deve ser acesada. Ao se identificar a base, o principal √© o ponto crucial da requisi√ß√£o.&lt;/p&gt;

&lt;p&gt;Ainda no caminho, cada token pode ser considerado um n√≥, assim podemos assumir fun√ß√µes para cada n√≥ de uma requisi√ß√£o. Na tabela a seguir temos as v√°rias fun√ß√µes que um n√≥ pode assumir.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Nome&lt;/th&gt;
      &lt;th&gt;Descri√ß√£o&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;N√≥ de acesso&lt;/td&gt;
      &lt;td&gt;Um n√≥ que √© usado apenas para direcionar as seguintes partes do URI para uma determinada se√ß√£o da API, ou seja, n√£o √© um recurso ou dados que podem ser buscados.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N√≥ pai&lt;/td&gt;
      &lt;td&gt;Um n√≥ que geralmente representa uma categoria, um recurso que inclui recursos ou um objeto. Na API e no URI, esse n√≥ existe em uma hierarquia. Aqui, tendemos a mencionar apenas o fim da hierarquia.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N√≥ indicativo&lt;/td&gt;
      &lt;td&gt;Um n√≥ que representa uma ordem, consulta ou a√ß√£o a ser realizada em um determinado recurso para aplicar esta a√ß√£o ou conhecer uma informa√ß√£o espec√≠fica sobre esse recurso, por exemplo, filtrar os resultados de uma solicita√ß√£o feita em um determinado recurso. Podemos pensar nisso como um ponto final que dispara uma fun√ß√£o. Geralmente √© uma palavra convencional, como info, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;criar&lt;/code&gt;), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;first&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;primeiro&lt;/code&gt;), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;last&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ultimo&lt;/code&gt;), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status&lt;/code&gt; etc. N√≥s indicativos podem ser divididos em tr√™s categorias: n√≥s de a√ß√£o, n√≥s de filtro e n√≥s informacionais&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N√≥s de a√ß√£o&lt;/td&gt;
      &lt;td&gt;Um n√≥ usado para acionar uma fun√ß√£o espec√≠fica ou aplicar funcionalidades cl√°ssicas de CRUD em um recurso, usando qualquer m√©todo de solicita√ß√£o HTTP. Na maioria dos casos, esses n√≥s assumem a forma de um pedido para realizar uma a√ß√£o, por exemplo, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clone&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upload&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;consume&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N√≥s de filtro&lt;/td&gt;
      &lt;td&gt;Um n√≥ usado para direcionar um grupo espec√≠fico ou estado dos recursos solicitados.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;N√≥s informacionais&lt;/td&gt;
      &lt;td&gt;Um n√≥ usado para obter informa√ß√µes sobre metadados para um ou v√°rios recursos. Esses metadados n√£o podem ser modificados diretamente nem acess√≠veis por meio do recurso&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A classifica√ß√£o da autoridade tamb√©m pode ser estendida, por exemplo, Svensson a classifica como din√¢mica e est√°tica.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Din√¢mica&lt;/strong&gt;: o mesmo valor √© usado para todos os recursos controlado pela API.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Est√°tica&lt;/strong&gt;: valores s√£o gerados para controlar grupo de recursos.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;CRUD&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Todo recurso aceita um conjunto de opera√ß√µes. Quando usamos o termo CRUD estamos nos referindo ao conjunto mais comum de opera√ß√µes &lt;strong&gt;C&lt;/strong&gt;reate, &lt;strong&gt;R&lt;/strong&gt;ead, &lt;strong&gt;U&lt;/strong&gt;pdate e &lt;strong&gt;D&lt;/strong&gt;elete (criar, ler, apagar e remover). Essa sigla √© muito associada a interfaces gr√°ficas, mas ela tamb√©m pode ser aplicada a uma API. Apesar de existirem essas quatro opera√ß√µes b√°sicas, um recurso pode ter outras opera√ß√µes como habilitar/desabilitar, associar/desassociar etc. Opera√ß√µes dependem da l√≥gica de neg√≥cios, por isso cada aplica√ß√£o deve definir o conjunto de opera√ß√µes que seu recurso aceita.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;encontrando-os-padr√µes&quot;&gt;Encontrando os padr√µes&lt;/h2&gt;

&lt;p&gt;Na literatura citada anteriormente, vamos listar alguns padr√µes. Eles ser√£o detalhados usando um modelo mais simples que o proposto pelo GoF, cada padr√£o o seu nome, propositor, for√ßas, vantagens e desvantagens. Cada padr√£o ter√° uma breve descri√ß√£o com marca√ß√µes em negrito, elas se referem a termos chaves da descri√ß√£o. Estes s√£o os padr√µes que vamos apresentar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Vincula√ß√£o de entidades&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Cache de resposta&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Negocia√ß√£o de Conte√∫do&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Redirecionamento de end-point&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;End-point da Entidade&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;URI direcionado antecipadamente&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Requisi√ß√£o Expressa&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;‚Äòme‚Äô Recurso Acess√≠vel&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Acessibilidade dos Metadados&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Filtragem Proativa&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;API versionada&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Recursos versionados&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cada padr√£o ser√° descrito usando o exemplo da API para bibliotecas que criamos no cap√≠tulo passado.&lt;/p&gt;

&lt;h3 id=&quot;vincula√ß√£o-de-entidades&quot;&gt;Vincula√ß√£o de entidades&lt;/h3&gt;

&lt;p&gt;Esse padr√£o permite a &lt;strong&gt;comunica√ß√£o em tempo de execu√ß√£o&lt;/strong&gt; atrav√©s de &lt;strong&gt;links&lt;/strong&gt; providos pelo servidor no corpo da resposta ou via &lt;strong&gt;Location:&lt;/strong&gt;, no cabe√ßalho da resposta. Usando hyperlinks, a depend√™ncia entre cliente e servidor √© reduzida permitindo ao cliente &lt;strong&gt;automaticamente encontrar&lt;/strong&gt; as &lt;strong&gt;entidades relacionadas&lt;/strong&gt; em &lt;strong&gt;tempo de execu√ß√£o&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A URI de recursos rec√©m-criados devem ser conhecida pelo cliente&lt;/li&gt;
  &lt;li&gt;Recursos precisam ser relacionados entre si&lt;/li&gt;
  &lt;li&gt;A API deve prover rela√ß√µes, n√£o apenas dados&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a√ß√µes a que uma entidade pode ser submetida devem ser independentes do cliente. A API deve fornecer informa√ß√µes suficientes para que o cliente consiga compreender as a√ß√µes que pode realizar com uma entidade.&lt;/p&gt;

&lt;p&gt;As entidades relacionadas a uma determinada entidade tamb√©m devem ser independentes do cliente. Se as rela√ß√µes entre entidades n√£o forem fornecidas pela API, cada cliente deve implementar as rela√ß√µes, acarretando em c√≥digo duplicado, acoplamento de vers√µes e propaga√ß√£o de bugs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ao acessar ou criar uma entidade, o servidor pode enviar o URL da mesma, de todas entidades relacionadas e poss√≠veis a√ß√µes dentro do corpo da resposta ou atrav√©s dos cabe√ßalhos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Location&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Link&lt;/code&gt;. A &lt;a href=&quot;https://tools.ietf.org/html/rfc5988&quot;&gt;RFC 5988 - Web Linking&lt;/a&gt; trata do caso de se usar o cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Link&lt;/code&gt;, no caso h√° um proposi√ß√£o de formato que pode ser usado tamb√©m no cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Location&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;POST /tiquete HTTP 1.1
Host: tiquetes.com.br
Content-Type: application/json

{
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;]
}

201 Created
Location: tiquetes.com.br/tiquete/6942
Link: &amp;lt;Autor&amp;gt;;rel=&quot;/tiquete/autor/215&quot;;title=&quot;Victor Os√≥rio&quot;,&amp;lt;Projeto&amp;gt;;rel=&quot;/projeto/proj-001&quot;;title=&quot;T√≠quetes.COM.BR&quot;,&amp;lt;TAG&amp;gt;;rel=&quot;/tag/java&quot;;title=&quot;Java&quot;,&amp;lt;TAG&amp;gt;;rel=&quot;/tag/rest&quot;;title=&quot;REST&quot;,&amp;lt;TAG&amp;gt;;rel=/tag/crud;title=&quot;CRUD&quot;;&amp;lt;EPICO&amp;gt;;rel=/epico/criar-tiquete;title=&quot;Criar T√≠quete&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uma outra poss√≠vel apresenta√ß√£o para esse padr√£o √© inseri-lo dentro do corpo da mensagem. Esse padr√£o √© proposto pelo &lt;em&gt;HATEOAS&lt;/em&gt; (que significa &lt;em&gt;Hypermedia as the Engine of Application State&lt;/em&gt;) e pode ser aplicado inserindo o campo link ao objeto retornado.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6942&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;titulo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Erro ao criar T√≠quete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;descricao&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;projeto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PRJ-001&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;epico&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CRIAR-TIQUETE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Java&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;REST&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CRUD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;links&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/tiquete/6942&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;self&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;href&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/tiquete/6942/responsavel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;rel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;responsavel_associar&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cache-de-resposta&quot;&gt;Cache de resposta&lt;/h3&gt;

&lt;p&gt;O cacheamento da resposta √© uma boa pr√°tica para &lt;strong&gt;evitar enviar requisi√ß√µes duplicadas&lt;/strong&gt; e &lt;strong&gt;respostas&lt;/strong&gt; atrav√©s do cacheamento de todas as mensagens no &lt;strong&gt;local&lt;/strong&gt; da m√°quina do cliente. S√£o usados os cabe√ßalhos &lt;strong&gt;Cache-Control&lt;/strong&gt; e &lt;strong&gt;ETag&lt;/strong&gt;, assim como o &lt;strong&gt;c√≥digo HTTP 304&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O servidor precisa de meios para evitar processamento desnecess√°rio&lt;/li&gt;
  &lt;li&gt;O cliente pode armazenar informa√ß√£o localmente&lt;/li&gt;
  &lt;li&gt;O cliente deve prover uma ferramenta para validar se o dado que possui √© o mais recente&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;APIs com elevada demanda de requisi√ß√µes devem encontrar meios de reduzir a quantidade de processamento e mem√≥ria utilizada. Dessa forma recursos podem ser acessados por v√°rios clientes ao mesmo tempo, sem que seja necess√°rio o processamento completo da requisi√ß√£o no servidor, mas cada cliente deve ter sempre a vers√£o mais atualizada do recurso desejado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Essa solu√ß√£o j√° foi demonstrada no cap√≠tulo &lt;strong&gt;Discutindo o protocolo&lt;/strong&gt;, onde vimos que o correto uso do cache pode evitar tanto uma sobrecarga do servidor quanto erros de concorr√™ncia ao se alterar um recurso. Em ambos os casos se usa o cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para evitar a sobrecarga do servidor, toda entidade pass√≠vel de cache deve vir com um valor de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETag&lt;/code&gt;. Este valor pode ser um n√∫mero sequencial ou o hash do conte√∫do da entidade. Assim quando for necess√°rio acessar o conte√∫do novamente o servidor saber√° que o cliente j√° tem o conte√∫do dessa requisi√ß√£o e se este est√° atualizado ou n√£o.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /tiquete/6942 HTTP 1.1
ETag: &quot;8199bab3962576d495a6d2a4ac48abfa&quot;


304 Not Modified
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Para evitar problemas de concorr√™ncia, uma opera√ß√£o pode ser feita usando o cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;If-Match&lt;/code&gt;, assim a opera√ß√£o s√≥ poder√° ser realizada se n√£o houve nenhuma altera√ß√£o no estado da entidade.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;PATCH /tiquete/6942 HTTP 1.1
If-Match: &quot;8199bab3962576d495a6d2a4ac48abfa&quot;
Content-Type: application/json

{
    &quot;projeto&quot;: &quot;PRJ-002&quot;
}

&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;412&lt;/span&gt; &lt;span class=&quot;ne&quot;&gt;Precondition Failed&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Sat, 27 Feb 2021 16:12:02 GMT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;negocia√ß√£o-de-conte√∫do&quot;&gt;Negocia√ß√£o de Conte√∫do&lt;/h3&gt;

&lt;p&gt;Esse padr√£o suporta &lt;strong&gt;representa√ß√µes alternativas para recursos&lt;/strong&gt; (por exemplo, em &lt;strong&gt;json&lt;/strong&gt;, &lt;strong&gt;xml&lt;/strong&gt;, &lt;strong&gt;pdf&lt;/strong&gt; etc.) assim. o servi√ßo consumidor se torna mais flex√≠vel com alta reutiliza√ß√£o. Servidores podem prover recursos em &lt;strong&gt;qualquer formato padr√£o&lt;/strong&gt; requerido pelos clientes. Esse padr√£o √© aplicado atrav√©s dp &lt;strong&gt;HTTP Media Types&lt;/strong&gt; e permite aos usu√°rios da API terem mais liberdade de implementa√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Uma mesma API pode prover recursos para v√°rios clientes&lt;/li&gt;
  &lt;li&gt;Uma mesma API pode prover recursos atrav√©s de v√°rios formatos&lt;/li&gt;
  &lt;li&gt;O formato pode ser usado para exportar recursos em formatos espec√≠ficos como planilhas e documentos PDF&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alguns clientes t√™m limita√ß√µes de biblioteca de serializa√ß√£o. Em certos clientes h√° somente a op√ß√£o de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JSON&lt;/code&gt; e em outros somente &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XML&lt;/code&gt;, em outro caso, o cliente vai requerer a exporta√ß√£o de certas entidades em v√°rios formatos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PDF&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XLS&lt;/code&gt; ou qualquer outro formado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Essa solu√ß√£o j√° foi demonstrada no cap√≠tulo &lt;strong&gt;Discutindo o protocolo&lt;/strong&gt;. Ao cliente √© poss√≠vel escolher qual o formato de m√≠dia que este deseja receber, basta usar o cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content&lt;/code&gt;. Essa solu√ß√£o pode ser feita tanto para troca de mensagens como para o download de recursos. No primeiro caso se aplica quando o cliente tem alguma limita√ß√£o de serializa√ß√£o e o segundo √© quando o cliente deseja um formato especifico. No caso a seguir vamos mostrar como fazer o download em formato EPUB, o formato poderia ser escolhido pelo cliente.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /tiquete/6942 HTTP 1.1
Content: application/pdf

200 OK
[Conte√∫do em format PDF]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;redirecionamento-de-end-point&quot;&gt;Redirecionamento de end-point&lt;/h3&gt;

&lt;p&gt;A funcionalidade de redirecionamento atrav√©s da web √© suportado por este padr√£o, que tamb√©m desempenha um papel importante como meio de &lt;strong&gt;composi√ß√£o de servi√ßos&lt;/strong&gt;. Para redirecionar clientes, o servidor envia uma nova localidade para acompanhar um dos c√≥digos HTTP entre 301, 302, 307 ou 308. O principal benef√≠cio desse padr√£o √© que um servi√ßo alternativo continua ativo mesmo que o endpoint requerido n√£o responda.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Uma API pode mudar sua topologia e o cliente deve identificar essa mudan√ßa&lt;/li&gt;
  &lt;li&gt;Identificadores de recursos podem ser alterados e a API deve informar essa mudan√ßa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nem sempre identificadores s√£o imut√°veis, em alguns casos eles podem ser alterados. Entidades podem ser localizada a partir de campos alter√°veis, ou seja, sempre que um identificador for alterado o identificador antigo deve redirecionar para o novo. Em outros casos a API pode mudar a sua topologia, criando novos formatos de URI, mas mesmo assim ele pode responder a requisi√ß√µes usando a topologia antiga.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A solu√ß√£o √© usar o c√≥digo de estato 301 associado ao cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Location&lt;/code&gt;, conforme definido no protocolo HTTP. Para exemplificar, vamos mostrar o caso mais comum, quando um recurso muda de identificador.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /epico/criar-tiquete HTTP 1.1

301 Moved Permanently
Location: /epico/crud-tiquete
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;end-point-da-entidade&quot;&gt;End-point da Entidade&lt;/h3&gt;

&lt;p&gt;Servi√ßos com um √∫nico &lt;strong&gt;endpoint&lt;/strong&gt; s√£o pouco granulares. Usualmente, um cliente requer ao menos &lt;strong&gt;dois identificadores&lt;/strong&gt;: um &lt;strong&gt;global&lt;/strong&gt; para o &lt;strong&gt;servi√ßo&lt;/strong&gt; em si e um &lt;strong&gt;local&lt;/strong&gt; para o &lt;strong&gt;recurso ou entidade&lt;/strong&gt; gerenciada pelo servi√ßo. Aplicando esse padr√£o, isto √©, usando &lt;strong&gt;multiplos endpoints&lt;/strong&gt;, cada entidade (ou recurso) de um servi√ßo incorporado pode ter seu &lt;strong&gt;identicador √∫nico&lt;/strong&gt; e &lt;strong&gt;endere√ßo global&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cada recurso deve ter seu end-point espec√≠fico&lt;/li&gt;
  &lt;li&gt;Entidades devem ser encontradas diretamente&lt;/li&gt;
  &lt;li&gt;Entidades devem ser cacheadas atrav√©s do seu end-point&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Recursos que compartilham end-point tornam o cache impratic√°vel, al√©m de inserir complexidade desnecess√°ria a uma API. Cada recurso deve ter seu end-point √∫nico, assim ele pode ser acessado diretamente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cada entidade dever√° ter um end-point associado para retornar as informa√ß√µes pode identificador. Assim &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tiquete/:id:&lt;/code&gt; vai retornar as informa√ß√µes do t√≠quete conforme seu identificador, a mesma regra deve valer para sprint (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sprint/:id:&lt;/code&gt;), √©pico (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/epico/:id:&lt;/code&gt;) e assim por diante.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /tiquete/6942 HTTP 1.1

{
    &quot;id&quot;: 6942,
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;]
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;uri-direcionado-antecipadamente&quot;&gt;URI direcionado antecipadamente&lt;/h3&gt;

&lt;p&gt;Para direcionar a requisi√ß√£o da URI para um &lt;strong&gt;grupo espec√≠fico&lt;/strong&gt; e √∫nico dentro da API. Pode ser um ID de organiza√ß√£o, c√≥digo de √°rea ou nome de servidor. Normalmente √© usado um &lt;strong&gt;nome vari√°vel no come√ßo da Autoridade&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;APIs podem fazer o balanceamento de carga de requisi√ß√µes usando a autoridade&lt;/li&gt;
  &lt;li&gt;APIs devem poder agrupar seus recursos atrav√©s de identificadores l√≥gicos&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Algumas APIs requerem agrupamentos l√≥gicos que v√£o impactar n√£o somente a distribui√ß√£o dos recursos, mas toda a l√≥gica da API. Requisi√ß√µes direcionadas a esses agrupamentos l√≥gicos v√£o acarretar em estatisticas separadas, assim como limita√ß√µes de quotas ou controle de acesso. Existe uma entidade raiz onde todas as outras entidades que ser√£o cadastradas pertencem a essa entidade raiz n√£o podendo ser compartilhadas com as outras entidades raiz.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para cada entidade raiz, deve ser criada uma nova autoridade. Vamos supor que podemos cadastrar um produto nova. Cada produto ter√° seu identificador que deve ser usado na URL para acessar a API referente a ele.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;POST /produto HTTP 1.1
Host: tiquetes.com.br
Content-Type: application/json

{
    &quot;id&quot;: &quot;biblioteca&quot;,
    &quot;nome&quot;: &quot;Gest√£o de emprestimo de livros&quot;,
    &quot;descri√ß√£o&quot;: &quot;API para gest√£o de emprestimo de livros. Dever√° ser usado por v√°rias bibliotecas&quot;
}

201 Created
Location: https://biblioteca.tiquetes.com.br
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;requisi√ß√£o-expressa&quot;&gt;Requisi√ß√£o Expressa&lt;/h3&gt;

&lt;p&gt;Para executar as funcionalidades cl√°ssicas do CRUD ou executar uma &lt;strong&gt;fun√ß√£o espec√≠fica&lt;/strong&gt; em um recurso, ao mesmo tempo em que declara claramente a finalidade do URI e n√£o apenas se baseia no m√©todo usado atrav√©s de um &lt;strong&gt;N√≥ de A√ß√£o&lt;/strong&gt; na se√ß√£o &lt;em&gt;Main&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Opera√ß√µes em alguns recursos devem ser expl√≠citas&lt;/li&gt;
  &lt;li&gt;Os verbos do protocolo HTTP s√£o limitados a opera√ß√µes de CRUD&lt;/li&gt;
  &lt;li&gt;Alguns recursos possuem opera√ß√µes que s√£o espec√≠ficas do modelo de neg√≥cios da aplica√ß√£o&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A URI deve declarar expressamente qual opera√ß√£o est√° sendo realizada. Opera√ß√µes de remo√ß√£o devem ser ter informa√ß√µes associadas a opera√ß√£o. Certas entidades s√£o pass√≠veis de v√°rios tipos de a√ß√µes: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;checkout&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reserva&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compra&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;venda&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para expressar qual opera√ß√£o est√° sendo feita, cada opera√ß√£o deve ter um identificador e este deve ser usado como um n√≥ de a√ß√£o do final do end-point da entidade.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;PUT /tiquete/6942/assumir HTTP 1.1

{
    &quot;usuario&quot;: 732
}

200 OK
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;me-recurso-acess√≠vel&quot;&gt;‚Äòme‚Äô Recurso Acess√≠vel&lt;/h3&gt;

&lt;p&gt;Para apontar para o usu√°rio autenticado no momento ao solicitar recursos ou executar a√ß√µes √†s quais este usu√°rio tem acesso, use um n√≥ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;me&lt;/code&gt; no in√≠cio da se√ß√£o &lt;em&gt;Main&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A API deve fornecer as informa√ß√µes do usu√°rio autenticado&lt;/li&gt;
  &lt;li&gt;Recursos especiais devem ser encontrados atrav√©s de endpoints especificos&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Certas regras de neg√≥cios podem requerer end-points personalizados. Esses end-points v√£o retornar recursos especificos e o end-point pode encapsular regras de neg√≥cios complexas como consultas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O caso mais comum desse padr√£o √© o end-point &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/me&lt;/code&gt; que retorna os dados do usu√°rio autenticado. Para nosso sistema, podemos criar o end-point &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tiquete/meus&lt;/code&gt; que retorna todos os t√≠quetes com que o usu√°rio logado est√° relacionado. Esse end-point pode ainda ter um filtro &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tiquete/meus/ativos&lt;/code&gt; que retorna apenas os tiquetes ativos da consulta anterior.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /me HTTP 1.1

{
    &quot;id&quot;: 319,
    &quot;nome&quot;: &quot;Victor Os√≥rio&quot;,
    &quot;usuario&quot;: &quot;vepo&quot;
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;acessibilidade-dos-metadados&quot;&gt;Acessibilidade dos Metadados&lt;/h3&gt;

&lt;p&gt;Para ler informa√ß√µes, principalmente usando o m√©todo GET, sobre metadados para um √∫nico ou v√°rios recursos, como: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;count&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;state&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status&lt;/code&gt; ou outros dados que &lt;strong&gt;n√£o podem ser modificados&lt;/strong&gt; diretamente nem acess√≠veis por meio de um recurso, o URI pode ter um n√≥ informativo significativo no final da se√ß√£o &lt;em&gt;Main&lt;/em&gt; como uma indica√ß√£o para as informa√ß√µes solicitadas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recursos possuem metadados que podem apenas ser consultados&lt;/li&gt;
  &lt;li&gt;Metadados dependem de recursos&lt;/li&gt;
  &lt;li&gt;Metadados n√£o fazem parte das informa√ß√µes do recurso&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Metadados s√£o entidades que s√£o controladas pela API, o cliente pode apenas consultar os metadados. A maioria das necessidades de neg√≥cio n√£o dependem de metadados, logo eles n√£o devem ser retornados juntamente ao recurso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Os metadados s√£o expostos por um end-point adicionando um n√≥ informacional ao end-point do recurso. Assim as estat√≠sticas de um projeto podem ser lidos atrav√©s de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/projeto/:id:/estatisticas&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /projeto/proj-001/estatisticas HTTP 1.1

{
    &quot;colaboradores&quot;: 12,
    &quot;horasTrabalhadas&quot;: 612,
    &quot;mediaTimeToMarketEmDias&quot;: 12
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;filtragem-proativa&quot;&gt;Filtragem Proativa&lt;/h3&gt;

&lt;p&gt;Para direcionar um &lt;strong&gt;grupo espec√≠fico&lt;/strong&gt; ou &lt;strong&gt;estado do recurso&lt;/strong&gt; solicitado sem depender de um par√¢metro de consulta dedicado, use um n√≥ de filtro na se√ß√£o &lt;em&gt;Main&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Consultas comuns devem ser facilitadas&lt;/li&gt;
  &lt;li&gt;Consutlas comuns devem ter sua l√≥gica implementada pela API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Todo sistema possui um conjunto de consultas que s√£o executadas diversas vezes, mas cuja l√≥gica √© complicada. Para esses casos, devem existir filtros padr√µes na API, as regras de neg√≥cios devem ser encapsuladas pela API, sendo acessados diretamente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Esses filtros podem ser expressos como n√≥s informacionais adicionados a end-point de recursos. Por exemplo, para se requerer todos os t√≠quetes pendentes para o sprint que o usu√°rio logado est√° participando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sprint/atual/pendentes&lt;/code&gt;, esse mesmo padr√£o pode ser usado para qualquer sprint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sprint/:id:/pendentes&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /sprint/atual/pendentes HTTP 1.1


[{
    &quot;id&quot;: 6942,
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;]
}, {
    &quot;id&quot;: 6948,
    &quot;titulo&quot;: &quot;Associar T√≠quete a Sprint&quot;,
    &quot;descricao&quot;: &quot;Criar endpoint para associar t√≠quete a um sprint especifico&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;SPRINT&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;]
}, {
    &quot;id&quot;: 6953,
    &quot;titulo&quot;: &quot;Tela de consulta de T√≠quetes&quot;,
    &quot;descricao&quot;: &quot;Criar tela de consulta de t√≠quetes, deve ser poss√≠vel consultar tiquete por todos os campos&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;FRONTEND&quot;,
    &quot;tags&quot;: [&quot;Javascript&quot;, &quot;Frontend&quot;]
}]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;api-versionada&quot;&gt;API versionada&lt;/h3&gt;

&lt;p&gt;A diferencia√ß√£o de vers√£o da API √© feita na request. Esta pode ser feita com base em um n√≥ no &lt;em&gt;Base&lt;/em&gt;, que representa a vers√£o. Essa diferencia√ß√£o tamb√©m pode ser feita por um par√¢metro na Query.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Clientes legados ainda usam vers√µes antigas da API&lt;/li&gt;
  &lt;li&gt;A evolu√ß√£o da API gera a necessidade de uma refatora√ß√£o dos recursos da API&lt;/li&gt;
  &lt;li&gt;API complexa precisa ser reestruturada&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Proposta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A API possui uma grande base de clientes legados que n√£o v√£o se adaptar a uma refatora√ß√£o, logo o time de desenvolvimento deve menter diversas vers√£o da mesma API em produ√ß√£o.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para se manter diversas vers√µes ativas, existem v√°rias abordagens poss√≠veis. A abordagem mais simples √© colocar a vers√£o (ou data) como par√¢metro da Query, essa op√ß√£o √© v√°lida somente se a refatora√ß√£o foi na l√≥gica de neg√≥cios ou no corpo da requisi√ß√£o. Essa abordagem n√£o vai funcionar para casos em que a topologia dos end-points foi modificada.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /tiquete/6942?versao=2 HTTP 1.1

{
    &quot;id&quot;: 6942,
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;],
    &quot;subtasks&quot;: [{
        &quot;id&quot;: 6982,
        &quot;title&quot;: &quot;Adicionar valida√ß√£o de tags no frontend&quot;
    }, {
        &quot;id&quot;: 6983,
        &quot;title&quot;: &quot;Adicionar valida√ß√£o de tags no backend&quot;
    }]
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A outra possibilidade √© colocar a vers√£o como um n√≥ do caminho &lt;em&gt;Base&lt;/em&gt;. Esse n√≥ pode ser constru√≠do iniciando com o caractere &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v&lt;/code&gt; seguido do n√∫mero da vers√£o para se diferenciar de um identificador. Esse n√∫mero pode ser um inteiro sequencial ou seguir o formato &lt;a href=&quot;https://semver.org/lang/pt-BR/&quot;&gt;&lt;em&gt;Semantic Versioning&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /v2/tiquete/6942 HTTP 1.1

{
    &quot;id&quot;: 6942,
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;]
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;recursos-versionados&quot;&gt;Recursos versionados&lt;/h3&gt;

&lt;p&gt;Nesse padr√£o, os recursos podem ter vers√µes. Quando um recurso √© alterado, as vers√µes antigas dele podem ser acessadas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For√ßas&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cada recurso deve fornecer a possibilidade de versionamento&lt;/li&gt;
  &lt;li&gt;Dados n√£o podem ser exclu√≠dos e altera√ß√µes devem ser rastreadas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Problema&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Todas as informa√ß√µes de um recursos s√£o importantes, nenhuma altera√ß√£o deve apagar informa√ß√µes e vers√µes antigas do mesmo recurso devem estar dispon√≠veis atrav√©s da API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solu√ß√£o&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para resolver esse problema, cada end-point de entidade pode aceitar alguns n√≥s informativos. O primeiro deles listar√° todas as vers√µes dispon√≠veis, e o segundo deles acessar√° o conte√∫do da vers√£o. Assim &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tiquete/6942/versoes&lt;/code&gt; vai listar as ver√µes e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tiquete/6942/versoes/4&lt;/code&gt; vai acessar o conte√∫do da vers√£o 4 desse t√≠quete.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /v2/tiquete/6942/versoes/4 HTTP 1.1

{
    &quot;id&quot;: 6942,
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;]
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Em extens√£o a esse padr√£o, o end-point da entidade pode retornar a vers√£o atual do recurso usando um cabe√ßalho. N√£o h√° nenhum cabe√ßalho definido pelo protocolo HTTP para definir a vers√£o da entidade; alguns usam o cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETag&lt;/code&gt;, mas ele n√£o tem esse proposito. Como a vers√£o √© espec√≠fica da l√≥gica da aplica√ß√£o, poder√≠amos definir um cabe√ßalho usando o prefixo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X-&lt;/code&gt;, mas essa pr√°tica foi definida como antipadr√£o pela RFC-6648. Logo √© necess√°rio que esse cabe√ßalho seja definido pela aplica√ß√£o como um cabe√ßalho comum, talvez &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Entity-Version&lt;/code&gt;, usando um n√∫mero sequencial.&lt;/p&gt;

&lt;div class=&quot;language-http highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;GET /v2/tiquete/6942 HTTP 1.1

Entity-Version: 6

{
    &quot;id&quot;: 6942,
    &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;,
    &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;,
    &quot;causaRaiz&quot;: &quot;T√≠quetes sem nenhuma tag associada geram um excess√£o n√£o tratada na API.&quot;,
    &quot;solucaoProposta&quot;: &quot;1. Adicionar valida√ß√£o backend\n2.Adicionar valida√ß√£o frontend&quot;
    &quot;projeto&quot;: &quot;PRJ-001&quot;,
    &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;,
    &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;]
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;encontrando-antipadr√µes&quot;&gt;Encontrando antipadr√µes&lt;/h2&gt;

&lt;p&gt;Agora podemos inverter a pergunta: &lt;em&gt;dados os padr√µes existente na literatura, quais devemos evitar?&lt;/em&gt; Isso √© o que chamamos de antipadr√µes. S√£o solu√ß√µes comuns para problemas rotineiros, mas que n√£o apresentam um resultado √≥timo.&lt;/p&gt;

&lt;p&gt;Muitos desenvolvedores t√™m preconceito com o termo ‚Äúantipadr√£o‚Äù. Mas eles se tratam de cr√≠ticas construitivas. Em muitos casos devem ser interpretados como um aviso de cuidado, n√£o como uma proibi√ß√£o categ√≥rica. Antipadr√µes n√£o existem porque algu√©m n√£o gostou, existem porque foram levantados v√°rios argumentos de que eles n√£o devem ser utilizados em determinados contextos. Por isso, ao apresentar um antipadr√£o vamos sempre descrever quais s√£o as desvantagens que eles trazem ao serem usados, cabendo ao desenvolvedor ou √† desenvolvedora decidir se deve usar ou n√£o.&lt;/p&gt;

&lt;p&gt;Fizemos um levantamentos de antipadr√µes dentro da literatura analisada, os termos em negrito s√£o destaques da pr√≥pria literatura. Para apresentar, n√£o vamos seguir o modelo dos padr√µes, vamos apenas apresentar uma lista de desvantagens para cada antipadr√£o e, em alguns casos, exemplos pessoais que j√° implementei. Esta √© a lista de antipadr√µes que vamos apresentar:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Quebrando a autodescri√ß√£o&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Esquecendo a Hiperm√≠dia&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ignorando o cache&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ignorando os MIME Types&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ignorando o Status Code&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;T√∫nel atrav√©s de GET&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;T√∫nel atrav√©s de POST&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Autentica√ß√£o como Consulta&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;quebrando-a-autodescri√ß√£o&quot;&gt;Quebrando a autodescri√ß√£o&lt;/h3&gt;

&lt;p&gt;Desenvolvedores de APIs REST tendem a ignorar os &lt;strong&gt;cabe√ßalhos padr√£o&lt;/strong&gt;, &lt;strong&gt;formatos&lt;/strong&gt; e &lt;strong&gt;protocolos&lt;/strong&gt; e criam customiza√ß√µes proprias. Esta pr√°tica quebra o car√°ter autodescritivo e a mensagem contida no cabe√ßalho. A aus√™ncia do car√°ter autodescritivo limita a &lt;strong&gt;reutiliza√ß√£o&lt;/strong&gt; e a &lt;strong&gt;adaptabilidade&lt;/strong&gt; do recurso REST.&lt;/p&gt;

&lt;p&gt;Esse erro √© muito comum, n√£o podemos discutir as ocorr√™ncias deles porque isso seria fruto de uma enorme pesquisa em bases de c√≥digos que pela pr√≥pria natureza do antipadr√£o seria impratic√°vel. Mas podemos discutir o motivo que ele acontece.&lt;/p&gt;

&lt;p&gt;O gatilho desse antipadr√£o √© composto por dois fatores muito importantes: pouco tempo e pouco conhecimento. Quando um time sem experi√™ncia em REST tem pouco tempo para implementar uma funcionalidade, h√° a tenta√ß√£o de n√£o se fazer um design pr√©vio e um consulta a documenta√ß√µes ou especifica√ß√µes.&lt;/p&gt;

&lt;p&gt;Por volta de 2008 trabalhei em um projeto em que era preciso implementar um controle de concorr√™ncia e o arquiteto do time prop√¥s que cada recurso deveria ter um campo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lastUpdate&lt;/code&gt;. Esse campo deveria ser enviado para o formul√°rio de edi√ß√£o e usado durante a opera√ß√£o de atualiza√ß√£o. Se o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lastUpdate&lt;/code&gt; enviado pela requisi√ß√£o fosse diferente do salvo na base de dados, deveria ser exibido um erro para o usu√°rio. Perceba que essa √© exatamente a fun√ß√£o do cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETag&lt;/code&gt;, mas na √©poca o framework utilizado n√£o permitia a cria√ß√£o de requisi√ß√µes REST, logo uma aplica√ß√£o simulava aplica√ß√µes desktop.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Desenvolvedores que usam a API n√£o compreender√£o as especifidades&lt;/li&gt;
  &lt;li&gt;Bibliotecas e frameworks apresentar√£o dificuldades para serem integrados, e se essas funcionalidades j√° forem integradas por padr√£o ser√° preciso reimplementar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;esquecendo-a-hiperm√≠dia&quot;&gt;Esquecendo a Hiperm√≠dia&lt;/h3&gt;

&lt;p&gt;A falta de hiperm√≠dia, ou seja, a n√£o vincula√ß√£o de recursos, dificulta a transi√ß√£o de estado para aplicativos REST. Uma poss√≠vel indica√ß√£o deste antipadr√£o √© a aus√™ncia de links de URL na representa√ß√£o de origem, o que normalmente restringe os clientes a seguirem os links, ou seja, limita a comunica√ß√£o din√¢mica entre clientes e servidores.&lt;/p&gt;

&lt;p&gt;Uma das grandes dificuldades em se usar APIs √© a dificuldade cognitiva para entend√™-la. Como Florian Haupt analisa, algumas APIs podem ter in√∫meras entidades e, quanto maior for a variedade da estrutura, mais dif√≠cil ser√° para um cliente conseguir resolver essas entidades. Assim, esse antipadr√£o se apresenta para APIs p√∫blicas como um grande entrave. Um desenvolvedor deve conhecer a API a fundo e programaticamente gerar todas os end-points de entidade. O fornecimento da hiperm√≠dia facilita a navega√ß√£o, assim como pode permitir que novas entidades sejam facilmente introduzidas na API.&lt;/p&gt;

&lt;p&gt;Todas as APIs que eu implementei possu√≠am esse antipadr√£o, algumas delas eram p√∫blicas o que podem ter causado problemas de atualiza√ß√£o para vers√µes futuras.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A l√≥gica de associa√ß√£o entre recursos deve ser implementada tanto na API quanto nos clientes&lt;/li&gt;
  &lt;li&gt;A aus√™ncia da hipermidia gera uma depend√™ncia de vers√µes entre clientes e APIs&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ignorando-o-cache&quot;&gt;Ignorando o cache&lt;/h3&gt;

&lt;p&gt;Clientes REST e desenvolvedores back-end tendem a &lt;strong&gt;evitar&lt;/strong&gt; o cache devido √† sua complexidade de implementa√ß√£o. Ao ignorar recursos de cache n√£o usando &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_Cache-Control: no-cache_&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_no-store_&lt;/code&gt; e n√£o provendo um &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ETag&lt;/code&gt; no cabe√ßalho da resposta, evita-se qualquer redu√ß√£o no n√∫mero de requisi√ß√µes direcionadas para o servidor.&lt;/p&gt;

&lt;p&gt;Esse antipadr√£o √© bastante comum, o controle de cache n√£o est√° no conceito de pronto de muitos projetos ou em muitas projetos de design, at√© porque em 99% dos projetos de software &lt;strong&gt;o cache n√£o √© importante&lt;/strong&gt;. O cache ser√° importante quando o seu projeto de software for usado por muitos clientes. Vale a pena relembrar a frase do Donald E. Knuth &lt;em&gt;‚ÄúA otimiza√ß√£o prematura √© a raiz de todos os males (ou pelo menos da maior parte deles) na programa√ß√£o‚Äù&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;A necessidade de cache deve ser validada em cada projeto. Ao nos depararmos com essa quest√£o devemos fazer duas perguntas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Essa entidade ser√° acessada por muitos clientes?&lt;/li&gt;
  &lt;li&gt;√â o momento certo para implementar o controle de cache?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;N√£o haver√° nenhuma otimiza√ß√£o usando cache&lt;/li&gt;
  &lt;li&gt;APIs com alta demanda de requisi√ß√µes v√£o usar recursos de infraestrutura desnecess√°rios&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ignorando-os-mime-types&quot;&gt;Ignorando os MIME Types&lt;/h3&gt;

&lt;p&gt;O servidor deve representar um mesmo &lt;strong&gt;recurso&lt;/strong&gt; em v√°rios formatos, por exemplo, &lt;strong&gt;XML&lt;/strong&gt;, &lt;strong&gt;JSON&lt;/strong&gt;, PDF etc. Isso permite que clientes, desenvolvidos em qualquer linguagem consumam a API, independente do formato.&lt;/p&gt;

&lt;p&gt;Esse antipadr√£o acontece quando os desenvolvedores back-end geralmente tem uma &lt;strong&gt;√∫nica representa√ß√£o&lt;/strong&gt; de recursos ou dependem de seus pr√≥prios formatos, o que limita a &lt;strong&gt;acessibilidade&lt;/strong&gt; e a &lt;strong&gt;reutiliza√ß√£o&lt;/strong&gt; da API.&lt;/p&gt;

&lt;p&gt;Para esse antipadr√£o, devemos pontuar duas ocorr√™ncias. Uma √© esquecer completamente de declarar o MIME Type, a outra √© somente declarar um MIME Type. No primeiro caso, √© um erro que pode acarretar na necessidade da escrita de mais c√≥digo para quem consome a API, pois a maioria das bibliotecas de clientes HTTP j√° esperam o MIME Type. Muitos dos frameworks back-end j√° t√™m um MIME Type padr√£o, mas por boa pr√°tica √© sempre bom declarar todos os formatos aceitos por um end-point.&lt;/p&gt;

&lt;p&gt;Quando temos apenas um tipo de MIME Type, a primeira pergunta que devemos fazer √©: &lt;em&gt;quantos clientes nossa API vai ter?&lt;/em&gt; Se a resposta for cont√°vel e estiver todos dentro do controle da equipe de desenvolvimento, tudo bem seguir somente com um formato fora do padr√£o. Mas se pudermos ter clientes que n√£o conhe√ßemos, vale a pena adicionar diversos formatos, incluindo todos aqueles que j√° s√£o padr√µes para APIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Frameworks front-end podem n√£o reconhecer o tipo de mensagem retornada&lt;/li&gt;
  &lt;li&gt;O navegador pode n√£o reconhecer o tipo de mensagem retornada&lt;/li&gt;
  &lt;li&gt;O desenvolvedor ter√° trabalho adicional para implementar corretamente o uso da API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ignorando-o-status-code&quot;&gt;Ignorando o Status Code&lt;/h3&gt;

&lt;p&gt;Apesar de um rico conjunto de c√≥digos de status definidos para v√°rios contextos, os desenvolvedores REST tendem a evit√°-los. Em muitos casos n√£o se preocupam com eles, ou, quando muito, apenas usam os mais comuns, a saber 200, 404 e 500. Ou em um caso ainda pior, usam o c√≥digo de status errado para um determinado tipo de resposta. O uso correto dos c√≥digos de status √© muito importante, assim como conhecer os tipos 2xx, 3xx, 4xx e 5xx que adicionam sem√¢ntica ao protocolo HTTP.&lt;/p&gt;

&lt;p&gt;Esse antipadr√£o √© o que mais impacta qualquer consumidor de APIs. O uso do Status Code indica o tipo de resposta que temos, esquecer ele vai implicar em sempre retornar 200, isso pode mascarar erros na requisi√ß√£o ou mesmo erros no servidor. √â imperativa a declara√ß√£o de todos os poss√≠veis erros na documenta√ß√£o, assim como o tratamento deles em c√≥digo. Se um c√≥digo n√£o trata todos os erros, √© bem provav√©l que um problema deixe vazar informa√ß√µes do servidor como hostname, endere√ßo de IP ou mesmo uma informa√ß√£o da pilha de execu√ß√£o (stackstrace). Exce√ß√µes tamb√©m podem trazer comportamentos adversos, como estouro de pilha ou vazamento de mem√≥rias, que podem causar instabilidade no servidor.&lt;/p&gt;

&lt;p&gt;Um c√≥digo de uma API deve ser feito usando programa√ß√£o defensiva, isso significa que quem desenvolve deve ter cuidado ao prever o m√°ximo de exce√ß√µes poss√≠vel. Como n√£o conhecemos o consumidor da API, √© bem provav√©l que haja mau uso dela. N√£o estou me referindo ao mau uso intencional, mas se deixarmos de validar todos os par√¢metros, podemos trazer instabilidade indesejada a nossa API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Erros podem se identificados como requisi√ß√µes executadas corretamente deixando de serem validados&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mau-uso-de-cookies&quot;&gt;Mau uso de Cookies&lt;/h3&gt;

&lt;p&gt;Stateless √© uma propriedade do REST a ser seguida. Manter o estado da sess√£o no lado do servidor √© uma m√° pr√°tica e n√£o deve ser feito. Cookies descaracterizam sua API, assim ela n√£o poder√° ser chamada de RESTful. O envio de chaves ou tokens no campo de cabe√ßalho &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Set-Cookie&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cookie&lt;/code&gt; para a sess√£o do lado do servidor √© um exemplo de uso indevido de cookies, que diz respeito √† seguran√ßa e privacidade.&lt;/p&gt;

&lt;p&gt;N√£o h√° muito o que discutir nesse padr√£o. Se uma requisi√ß√£o REST precisa de uma informa√ß√£o em mem√≥ria no servidor, algo est√° errado. A boa pr√°tica √© que, ou a informa√ß√£o esteja armazenada no banco e seja independente da sess√£o, ou ela esteja dentro do Token JWT e seja parte do cadastro do usu√°rio. Caso n√£o esteja nessas duas condi√ß√µes temos um s√©rio problema de design. Um desses problemas de design √© a tenta√ß√£o de armazenar informa√ß√µes inerente ao front-end no back-end, isso √© relativamente f√°cil de se identificar.&lt;/p&gt;

&lt;p&gt;Para sabermos se essa informa√ß√£o √© referente ao front-end devemos perguntar se ela se refere √† l√≥gica da entidade ou √† l√≥gica da interface. Se for a l√≥gica da interface, logo ela pode variar entre os v√°rios clientes dispon√≠veis. Outro sinal de que temos um problema de design √© o n√≠vel de complexidade. Se o n√≠vel de complexidade est√° aumentando, √© hora de pararmos e repensar o design da API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;O uso de cookies implica na impossiblidade de escalabilidade&lt;/li&gt;
  &lt;li&gt;Caso seja preciso escalar, √© necess√°rio o uso de um mecanismo de cache para armazenar informa√ß√µes da sess√£o&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;t√∫nel-atrav√©s-de-get&quot;&gt;T√∫nel atrav√©s de GET&lt;/h3&gt;

&lt;p&gt;Sendo o m√©todo HTTP mais fundamental em REST, o m√©todo GET recupera um recurso identificado por um URI. No entanto, muitas vezes os desenvolvedores usam apenas este m√©todo para realizar qualquer tipo de a√ß√£o ou opera√ß√£o, incluindo a cria√ß√£o, exclus√£o ou at√© mesmo para atualizar um recurso. No entanto, HTTP GET √© um m√©todo impr√≥prio para qualquer a√ß√£o diferente de acessar um recurso e n√£o corresponde ao seu prop√≥sito sem√¢ntico, se usado indevidamente.&lt;/p&gt;

&lt;p&gt;Em APIs REST a sem√¢ntica dos verbos HTTP deve ser respeitada, n√£o somente pela sem√¢ntica, mas caracter√≠stica de cada m√©todos. O m√©todo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; n√£o aceita corpo da mensagem, logo se formos us√°-lo para alterar recursos, teremos um s√©rio problema de design que dificultar√° o desenvolvimento. Qualquer altera√ß√£o requer par√¢metros, e eles dever√£o ser enviados ou por Query ou pelo pr√≥prio Path, isso dificultar√° tanto o desenvolvimento quanto o uso da API.&lt;/p&gt;

&lt;p&gt;Como regra √∫ltima, use: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; deve ser somente usado para acessar informa√ß√£o, nunca para alterar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dificuldade para serializar par√¢metros&lt;/li&gt;
  &lt;li&gt;Cache de opera√ß√µes indevidas&lt;/li&gt;
  &lt;li&gt;Problema sem√¢ntico&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;t√∫nel-atrav√©s-de-post&quot;&gt;T√∫nel atrav√©s de POST&lt;/h3&gt;

&lt;p&gt;Esse antipadr√£o √© muito semelhante ao anterior, exceto que, al√©m do URI, o corpo da solicita√ß√£o HTTP POST pode incorporar opera√ß√µes e par√¢metros a serem aplicados ao recurso. Os desenvolvedores tendem a depender apenas do m√©todo HTTP POST para enviar qualquer tipo de solicita√ß√£o ao servidor, incluindo acesso, atualiza√ß√£o ou exclus√£o de um recurso. Em geral, o uso adequado de HTTP POST √© criar um recurso do lado do servidor. Qualquer param√™tro que altere uma requisi√ß√£o de informa√ß√£o deve ser enviado como Query Parameter.&lt;/p&gt;

&lt;p&gt;Muito provavelmente vamos ver esse antipadr√£o sendo aplicado para par√¢metros de buscas. Alguns desenvolvedores usam o corpo da mensagem para definir esses par√¢metros. Mas podemos ver dois problemas nessa abordagem. O primeiro dos problemas √© a dificuldade de se resolver o cache. O m√©todo POST n√£o √© pass√≠vel de cache, porque ele j√° prev√™ que ser√£o feitas altera√ß√µes. Usando os par√¢metros na Query, todos os componentes de cache conseguir√£o identificar que uma resposta pr√©via pode ser usada para resolver a requisis√£o sem acessar o servidor. O segundo problema √© sem√¢ntico, como j√° foi discutido previamente. O verbo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PUT&lt;/code&gt; devem ser usados para alterar informa√ß√£o, caso tenhamos um requisito de neg√≥cio que seja necess√°rio usar, prefira usar o padr√£o &lt;strong&gt;Requisi√ß√£o Expressa&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;N√£o uso do cache&lt;/li&gt;
  &lt;li&gt;Problema sem√¢ntico&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;autentica√ß√£o-como-consulta&quot;&gt;Autentica√ß√£o como consulta&lt;/h3&gt;

&lt;p&gt;Esse antipadr√£o √© muito recorrente. Em muitas API, os par√¢metros de autentica√ß√£o s√£o enviados atrav√©s de query string. O protocolo HTTP j√° prev√™ v√°rios formatos de autentica√ß√£o e todos eles se baseiam no uso do header &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authorization&lt;/code&gt;. Ao usar uma query string estamos expondo no log da aplica√ß√£o qual √© o token de cada usu√°rio, pois muitos frameworks exp√µem a URI sendo acessada no log de execu√ß√£o. Ou estamos desperdi√ßando implementa√ß√µes padr√µes para autentica√ß√£o (tanto para front-end quanto para back-end), tendo que criar c√≥digo desnecess√°rio para esse formato espec√≠fico de autentica√ß√£o;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desvantagens&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;C√≥digo desnecess√°rio&lt;/li&gt;
  &lt;li&gt;Falhas de seguran√ßa&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-complexidade-de-uma-api&quot;&gt;A complexidade de uma API&lt;/h2&gt;

&lt;p&gt;Discutimos muitos sobre padr√µes e antipadr√µes, mas continuando na nossa avalia√ß√£o de uma API, existe algum m√©todo para avaliarmos a complexidade de uma API? Na nossa lista de artigos tem um pouco discutido na sess√£o anterior, nele Haupt analisa a estrutura de uma API considerando os seus recursos e a sua complexidade. Segundo Haupt, a complexidade de uma API depende diretamente do n√∫mero recursos que ela define, quantos deles s√£o &lt;em&gt;readOnly&lt;/em&gt;, a quantidade de recursos raiz e da profundidade dessa API. Com isso podemos levantar alguns par√¢metros novos para analisarmos uma API.&lt;/p&gt;

&lt;p&gt;O primeiro par√¢metro √© a quantidade de recursos, APIs complexas tendem a ter mais recursos. Nesse pontos precisamos nos perguntar se a quantidade de recursos usados na nossa API √© √≥tima. No nosso exemplo temos poucos recursos, basicamente t√≠quetes e usu√°rios. Mas um usu√°rio pode assumir dois pap√©is diferentes em rela√ß√£o aos t√≠quetes sendo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autor&lt;/code&gt; ou &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;responsavel&lt;/code&gt;. Ao fazer a escolha por apenas usar a raiz das requisi√ß√µes por &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usuario&lt;/code&gt;, reduzimos o n√∫mero de recursos da nossa API, evitando complexidade. Essa complexidade desnecess√°ria pode ser compensada usando o padr√£o &lt;strong&gt;Vincula√ß√£o de entidades&lt;/strong&gt;, poucas entidades raiz que prov√™ acesso a muitos recursos usando os valores retornados pela pr√≥pria API.&lt;/p&gt;

&lt;p&gt;Quando falamos do n√∫mero de recursos &lt;em&gt;readOnly&lt;/em&gt;, devemos sempre nos perguntar quem gera esses recursos. Se s√£o dados gerados pelo usu√°rio da API, temos um problema de design. Recursos &lt;em&gt;readOnly&lt;/em&gt; devem ser metadados da nossa API seguindo o padr√£o &lt;strong&gt;Acessibilidade dos Metadados&lt;/strong&gt;. Mas esses metadados n√£o podem ser criados sem um padr√£o, os n√≥s informativos devem ser normalizados, reduzindo o n√∫mero de recursos da nossa API. Uma atividade que pode ser feita para se reduzir o n√∫mero de metadados √© a cataloga√ß√£o deles. Quais s√£o os metadados que nossa aplica√ß√£o gera? H√° algum padr√£o? Se houver um padr√£o, eles podem ser reduzidos.&lt;/p&gt;

&lt;p&gt;J√° a profundidade da API deve ser reduzida usando o padr√£o HATEOAS. Esse padr√£o n√£o foi detalhado neste capitulo, mas podemos entend√™-lo como uma deriva√ß√£o do &lt;strong&gt;Vincula√ß√£o de entidades&lt;/strong&gt;. Segundo Fielding, o HATEOAS √© a implementa√ß√£o definitiva do REST, mas isso n√£o significa que uma API REST deve seguir esse padr√£o. Na verdade n√£o h√° nenhuma especifica√ß√£o definindo o HATEOAS deve ser implementado detalhadamente. As defini√ß√µes s√£o gen√©ricas e nenhum dos frameworks de mercado provem um padr√£o simples de se implementrar. Logo nossa defini√ß√£o tamb√©m ser√° generica, o HATEOAS permite a navega√ß√£o entre recursos afim de reduzir a complexidade de uma API.&lt;/p&gt;

&lt;h2 id=&quot;a-maturidade-de-uma-api&quot;&gt;A maturidade de uma API&lt;/h2&gt;

&lt;p&gt;Nosso √∫ltimo par√¢metro para avaliar uma API √© questionar se existe algum modelo de maturidade para API. Modelos de maturidades s√£o bons para avaliarmos onde estamos e como podemos melhorar. Eles normalmente s√£o compostos por n√≠veis e requisitos, ao se cumprir todos os requisitos de um n√≠vel, podemos afirmar que atingimos aquele n√≠vel. Todo modelo de maturidade come√ßa com um n√≠vel zero sem nenhuma exig√™ncia, em alguns casos esse n√≠vel √© chamado de caos.&lt;/p&gt;

&lt;p&gt;Quando usamos um modelo de maturidade temos uma an√°lise estruturada do que estamos trabalhado, deixamos de ser subjetivos e passamos ser objetivos. Para APIs REST, temos o &lt;a href=&quot;https://www.martinfowler.com/articles/richardsonMaturityModel.html&quot;&gt;&lt;em&gt;Richardson Maturity Model&lt;/em&gt;&lt;/a&gt;. Ele define quatro n√≠vels para uma API REST, mas o pr√≥rio Fielding deixou claro que &lt;a href=&quot;https://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven&quot;&gt;&lt;strong&gt;o n√≠vel 3 √© um pre-requisito para chamar uma API de RESTful&lt;/strong&gt;&lt;/a&gt;. Isso n√£o significa que sua API n√£o √© REST se n√£o chegou a esse n√≠vel, precisamos ser flex√≠veis pois todo software evolui. Se ela exp√µe recursos e usa os verbos HTTP, de certa forma ela √© um tipo de REST.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/http/richardson-maturity-model.png&quot; alt=&quot;Modelo de maturidade de Richardson&quot; /&gt;&lt;/p&gt;

&lt;p&gt;No n√≠vel zero, podemos qualificar qualquer comunica√ß√£o HTTP. Existem muitos projetos legados que se encaixam nesse n√≠vel, me recordo que pelo ano de 2008, quando comecei a trabalhar com projetos web, era comum encontrar endpoints como &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/listarUsuarios.do&lt;/code&gt; em que os par√¢metros da busca eram passados pelo corpo da mensagem.&lt;/p&gt;

&lt;p&gt;No n√≠vel um, podemos classificar as APIs que tem alguma l√≥gica na identifica√ß√£o das entidades. Assim qualquer esfor√ßo para catalogar as entidades podem fazer com que sua API seja mais f√°cil de se utilizar. Nesse caso, os end-points ser√£o deriva√ß√µes da entidade, por exemplo, a busca de usu√°rios podem ser &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usuario/buscar&lt;/code&gt; ou somente &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usuario&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No n√≠vel dois, podemos classificar as APIs que usam os verbos considerando a sua sem√¢ntica. Nesse n√≠vel n√£o vamos ver os seguintes antipadr√µes &lt;strong&gt;T√∫nel atrav√©s de GET&lt;/strong&gt; e &lt;strong&gt;T√∫nel atrav√©s de POST&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por fim, no n√≠vel tr√™s, temos o controle de h√≠permidia. Uma requisi√ß√£o vai retornar n√£o somente a informa√ß√£o, mas as entidades e a√ß√µes correlatas e seus respectivos end-points. Nesse n√≠vel temos o que conhecemos como HATEOAS (&lt;em&gt;Hypertext As The Engine Of Application State&lt;/em&gt; ou Hipertexto como o Motor do Estado do Aplicativo). O back-end ganha um import√¢ncia meio na aplica√ß√£o, e o front-end se torna menos acoplado ao back-end. Ser√° poss√≠vel adicionar novas funcionalidades ao front-end sem nenhuma altera√ß√£o no mesmo.&lt;/p&gt;

&lt;p&gt;Para alcan√ßar o n√≠vel 3, √© necess√°rio um esfor√ßo grande de design que deve ser alinhado tanto com todos os consumidores da API. A implica√ß√£o de criar esse n√≠vel de API significa que o consumidor vai navegar no resultado, n√£o somente usar a API.7&lt;/p&gt;

&lt;h2 id=&quot;conclus√£o&quot;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Neste cap√≠tulo, tentamos definir como podemos avaliar uma API. O primeiro elemento para classifica√ß√£o s√£o padr√µes e antipadr√µes de projetos. Com eles podemos aumentar o nosso repert√≥rio para classificar e descrever APIs. Ser√° que nossa API segue padr√µes de mercado? Ser√° quem um dos padr√µes pode ser aplicado para resolver um problema que temos?&lt;/p&gt;

&lt;p&gt;Depois avaliamos como se classifica a complexidade de uma API. APIs devem ser de f√°cil compreens√£o, quando elas se tornam muito complexas, ou elas n√£o deveriam ser uma API REST, ou elas precisam ser retrabalhadas. Existe algum recurso desnecess√°rio? Podemos extrair um recurso novp? Podemos aplicar algum padr√£o? APIs complexas podem dificultar a implementa√ß√£o de cliente ou de servidores, e isso pode ser resolvido com uma refatora√ß√£o da API.&lt;/p&gt;

&lt;p&gt;Por fim, podemos analizar a maturidade de uma API. Existem um m√©todo para isso? Vimos que sim, podemos qualificar qualquer API em n√≠veis. Isso n√£o significa que nossa API precisa ter o n√≠vel m√°ximo, mas que com ela podemos ver como podemos adicionar mais funcionalidades a nossa API.&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="HTTP" /><category term="REST" /><summary type="html">Nos cap√≠tulos anteriores vimos as especifica√ß√µes do que √© o protocolo HTTP e do que s√£o APIs REST. Agora vamos caminhar tentando trazer mais elementos a nossas APIs. Para tentar responder a pergunta como podemos avaliar uma API podemos levantar algumas poss√≠bilidades, desde a identifica√ß√£o de padr√µes e antipadroes, an√°lise da complexidade, at√© por fim chegarmos a maturidade. Ent√£o nosso primeiro desafio ser√° responder √† seguinte pergunta: existe alguma defini√ß√£o de padr√µes de projetos para APIs REST? Antes de responder a essa pergunta precisamos definir o que √© um padr√£o de projeto, o que √© um antipadr√£o e como eles podem nos ajudar. Padr√µes e antipadr√µes de projetos A primeira pergunta que vamos responder √©: de onde vem o conceito de padr√µes de projeto? Padr√µes n√£o surgiram na computa√ß√£o, √© um conceito importado da arquitetutra. Quando se come√ßa a pensar em uma casa, √© preciso fazer in√∫meras escolhas sobre pequenas coisas para resolver problemas triviais. Essas escolhas j√° envolvem alguns padr√µes que s√£o universais como ‚Äúporta‚Äù, ‚Äúch√£o‚Äù, ‚Äúmesa‚Äù e outros m√≥veis. Para catalogar outros padr√µes, Christopher Alexander escreveu o livro House generated by patterns em 1969 em que ele descreve v√°rias estruturas arquitet√¥nicas e urban√≠sticas usando uma estrutura descritiva bem simples mostrando o contexto, a solu√ß√£o e uma an√°lise dos problemas que a solu√ß√£o pode trazer. Esse livro deu origem a outros projetos, incluindo o livro A Pattern Language: Towns, Buildings, Construction de 1977, em que Alexander cria uma linguagem usando padr√µes e o conceito de Linguagem de Padr√µes. Descri√ß√£o de projetos s√£o simplificadas usando uma linguagem de padr√µes, pois ao inv√©s de descrever detalhadamente o projeto √© poss√≠vel referenciar os padr√µes j√° descritos, cada padr√£o vai apresentar a melhor solu√ß√£o at√© o momento para um determinado problema. Em 1987, Kent Beck e Ward Cunningham escreveram o artigo Using Pattern Languages for Object-Oriented Programs aplicando o conceito de Linguagem de Padr√µes para interfaces gr√°ficas de programas Smalltalk. No artigo apenas um padr√£o √© descrito textualmente, o ‚ÄúCollect Low-level Protocol‚Äù, mas os autores relatam que estavam descrevendo uma linguagem com mais de 150 padr√µes. Em 1994, Doug Lea publicou um artigo na revista Software Engineering Notes chamado Christopher Alexander: an introduction for object-oriented designers, onde havia a adapta√ß√£o dos modelos de padr√µes urbanisticos de Christopher Alexander para o mundo do software. Nesse artigo vemos pela primeira vez a proposi√ß√£o de um formato para descri√ß√£o de padr√µes. Um padr√£o deveria ter um nome, um exemplo e uma descri√ß√£o do modelo onde deveria ser usado. Na verdade, no artigo est√£o presentes outras propriedades que em muitos casos n√£o s√£o facilmente aplicadas, como encapsulamento, generatividade, equilibrio, abstra√ß√£o, abertura e composibilidade. Com o artigo de Doug Lea, ainda em 1994, Erich Gamma, Richard Helm, Ralph Johnson e John Vlissides se juntam para escrever o livro mais conhecido sobre padr√µes Padr√µes de Projetos: Solu√ß√µes Reutiliz√°veis de Software Orientados a Objetos. Nesse livro podemos encontrar a defini√ß√£o de v√°rios padr√µes encontrados em projetos de software orientado a objetos. Por ter sido escrito por quatro autores, √© popularmente conhecido como Gang of Four (gangue de quatro em tradu√ß√£o livre), ou pela sigla GoF. Os padr√µes do GoF s√£o apresentados seguindo um modelo mais simples do que o proposto por Lea, cada padr√£o tem inten√ß√£o, motiva√ß√£o, aplicabilidade, estrutura, participantes, colabora√ß√µes, consequ√™ncias, implementa√ß√£o, exemplo de c√≥digo, usos conhecidos e padr√µes relacionados. Os padr√µes por sua vez s√£o divididos entre padr√µes de cria√ß√£o, estruturais e comportamentais. ‚Äî E como esses padr√µes surgem? Ao contr√°rio do que se imagina, os padr√µes n√£o s√£o propostos, eles s√£o identificados. Padr√µes j√° existem em projetos como solu√ß√µes para problemas recorrentes, o que ocorre √© que eles s√£o identificados, especificados e analisados. Existem at√© confer√™ncias para apresenta√ß√µes de padr√µes, como √© o caso da Pattern Language of Programs, em que padr√µes s√£o lidos e discutidos em grupos. ‚Äî E para que servem esses tais padr√µes? Nunca precisei de um! Conhecer padr√µes serve para aumentar o nosso vocabul√°rio como desenvolvedores. Padr√µes, quando descritos, j√° v√™m acompanhados de uma pr√©via discuss√£o, mas depois que s√£o propostos eles est√£o sujeitos a cr√≠tica. Alguns padr√µes recebem tanta cr√≠tica que s√£o catalogados como antipadr√µes. Mas padr√µes e antipadr√µes n√£o significam que s√£o de uso imperativo ou n√£o. Eles apenas servem para avaliarmos se uma solu√ß√£o √© boa ou n√£o. Um padr√£o tem sempre um contexto, um problema e uma solu√ß√£o, mas tamb√©m possui as an√°lises de vantagens e desvantagens que sua aplica√ß√£o traz. Quando tempos um bom repert√≥rio de padr√µes, come√ßamos a responder mais rapidamente ao desafio de escrever e revisar c√≥digo. Podemos identificar estruturas para podermos resolver os problemas de c√≥digo do dia a dia. E tamb√©m podemos identificar vantangens e desvantagens de estruturas propostas. Quem anda escrevendo sobre padr√µes REST Antes de escrever sobre padr√µes REST, precisamos fazer uma busca para identificar e reconhecer quem j√° escreve sobre o assunto, para identificar algumas publica√ß√µes interessantes. Nossa discuss√£o vai se limitar aos tr√™s artigos a seguir, que podem trazer padr√µes e ideias interessantes sobre como avaliar uma API REST, embora todos em ingl√™s. 2014 - Detection of REST Patterns and Antipatterns: A Heuristics-Based Approach: Francis Palma, Johann Dubois, Naouel Moha, and Yann-Ga√´l Gu√©h√©neuc 2017 - A Framework for the Structural Analysis of REST APIs: Florian Haupt, Frank Leymann, Anton Scherer, Karolina Vukojevic-Haupt 2020 - Defining Design Patterns for IoT APIs: Rasmus Svensson, Adell Tatrous, Francis Palma O primeiro artigo prop√µe uma heur√≠stica para determina√ß√£o de padr√µes e antipadr√µes em APIs REST. Como ele foi escrito antes da proposi√ß√£o do OpenAPI, em 2015, sua an√°lise n√£o se baseia em documenta√ß√µes, mas em implementa√ß√µes. Sua an√°lise prop√µe alguns padr√µes e antipadr√µes que mostraremos a seguir, assim como um algoritmo para identificar o padr√£o dentro do projeto de c√≥digo. No segundo artigo Haupt prop√µe uma an√°lise estrutural baseada na documenta√ß√£o da API usando OpenAPI. As documenta√ß√µes de APIs abertas foram analisadas por uma ferramenta para se extrair o modelo da API. Segundo Haupt, cada API constiria de uma s√©rie de recursos possuem m√©todos e relacionamentos. Ele por sua vez se baseia no Atomic Resource Model e no URI Model. O primeiro descreve uma API atrav√©s de seus elementos b√°sicos como recursos, verbos e representa√ß√µes. J√° o segundo modelo estende o primeiro, dando a oportunidade ao cliente da API de navegar nos recursos baseados em hyperlinks providos pela propria API. Com essa an√°lise √© possivel conhecer a complexidade da API, descrevendo quantos recursos ela possui, quantos desses s√£o ReadOnly e quais as rela√ß√µes entre eles atrav√©s de links. E por fim, no terceiro artigo, Svensson faz uma an√°lise de algumas APIs de mercado para IoT e prop√µes 8 padr√µes de projetos, baseado no modelo no GoF. APIs de IoT s√£o altamente voltada a recursos, pois cada dispositivo √© um recurso. Segundo Svensson, os padr√µes presentes na literatura s√£o mais voltados para garantir a qualidade RESTful das APIs e n√£o para o desenho dos endpoints, por isso todos esses padr√µes se concentram na URI. Revisando a anatomia de uma requisi√ß√£o Para detalhar as padr√µes de API REST, precisamos revisar como podemos subdividir uma URI. Segundo a IETF RFC 3986, temos os seguintes componentes: Scheme://Authority/Path?Query#Fragment. Cada componente de uma URI tem sua especificidade e signific√¢ncia que devem ser levadas em conta na constru√ß√£o de uma API, n√≥s vimos no cap√≠tulo 3 como cada elemento √© descrito, agora vamos expandir essas defini√ß√µes. O caminho (Path) pode ser subdividdo em base (Base) e principal (Main) Scheme://Authority/Base/Main?Query. A base √© identificada quando existe caminhos comuns em uma API, ela pode ter uma fun√ß√£o primordial quando precisamos definir qual API e/ou qual vers√£o da API deve ser acesada. Ao se identificar a base, o principal √© o ponto crucial da requisi√ß√£o. Ainda no caminho, cada token pode ser considerado um n√≥, assim podemos assumir fun√ß√µes para cada n√≥ de uma requisi√ß√£o. Na tabela a seguir temos as v√°rias fun√ß√µes que um n√≥ pode assumir. Nome Descri√ß√£o N√≥ de acesso Um n√≥ que √© usado apenas para direcionar as seguintes partes do URI para uma determinada se√ß√£o da API, ou seja, n√£o √© um recurso ou dados que podem ser buscados. N√≥ pai Um n√≥ que geralmente representa uma categoria, um recurso que inclui recursos ou um objeto. Na API e no URI, esse n√≥ existe em uma hierarquia. Aqui, tendemos a mencionar apenas o fim da hierarquia. N√≥ indicativo Um n√≥ que representa uma ordem, consulta ou a√ß√£o a ser realizada em um determinado recurso para aplicar esta a√ß√£o ou conhecer uma informa√ß√£o espec√≠fica sobre esse recurso, por exemplo, filtrar os resultados de uma solicita√ß√£o feita em um determinado recurso. Podemos pensar nisso como um ponto final que dispara uma fun√ß√£o. Geralmente √© uma palavra convencional, como info, create (criar), first (primeiro), last (ultimo), status etc. N√≥s indicativos podem ser divididos em tr√™s categorias: n√≥s de a√ß√£o, n√≥s de filtro e n√≥s informacionais N√≥s de a√ß√£o Um n√≥ usado para acionar uma fun√ß√£o espec√≠fica ou aplicar funcionalidades cl√°ssicas de CRUD em um recurso, usando qualquer m√©todo de solicita√ß√£o HTTP. Na maioria dos casos, esses n√≥s assumem a forma de um pedido para realizar uma a√ß√£o, por exemplo, create, clone, upload ou consume N√≥s de filtro Um n√≥ usado para direcionar um grupo espec√≠fico ou estado dos recursos solicitados. N√≥s informacionais Um n√≥ usado para obter informa√ß√µes sobre metadados para um ou v√°rios recursos. Esses metadados n√£o podem ser modificados diretamente nem acess√≠veis por meio do recurso A classifica√ß√£o da autoridade tamb√©m pode ser estendida, por exemplo, Svensson a classifica como din√¢mica e est√°tica. Din√¢mica: o mesmo valor √© usado para todos os recursos controlado pela API. Est√°tica: valores s√£o gerados para controlar grupo de recursos. CRUD Todo recurso aceita um conjunto de opera√ß√µes. Quando usamos o termo CRUD estamos nos referindo ao conjunto mais comum de opera√ß√µes Create, Read, Update e Delete (criar, ler, apagar e remover). Essa sigla √© muito associada a interfaces gr√°ficas, mas ela tamb√©m pode ser aplicada a uma API. Apesar de existirem essas quatro opera√ß√µes b√°sicas, um recurso pode ter outras opera√ß√µes como habilitar/desabilitar, associar/desassociar etc. Opera√ß√µes dependem da l√≥gica de neg√≥cios, por isso cada aplica√ß√£o deve definir o conjunto de opera√ß√µes que seu recurso aceita. Encontrando os padr√µes Na literatura citada anteriormente, vamos listar alguns padr√µes. Eles ser√£o detalhados usando um modelo mais simples que o proposto pelo GoF, cada padr√£o o seu nome, propositor, for√ßas, vantagens e desvantagens. Cada padr√£o ter√° uma breve descri√ß√£o com marca√ß√µes em negrito, elas se referem a termos chaves da descri√ß√£o. Estes s√£o os padr√µes que vamos apresentar: Vincula√ß√£o de entidades Cache de resposta Negocia√ß√£o de Conte√∫do Redirecionamento de end-point End-point da Entidade URI direcionado antecipadamente Requisi√ß√£o Expressa ‚Äòme‚Äô Recurso Acess√≠vel Acessibilidade dos Metadados Filtragem Proativa API versionada Recursos versionados Cada padr√£o ser√° descrito usando o exemplo da API para bibliotecas que criamos no cap√≠tulo passado. Vincula√ß√£o de entidades Esse padr√£o permite a comunica√ß√£o em tempo de execu√ß√£o atrav√©s de links providos pelo servidor no corpo da resposta ou via Location:, no cabe√ßalho da resposta. Usando hyperlinks, a depend√™ncia entre cliente e servidor √© reduzida permitindo ao cliente automaticamente encontrar as entidades relacionadas em tempo de execu√ß√£o. For√ßas A URI de recursos rec√©m-criados devem ser conhecida pelo cliente Recursos precisam ser relacionados entre si A API deve prover rela√ß√µes, n√£o apenas dados Proposta Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc. Problema As a√ß√µes a que uma entidade pode ser submetida devem ser independentes do cliente. A API deve fornecer informa√ß√µes suficientes para que o cliente consiga compreender as a√ß√µes que pode realizar com uma entidade. As entidades relacionadas a uma determinada entidade tamb√©m devem ser independentes do cliente. Se as rela√ß√µes entre entidades n√£o forem fornecidas pela API, cada cliente deve implementar as rela√ß√µes, acarretando em c√≥digo duplicado, acoplamento de vers√µes e propaga√ß√£o de bugs. Solu√ß√£o Ao acessar ou criar uma entidade, o servidor pode enviar o URL da mesma, de todas entidades relacionadas e poss√≠veis a√ß√µes dentro do corpo da resposta ou atrav√©s dos cabe√ßalhos Location ou Link. A RFC 5988 - Web Linking trata do caso de se usar o cabe√ßalho Link, no caso h√° um proposi√ß√£o de formato que pode ser usado tamb√©m no cabe√ßalho Location. POST /tiquete HTTP 1.1 Host: tiquetes.com.br Content-Type: application/json { &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;] } 201 Created Location: tiquetes.com.br/tiquete/6942 Link: &amp;lt;Autor&amp;gt;;rel=&quot;/tiquete/autor/215&quot;;title=&quot;Victor Os√≥rio&quot;,&amp;lt;Projeto&amp;gt;;rel=&quot;/projeto/proj-001&quot;;title=&quot;T√≠quetes.COM.BR&quot;,&amp;lt;TAG&amp;gt;;rel=&quot;/tag/java&quot;;title=&quot;Java&quot;,&amp;lt;TAG&amp;gt;;rel=&quot;/tag/rest&quot;;title=&quot;REST&quot;,&amp;lt;TAG&amp;gt;;rel=/tag/crud;title=&quot;CRUD&quot;;&amp;lt;EPICO&amp;gt;;rel=/epico/criar-tiquete;title=&quot;Criar T√≠quete&quot; Uma outra poss√≠vel apresenta√ß√£o para esse padr√£o √© inseri-lo dentro do corpo da mensagem. Esse padr√£o √© proposto pelo HATEOAS (que significa Hypermedia as the Engine of Application State) e pode ser aplicado inserindo o campo link ao objeto retornado. { &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;], &quot;links&quot;: [ { &quot;href&quot;: &quot;/tiquete/6942&quot;, &quot;rel&quot;: &quot;self&quot;, &quot;type&quot;: &quot;GET&quot; }, { &quot;href&quot;: &quot;/tiquete/6942/responsavel&quot;, &quot;rel&quot;: &quot;responsavel_associar&quot;, &quot;type&quot;: &quot;POST&quot; } ] } Cache de resposta O cacheamento da resposta √© uma boa pr√°tica para evitar enviar requisi√ß√µes duplicadas e respostas atrav√©s do cacheamento de todas as mensagens no local da m√°quina do cliente. S√£o usados os cabe√ßalhos Cache-Control e ETag, assim como o c√≥digo HTTP 304. For√ßas O servidor precisa de meios para evitar processamento desnecess√°rio O cliente pode armazenar informa√ß√£o localmente O cliente deve prover uma ferramenta para validar se o dado que possui √© o mais recente Proposta Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc. Problema APIs com elevada demanda de requisi√ß√µes devem encontrar meios de reduzir a quantidade de processamento e mem√≥ria utilizada. Dessa forma recursos podem ser acessados por v√°rios clientes ao mesmo tempo, sem que seja necess√°rio o processamento completo da requisi√ß√£o no servidor, mas cada cliente deve ter sempre a vers√£o mais atualizada do recurso desejado. Solu√ß√£o Essa solu√ß√£o j√° foi demonstrada no cap√≠tulo Discutindo o protocolo, onde vimos que o correto uso do cache pode evitar tanto uma sobrecarga do servidor quanto erros de concorr√™ncia ao se alterar um recurso. Em ambos os casos se usa o cabe√ßalho ETag. Para evitar a sobrecarga do servidor, toda entidade pass√≠vel de cache deve vir com um valor de ETag. Este valor pode ser um n√∫mero sequencial ou o hash do conte√∫do da entidade. Assim quando for necess√°rio acessar o conte√∫do novamente o servidor saber√° que o cliente j√° tem o conte√∫do dessa requisi√ß√£o e se este est√° atualizado ou n√£o. GET /tiquete/6942 HTTP 1.1 ETag: &quot;8199bab3962576d495a6d2a4ac48abfa&quot; 304 Not Modified Para evitar problemas de concorr√™ncia, uma opera√ß√£o pode ser feita usando o cabe√ßalho If-Match, assim a opera√ß√£o s√≥ poder√° ser realizada se n√£o houve nenhuma altera√ß√£o no estado da entidade. PATCH /tiquete/6942 HTTP 1.1 If-Match: &quot;8199bab3962576d495a6d2a4ac48abfa&quot; Content-Type: application/json { &quot;projeto&quot;: &quot;PRJ-002&quot; } HTTP/1.1 412 Precondition Failed Date: Sat, 27 Feb 2021 16:12:02 GMT Negocia√ß√£o de Conte√∫do Esse padr√£o suporta representa√ß√µes alternativas para recursos (por exemplo, em json, xml, pdf etc.) assim. o servi√ßo consumidor se torna mais flex√≠vel com alta reutiliza√ß√£o. Servidores podem prover recursos em qualquer formato padr√£o requerido pelos clientes. Esse padr√£o √© aplicado atrav√©s dp HTTP Media Types e permite aos usu√°rios da API terem mais liberdade de implementa√ß√£o. For√ßas Uma mesma API pode prover recursos para v√°rios clientes Uma mesma API pode prover recursos atrav√©s de v√°rios formatos O formato pode ser usado para exportar recursos em formatos espec√≠ficos como planilhas e documentos PDF Proposta Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc. Problema Alguns clientes t√™m limita√ß√µes de biblioteca de serializa√ß√£o. Em certos clientes h√° somente a op√ß√£o de JSON e em outros somente XML, em outro caso, o cliente vai requerer a exporta√ß√£o de certas entidades em v√°rios formatos PDF, XLS ou qualquer outro formado. Solu√ß√£o Essa solu√ß√£o j√° foi demonstrada no cap√≠tulo Discutindo o protocolo. Ao cliente √© poss√≠vel escolher qual o formato de m√≠dia que este deseja receber, basta usar o cabe√ßalho Content. Essa solu√ß√£o pode ser feita tanto para troca de mensagens como para o download de recursos. No primeiro caso se aplica quando o cliente tem alguma limita√ß√£o de serializa√ß√£o e o segundo √© quando o cliente deseja um formato especifico. No caso a seguir vamos mostrar como fazer o download em formato EPUB, o formato poderia ser escolhido pelo cliente. GET /tiquete/6942 HTTP 1.1 Content: application/pdf 200 OK [Conte√∫do em format PDF] Redirecionamento de end-point A funcionalidade de redirecionamento atrav√©s da web √© suportado por este padr√£o, que tamb√©m desempenha um papel importante como meio de composi√ß√£o de servi√ßos. Para redirecionar clientes, o servidor envia uma nova localidade para acompanhar um dos c√≥digos HTTP entre 301, 302, 307 ou 308. O principal benef√≠cio desse padr√£o √© que um servi√ßo alternativo continua ativo mesmo que o endpoint requerido n√£o responda. For√ßas Uma API pode mudar sua topologia e o cliente deve identificar essa mudan√ßa Identificadores de recursos podem ser alterados e a API deve informar essa mudan√ßa Proposta Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc. Problema Nem sempre identificadores s√£o imut√°veis, em alguns casos eles podem ser alterados. Entidades podem ser localizada a partir de campos alter√°veis, ou seja, sempre que um identificador for alterado o identificador antigo deve redirecionar para o novo. Em outros casos a API pode mudar a sua topologia, criando novos formatos de URI, mas mesmo assim ele pode responder a requisi√ß√µes usando a topologia antiga. Solu√ß√£o A solu√ß√£o √© usar o c√≥digo de estato 301 associado ao cabe√ßalho Location, conforme definido no protocolo HTTP. Para exemplificar, vamos mostrar o caso mais comum, quando um recurso muda de identificador. GET /epico/criar-tiquete HTTP 1.1 301 Moved Permanently Location: /epico/crud-tiquete End-point da Entidade Servi√ßos com um √∫nico endpoint s√£o pouco granulares. Usualmente, um cliente requer ao menos dois identificadores: um global para o servi√ßo em si e um local para o recurso ou entidade gerenciada pelo servi√ßo. Aplicando esse padr√£o, isto √©, usando multiplos endpoints, cada entidade (ou recurso) de um servi√ßo incorporado pode ter seu identicador √∫nico e endere√ßo global. For√ßas Cada recurso deve ter seu end-point espec√≠fico Entidades devem ser encontradas diretamente Entidades devem ser cacheadas atrav√©s do seu end-point Proposta Foi proposta em ‚ÄúDetection of REST Patterns and Antipatterns: A Heuristics-Based Approach‚Äù por Francis Palma, Johann Dubois, Naouel Moha, e Yann-Ga√´l Gu√©h√©neuc. Problema Recursos que compartilham end-point tornam o cache impratic√°vel, al√©m de inserir complexidade desnecess√°ria a uma API. Cada recurso deve ter seu end-point √∫nico, assim ele pode ser acessado diretamente. Solu√ß√£o Cada entidade dever√° ter um end-point associado para retornar as informa√ß√µes pode identificador. Assim /tiquete/:id: vai retornar as informa√ß√µes do t√≠quete conforme seu identificador, a mesma regra deve valer para sprint (/sprint/:id:), √©pico (/epico/:id:) e assim por diante. GET /tiquete/6942 HTTP 1.1 { &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;] } URI direcionado antecipadamente Para direcionar a requisi√ß√£o da URI para um grupo espec√≠fico e √∫nico dentro da API. Pode ser um ID de organiza√ß√£o, c√≥digo de √°rea ou nome de servidor. Normalmente √© usado um nome vari√°vel no come√ßo da Autoridade. For√ßas APIs podem fazer o balanceamento de carga de requisi√ß√µes usando a autoridade APIs devem poder agrupar seus recursos atrav√©s de identificadores l√≥gicos Proposta Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma. Problema Algumas APIs requerem agrupamentos l√≥gicos que v√£o impactar n√£o somente a distribui√ß√£o dos recursos, mas toda a l√≥gica da API. Requisi√ß√µes direcionadas a esses agrupamentos l√≥gicos v√£o acarretar em estatisticas separadas, assim como limita√ß√µes de quotas ou controle de acesso. Existe uma entidade raiz onde todas as outras entidades que ser√£o cadastradas pertencem a essa entidade raiz n√£o podendo ser compartilhadas com as outras entidades raiz. Solu√ß√£o Para cada entidade raiz, deve ser criada uma nova autoridade. Vamos supor que podemos cadastrar um produto nova. Cada produto ter√° seu identificador que deve ser usado na URL para acessar a API referente a ele. POST /produto HTTP 1.1 Host: tiquetes.com.br Content-Type: application/json { &quot;id&quot;: &quot;biblioteca&quot;, &quot;nome&quot;: &quot;Gest√£o de emprestimo de livros&quot;, &quot;descri√ß√£o&quot;: &quot;API para gest√£o de emprestimo de livros. Dever√° ser usado por v√°rias bibliotecas&quot; } 201 Created Location: https://biblioteca.tiquetes.com.br Requisi√ß√£o Expressa Para executar as funcionalidades cl√°ssicas do CRUD ou executar uma fun√ß√£o espec√≠fica em um recurso, ao mesmo tempo em que declara claramente a finalidade do URI e n√£o apenas se baseia no m√©todo usado atrav√©s de um N√≥ de A√ß√£o na se√ß√£o Main. For√ßas Opera√ß√µes em alguns recursos devem ser expl√≠citas Os verbos do protocolo HTTP s√£o limitados a opera√ß√µes de CRUD Alguns recursos possuem opera√ß√µes que s√£o espec√≠ficas do modelo de neg√≥cios da aplica√ß√£o Proposta Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma. Problema A URI deve declarar expressamente qual opera√ß√£o est√° sendo realizada. Opera√ß√µes de remo√ß√£o devem ser ter informa√ß√µes associadas a opera√ß√£o. Certas entidades s√£o pass√≠veis de v√°rios tipos de a√ß√µes: checkout, reserva, compra, venda etc. Solu√ß√£o Para expressar qual opera√ß√£o est√° sendo feita, cada opera√ß√£o deve ter um identificador e este deve ser usado como um n√≥ de a√ß√£o do final do end-point da entidade. PUT /tiquete/6942/assumir HTTP 1.1 { &quot;usuario&quot;: 732 } 200 OK ‚Äòme‚Äô Recurso Acess√≠vel Para apontar para o usu√°rio autenticado no momento ao solicitar recursos ou executar a√ß√µes √†s quais este usu√°rio tem acesso, use um n√≥ me no in√≠cio da se√ß√£o Main. For√ßas A API deve fornecer as informa√ß√µes do usu√°rio autenticado Recursos especiais devem ser encontrados atrav√©s de endpoints especificos Proposta Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma. Problema Certas regras de neg√≥cios podem requerer end-points personalizados. Esses end-points v√£o retornar recursos especificos e o end-point pode encapsular regras de neg√≥cios complexas como consultas. Solu√ß√£o O caso mais comum desse padr√£o √© o end-point /me que retorna os dados do usu√°rio autenticado. Para nosso sistema, podemos criar o end-point /tiquete/meus que retorna todos os t√≠quetes com que o usu√°rio logado est√° relacionado. Esse end-point pode ainda ter um filtro /tiquete/meus/ativos que retorna apenas os tiquetes ativos da consulta anterior. GET /me HTTP 1.1 { &quot;id&quot;: 319, &quot;nome&quot;: &quot;Victor Os√≥rio&quot;, &quot;usuario&quot;: &quot;vepo&quot; } Acessibilidade dos Metadados Para ler informa√ß√µes, principalmente usando o m√©todo GET, sobre metadados para um √∫nico ou v√°rios recursos, como: count, state, status ou outros dados que n√£o podem ser modificados diretamente nem acess√≠veis por meio de um recurso, o URI pode ter um n√≥ informativo significativo no final da se√ß√£o Main como uma indica√ß√£o para as informa√ß√µes solicitadas. For√ßas Recursos possuem metadados que podem apenas ser consultados Metadados dependem de recursos Metadados n√£o fazem parte das informa√ß√µes do recurso Proposta Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma. Problema Metadados s√£o entidades que s√£o controladas pela API, o cliente pode apenas consultar os metadados. A maioria das necessidades de neg√≥cio n√£o dependem de metadados, logo eles n√£o devem ser retornados juntamente ao recurso. Solu√ß√£o Os metadados s√£o expostos por um end-point adicionando um n√≥ informacional ao end-point do recurso. Assim as estat√≠sticas de um projeto podem ser lidos atrav√©s de /projeto/:id:/estatisticas. GET /projeto/proj-001/estatisticas HTTP 1.1 { &quot;colaboradores&quot;: 12, &quot;horasTrabalhadas&quot;: 612, &quot;mediaTimeToMarketEmDias&quot;: 12 } Filtragem Proativa Para direcionar um grupo espec√≠fico ou estado do recurso solicitado sem depender de um par√¢metro de consulta dedicado, use um n√≥ de filtro na se√ß√£o Main. For√ßas Consultas comuns devem ser facilitadas Consutlas comuns devem ter sua l√≥gica implementada pela API Proposta Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma. Problema Todo sistema possui um conjunto de consultas que s√£o executadas diversas vezes, mas cuja l√≥gica √© complicada. Para esses casos, devem existir filtros padr√µes na API, as regras de neg√≥cios devem ser encapsuladas pela API, sendo acessados diretamente. Solu√ß√£o Esses filtros podem ser expressos como n√≥s informacionais adicionados a end-point de recursos. Por exemplo, para se requerer todos os t√≠quetes pendentes para o sprint que o usu√°rio logado est√° participando /sprint/atual/pendentes, esse mesmo padr√£o pode ser usado para qualquer sprint /sprint/:id:/pendentes. GET /sprint/atual/pendentes HTTP 1.1 [{ &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;] }, { &quot;id&quot;: 6948, &quot;titulo&quot;: &quot;Associar T√≠quete a Sprint&quot;, &quot;descricao&quot;: &quot;Criar endpoint para associar t√≠quete a um sprint especifico&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;SPRINT&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;] }, { &quot;id&quot;: 6953, &quot;titulo&quot;: &quot;Tela de consulta de T√≠quetes&quot;, &quot;descricao&quot;: &quot;Criar tela de consulta de t√≠quetes, deve ser poss√≠vel consultar tiquete por todos os campos&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;FRONTEND&quot;, &quot;tags&quot;: [&quot;Javascript&quot;, &quot;Frontend&quot;] }] API versionada A diferencia√ß√£o de vers√£o da API √© feita na request. Esta pode ser feita com base em um n√≥ no Base, que representa a vers√£o. Essa diferencia√ß√£o tamb√©m pode ser feita por um par√¢metro na Query. For√ßas Clientes legados ainda usam vers√µes antigas da API A evolu√ß√£o da API gera a necessidade de uma refatora√ß√£o dos recursos da API API complexa precisa ser reestruturada Proposta Foi proposta em ‚ÄúDefining Design Patterns for IoT APIs‚Äù por Rasmus Svensson, Adell Tatrous e Francis Palma. Problema A API possui uma grande base de clientes legados que n√£o v√£o se adaptar a uma refatora√ß√£o, logo o time de desenvolvimento deve menter diversas vers√£o da mesma API em produ√ß√£o. Solu√ß√£o Para se manter diversas vers√µes ativas, existem v√°rias abordagens poss√≠veis. A abordagem mais simples √© colocar a vers√£o (ou data) como par√¢metro da Query, essa op√ß√£o √© v√°lida somente se a refatora√ß√£o foi na l√≥gica de neg√≥cios ou no corpo da requisi√ß√£o. Essa abordagem n√£o vai funcionar para casos em que a topologia dos end-points foi modificada. GET /tiquete/6942?versao=2 HTTP 1.1 { &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;], &quot;subtasks&quot;: [{ &quot;id&quot;: 6982, &quot;title&quot;: &quot;Adicionar valida√ß√£o de tags no frontend&quot; }, { &quot;id&quot;: 6983, &quot;title&quot;: &quot;Adicionar valida√ß√£o de tags no backend&quot; }] } A outra possibilidade √© colocar a vers√£o como um n√≥ do caminho Base. Esse n√≥ pode ser constru√≠do iniciando com o caractere v seguido do n√∫mero da vers√£o para se diferenciar de um identificador. Esse n√∫mero pode ser um inteiro sequencial ou seguir o formato Semantic Versioning. GET /v2/tiquete/6942 HTTP 1.1 { &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;] } Recursos versionados Nesse padr√£o, os recursos podem ter vers√µes. Quando um recurso √© alterado, as vers√µes antigas dele podem ser acessadas. For√ßas Cada recurso deve fornecer a possibilidade de versionamento Dados n√£o podem ser exclu√≠dos e altera√ß√µes devem ser rastreadas Problema Todas as informa√ß√µes de um recursos s√£o importantes, nenhuma altera√ß√£o deve apagar informa√ß√µes e vers√µes antigas do mesmo recurso devem estar dispon√≠veis atrav√©s da API. Solu√ß√£o Para resolver esse problema, cada end-point de entidade pode aceitar alguns n√≥s informativos. O primeiro deles listar√° todas as vers√µes dispon√≠veis, e o segundo deles acessar√° o conte√∫do da vers√£o. Assim /tiquete/6942/versoes vai listar as ver√µes e /tiquete/6942/versoes/4 vai acessar o conte√∫do da vers√£o 4 desse t√≠quete. GET /v2/tiquete/6942/versoes/4 HTTP 1.1 { &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;] } Em extens√£o a esse padr√£o, o end-point da entidade pode retornar a vers√£o atual do recurso usando um cabe√ßalho. N√£o h√° nenhum cabe√ßalho definido pelo protocolo HTTP para definir a vers√£o da entidade; alguns usam o cabe√ßalho ETag, mas ele n√£o tem esse proposito. Como a vers√£o √© espec√≠fica da l√≥gica da aplica√ß√£o, poder√≠amos definir um cabe√ßalho usando o prefixo X-, mas essa pr√°tica foi definida como antipadr√£o pela RFC-6648. Logo √© necess√°rio que esse cabe√ßalho seja definido pela aplica√ß√£o como um cabe√ßalho comum, talvez Entity-Version, usando um n√∫mero sequencial. GET /v2/tiquete/6942 HTTP 1.1 Entity-Version: 6 { &quot;id&quot;: 6942, &quot;titulo&quot;: &quot;Erro ao criar T√≠quete&quot;, &quot;descricao&quot;: &quot;A API de cria√ß√£o de t√≠quetes retorna erro 500 quando nenhuma tag √© associada.&quot;, &quot;causaRaiz&quot;: &quot;T√≠quetes sem nenhuma tag associada geram um excess√£o n√£o tratada na API.&quot;, &quot;solucaoProposta&quot;: &quot;1. Adicionar valida√ß√£o backend\n2.Adicionar valida√ß√£o frontend&quot; &quot;projeto&quot;: &quot;PRJ-001&quot;, &quot;epico&quot;: &quot;CRIAR-TIQUETE&quot;, &quot;tags&quot;: [&quot;Java&quot;, &quot;REST&quot;, &quot;CRUD&quot;] } Encontrando antipadr√µes Agora podemos inverter a pergunta: dados os padr√µes existente na literatura, quais devemos evitar? Isso √© o que chamamos de antipadr√µes. S√£o solu√ß√µes comuns para problemas rotineiros, mas que n√£o apresentam um resultado √≥timo. Muitos desenvolvedores t√™m preconceito com o termo ‚Äúantipadr√£o‚Äù. Mas eles se tratam de cr√≠ticas construitivas. Em muitos casos devem ser interpretados como um aviso de cuidado, n√£o como uma proibi√ß√£o categ√≥rica. Antipadr√µes n√£o existem porque algu√©m n√£o gostou, existem porque foram levantados v√°rios argumentos de que eles n√£o devem ser utilizados em determinados contextos. Por isso, ao apresentar um antipadr√£o vamos sempre descrever quais s√£o as desvantagens que eles trazem ao serem usados, cabendo ao desenvolvedor ou √† desenvolvedora decidir se deve usar ou n√£o. Fizemos um levantamentos de antipadr√µes dentro da literatura analisada, os termos em negrito s√£o destaques da pr√≥pria literatura. Para apresentar, n√£o vamos seguir o modelo dos padr√µes, vamos apenas apresentar uma lista de desvantagens para cada antipadr√£o e, em alguns casos, exemplos pessoais que j√° implementei. Esta √© a lista de antipadr√µes que vamos apresentar: Quebrando a autodescri√ß√£o Esquecendo a Hiperm√≠dia Ignorando o cache Ignorando os MIME Types Ignorando o Status Code T√∫nel atrav√©s de GET T√∫nel atrav√©s de POST Autentica√ß√£o como Consulta Quebrando a autodescri√ß√£o Desenvolvedores de APIs REST tendem a ignorar os cabe√ßalhos padr√£o, formatos e protocolos e criam customiza√ß√µes proprias. Esta pr√°tica quebra o car√°ter autodescritivo e a mensagem contida no cabe√ßalho. A aus√™ncia do car√°ter autodescritivo limita a reutiliza√ß√£o e a adaptabilidade do recurso REST. Esse erro √© muito comum, n√£o podemos discutir as ocorr√™ncias deles porque isso seria fruto de uma enorme pesquisa em bases de c√≥digos que pela pr√≥pria natureza do antipadr√£o seria impratic√°vel. Mas podemos discutir o motivo que ele acontece. O gatilho desse antipadr√£o √© composto por dois fatores muito importantes: pouco tempo e pouco conhecimento. Quando um time sem experi√™ncia em REST tem pouco tempo para implementar uma funcionalidade, h√° a tenta√ß√£o de n√£o se fazer um design pr√©vio e um consulta a documenta√ß√µes ou especifica√ß√µes. Por volta de 2008 trabalhei em um projeto em que era preciso implementar um controle de concorr√™ncia e o arquiteto do time prop√¥s que cada recurso deveria ter um campo lastUpdate. Esse campo deveria ser enviado para o formul√°rio de edi√ß√£o e usado durante a opera√ß√£o de atualiza√ß√£o. Se o lastUpdate enviado pela requisi√ß√£o fosse diferente do salvo na base de dados, deveria ser exibido um erro para o usu√°rio. Perceba que essa √© exatamente a fun√ß√£o do cabe√ßalho ETag, mas na √©poca o framework utilizado n√£o permitia a cria√ß√£o de requisi√ß√µes REST, logo uma aplica√ß√£o simulava aplica√ß√µes desktop. Desvantagens Desenvolvedores que usam a API n√£o compreender√£o as especifidades Bibliotecas e frameworks apresentar√£o dificuldades para serem integrados, e se essas funcionalidades j√° forem integradas por padr√£o ser√° preciso reimplementar Esquecendo a Hiperm√≠dia A falta de hiperm√≠dia, ou seja, a n√£o vincula√ß√£o de recursos, dificulta a transi√ß√£o de estado para aplicativos REST. Uma poss√≠vel indica√ß√£o deste antipadr√£o √© a aus√™ncia de links de URL na representa√ß√£o de origem, o que normalmente restringe os clientes a seguirem os links, ou seja, limita a comunica√ß√£o din√¢mica entre clientes e servidores. Uma das grandes dificuldades em se usar APIs √© a dificuldade cognitiva para entend√™-la. Como Florian Haupt analisa, algumas APIs podem ter in√∫meras entidades e, quanto maior for a variedade da estrutura, mais dif√≠cil ser√° para um cliente conseguir resolver essas entidades. Assim, esse antipadr√£o se apresenta para APIs p√∫blicas como um grande entrave. Um desenvolvedor deve conhecer a API a fundo e programaticamente gerar todas os end-points de entidade. O fornecimento da hiperm√≠dia facilita a navega√ß√£o, assim como pode permitir que novas entidades sejam facilmente introduzidas na API. Todas as APIs que eu implementei possu√≠am esse antipadr√£o, algumas delas eram p√∫blicas o que podem ter causado problemas de atualiza√ß√£o para vers√µes futuras. Desvantagens A l√≥gica de associa√ß√£o entre recursos deve ser implementada tanto na API quanto nos clientes A aus√™ncia da hipermidia gera uma depend√™ncia de vers√µes entre clientes e APIs Ignorando o cache Clientes REST e desenvolvedores back-end tendem a evitar o cache devido √† sua complexidade de implementa√ß√£o. Ao ignorar recursos de cache n√£o usando _Cache-Control: no-cache_ ou _no-store_ e n√£o provendo um ETag no cabe√ßalho da resposta, evita-se qualquer redu√ß√£o no n√∫mero de requisi√ß√µes direcionadas para o servidor. Esse antipadr√£o √© bastante comum, o controle de cache n√£o est√° no conceito de pronto de muitos projetos ou em muitas projetos de design, at√© porque em 99% dos projetos de software o cache n√£o √© importante. O cache ser√° importante quando o seu projeto de software for usado por muitos clientes. Vale a pena relembrar a frase do Donald E. Knuth ‚ÄúA otimiza√ß√£o prematura √© a raiz de todos os males (ou pelo menos da maior parte deles) na programa√ß√£o‚Äù. A necessidade de cache deve ser validada em cada projeto. Ao nos depararmos com essa quest√£o devemos fazer duas perguntas: Essa entidade ser√° acessada por muitos clientes? √â o momento certo para implementar o controle de cache? Desvantagens N√£o haver√° nenhuma otimiza√ß√£o usando cache APIs com alta demanda de requisi√ß√µes v√£o usar recursos de infraestrutura desnecess√°rios Ignorando os MIME Types O servidor deve representar um mesmo recurso em v√°rios formatos, por exemplo, XML, JSON, PDF etc. Isso permite que clientes, desenvolvidos em qualquer linguagem consumam a API, independente do formato. Esse antipadr√£o acontece quando os desenvolvedores back-end geralmente tem uma √∫nica representa√ß√£o de recursos ou dependem de seus pr√≥prios formatos, o que limita a acessibilidade e a reutiliza√ß√£o da API. Para esse antipadr√£o, devemos pontuar duas ocorr√™ncias. Uma √© esquecer completamente de declarar o MIME Type, a outra √© somente declarar um MIME Type. No primeiro caso, √© um erro que pode acarretar na necessidade da escrita de mais c√≥digo para quem consome a API, pois a maioria das bibliotecas de clientes HTTP j√° esperam o MIME Type. Muitos dos frameworks back-end j√° t√™m um MIME Type padr√£o, mas por boa pr√°tica √© sempre bom declarar todos os formatos aceitos por um end-point. Quando temos apenas um tipo de MIME Type, a primeira pergunta que devemos fazer √©: quantos clientes nossa API vai ter? Se a resposta for cont√°vel e estiver todos dentro do controle da equipe de desenvolvimento, tudo bem seguir somente com um formato fora do padr√£o. Mas se pudermos ter clientes que n√£o conhe√ßemos, vale a pena adicionar diversos formatos, incluindo todos aqueles que j√° s√£o padr√µes para APIs. Desvantagens Frameworks front-end podem n√£o reconhecer o tipo de mensagem retornada O navegador pode n√£o reconhecer o tipo de mensagem retornada O desenvolvedor ter√° trabalho adicional para implementar corretamente o uso da API Ignorando o Status Code Apesar de um rico conjunto de c√≥digos de status definidos para v√°rios contextos, os desenvolvedores REST tendem a evit√°-los. Em muitos casos n√£o se preocupam com eles, ou, quando muito, apenas usam os mais comuns, a saber 200, 404 e 500. Ou em um caso ainda pior, usam o c√≥digo de status errado para um determinado tipo de resposta. O uso correto dos c√≥digos de status √© muito importante, assim como conhecer os tipos 2xx, 3xx, 4xx e 5xx que adicionam sem√¢ntica ao protocolo HTTP. Esse antipadr√£o √© o que mais impacta qualquer consumidor de APIs. O uso do Status Code indica o tipo de resposta que temos, esquecer ele vai implicar em sempre retornar 200, isso pode mascarar erros na requisi√ß√£o ou mesmo erros no servidor. √â imperativa a declara√ß√£o de todos os poss√≠veis erros na documenta√ß√£o, assim como o tratamento deles em c√≥digo. Se um c√≥digo n√£o trata todos os erros, √© bem provav√©l que um problema deixe vazar informa√ß√µes do servidor como hostname, endere√ßo de IP ou mesmo uma informa√ß√£o da pilha de execu√ß√£o (stackstrace). Exce√ß√µes tamb√©m podem trazer comportamentos adversos, como estouro de pilha ou vazamento de mem√≥rias, que podem causar instabilidade no servidor. Um c√≥digo de uma API deve ser feito usando programa√ß√£o defensiva, isso significa que quem desenvolve deve ter cuidado ao prever o m√°ximo de exce√ß√µes poss√≠vel. Como n√£o conhecemos o consumidor da API, √© bem provav√©l que haja mau uso dela. N√£o estou me referindo ao mau uso intencional, mas se deixarmos de validar todos os par√¢metros, podemos trazer instabilidade indesejada a nossa API. Desvantagens Erros podem se identificados como requisi√ß√µes executadas corretamente deixando de serem validados Mau uso de Cookies Stateless √© uma propriedade do REST a ser seguida. Manter o estado da sess√£o no lado do servidor √© uma m√° pr√°tica e n√£o deve ser feito. Cookies descaracterizam sua API, assim ela n√£o poder√° ser chamada de RESTful. O envio de chaves ou tokens no campo de cabe√ßalho Set-Cookie ou Cookie para a sess√£o do lado do servidor √© um exemplo de uso indevido de cookies, que diz respeito √† seguran√ßa e privacidade. N√£o h√° muito o que discutir nesse padr√£o. Se uma requisi√ß√£o REST precisa de uma informa√ß√£o em mem√≥ria no servidor, algo est√° errado. A boa pr√°tica √© que, ou a informa√ß√£o esteja armazenada no banco e seja independente da sess√£o, ou ela esteja dentro do Token JWT e seja parte do cadastro do usu√°rio. Caso n√£o esteja nessas duas condi√ß√µes temos um s√©rio problema de design. Um desses problemas de design √© a tenta√ß√£o de armazenar informa√ß√µes inerente ao front-end no back-end, isso √© relativamente f√°cil de se identificar. Para sabermos se essa informa√ß√£o √© referente ao front-end devemos perguntar se ela se refere √† l√≥gica da entidade ou √† l√≥gica da interface. Se for a l√≥gica da interface, logo ela pode variar entre os v√°rios clientes dispon√≠veis. Outro sinal de que temos um problema de design √© o n√≠vel de complexidade. Se o n√≠vel de complexidade est√° aumentando, √© hora de pararmos e repensar o design da API. Desvantagens O uso de cookies implica na impossiblidade de escalabilidade Caso seja preciso escalar, √© necess√°rio o uso de um mecanismo de cache para armazenar informa√ß√µes da sess√£o T√∫nel atrav√©s de GET Sendo o m√©todo HTTP mais fundamental em REST, o m√©todo GET recupera um recurso identificado por um URI. No entanto, muitas vezes os desenvolvedores usam apenas este m√©todo para realizar qualquer tipo de a√ß√£o ou opera√ß√£o, incluindo a cria√ß√£o, exclus√£o ou at√© mesmo para atualizar um recurso. No entanto, HTTP GET √© um m√©todo impr√≥prio para qualquer a√ß√£o diferente de acessar um recurso e n√£o corresponde ao seu prop√≥sito sem√¢ntico, se usado indevidamente. Em APIs REST a sem√¢ntica dos verbos HTTP deve ser respeitada, n√£o somente pela sem√¢ntica, mas caracter√≠stica de cada m√©todos. O m√©todo GET n√£o aceita corpo da mensagem, logo se formos us√°-lo para alterar recursos, teremos um s√©rio problema de design que dificultar√° o desenvolvimento. Qualquer altera√ß√£o requer par√¢metros, e eles dever√£o ser enviados ou por Query ou pelo pr√≥prio Path, isso dificultar√° tanto o desenvolvimento quanto o uso da API. Como regra √∫ltima, use: GET deve ser somente usado para acessar informa√ß√£o, nunca para alterar. Desvantagens Dificuldade para serializar par√¢metros Cache de opera√ß√µes indevidas Problema sem√¢ntico T√∫nel atrav√©s de POST Esse antipadr√£o √© muito semelhante ao anterior, exceto que, al√©m do URI, o corpo da solicita√ß√£o HTTP POST pode incorporar opera√ß√µes e par√¢metros a serem aplicados ao recurso. Os desenvolvedores tendem a depender apenas do m√©todo HTTP POST para enviar qualquer tipo de solicita√ß√£o ao servidor, incluindo acesso, atualiza√ß√£o ou exclus√£o de um recurso. Em geral, o uso adequado de HTTP POST √© criar um recurso do lado do servidor. Qualquer param√™tro que altere uma requisi√ß√£o de informa√ß√£o deve ser enviado como Query Parameter. Muito provavelmente vamos ver esse antipadr√£o sendo aplicado para par√¢metros de buscas. Alguns desenvolvedores usam o corpo da mensagem para definir esses par√¢metros. Mas podemos ver dois problemas nessa abordagem. O primeiro dos problemas √© a dificuldade de se resolver o cache. O m√©todo POST n√£o √© pass√≠vel de cache, porque ele j√° prev√™ que ser√£o feitas altera√ß√µes. Usando os par√¢metros na Query, todos os componentes de cache conseguir√£o identificar que uma resposta pr√©via pode ser usada para resolver a requisis√£o sem acessar o servidor. O segundo problema √© sem√¢ntico, como j√° foi discutido previamente. O verbo POST e PUT devem ser usados para alterar informa√ß√£o, caso tenhamos um requisito de neg√≥cio que seja necess√°rio usar, prefira usar o padr√£o Requisi√ß√£o Expressa. Desvantagens N√£o uso do cache Problema sem√¢ntico Autentica√ß√£o como consulta Esse antipadr√£o √© muito recorrente. Em muitas API, os par√¢metros de autentica√ß√£o s√£o enviados atrav√©s de query string. O protocolo HTTP j√° prev√™ v√°rios formatos de autentica√ß√£o e todos eles se baseiam no uso do header Authorization. Ao usar uma query string estamos expondo no log da aplica√ß√£o qual √© o token de cada usu√°rio, pois muitos frameworks exp√µem a URI sendo acessada no log de execu√ß√£o. Ou estamos desperdi√ßando implementa√ß√µes padr√µes para autentica√ß√£o (tanto para front-end quanto para back-end), tendo que criar c√≥digo desnecess√°rio para esse formato espec√≠fico de autentica√ß√£o; Desvantagens C√≥digo desnecess√°rio Falhas de seguran√ßa A complexidade de uma API Discutimos muitos sobre padr√µes e antipadr√µes, mas continuando na nossa avalia√ß√£o de uma API, existe algum m√©todo para avaliarmos a complexidade de uma API? Na nossa lista de artigos tem um pouco discutido na sess√£o anterior, nele Haupt analisa a estrutura de uma API considerando os seus recursos e a sua complexidade. Segundo Haupt, a complexidade de uma API depende diretamente do n√∫mero recursos que ela define, quantos deles s√£o readOnly, a quantidade de recursos raiz e da profundidade dessa API. Com isso podemos levantar alguns par√¢metros novos para analisarmos uma API. O primeiro par√¢metro √© a quantidade de recursos, APIs complexas tendem a ter mais recursos. Nesse pontos precisamos nos perguntar se a quantidade de recursos usados na nossa API √© √≥tima. No nosso exemplo temos poucos recursos, basicamente t√≠quetes e usu√°rios. Mas um usu√°rio pode assumir dois pap√©is diferentes em rela√ß√£o aos t√≠quetes sendo autor ou responsavel. Ao fazer a escolha por apenas usar a raiz das requisi√ß√µes por usuario, reduzimos o n√∫mero de recursos da nossa API, evitando complexidade. Essa complexidade desnecess√°ria pode ser compensada usando o padr√£o Vincula√ß√£o de entidades, poucas entidades raiz que prov√™ acesso a muitos recursos usando os valores retornados pela pr√≥pria API. Quando falamos do n√∫mero de recursos readOnly, devemos sempre nos perguntar quem gera esses recursos. Se s√£o dados gerados pelo usu√°rio da API, temos um problema de design. Recursos readOnly devem ser metadados da nossa API seguindo o padr√£o Acessibilidade dos Metadados. Mas esses metadados n√£o podem ser criados sem um padr√£o, os n√≥s informativos devem ser normalizados, reduzindo o n√∫mero de recursos da nossa API. Uma atividade que pode ser feita para se reduzir o n√∫mero de metadados √© a cataloga√ß√£o deles. Quais s√£o os metadados que nossa aplica√ß√£o gera? H√° algum padr√£o? Se houver um padr√£o, eles podem ser reduzidos. J√° a profundidade da API deve ser reduzida usando o padr√£o HATEOAS. Esse padr√£o n√£o foi detalhado neste capitulo, mas podemos entend√™-lo como uma deriva√ß√£o do Vincula√ß√£o de entidades. Segundo Fielding, o HATEOAS √© a implementa√ß√£o definitiva do REST, mas isso n√£o significa que uma API REST deve seguir esse padr√£o. Na verdade n√£o h√° nenhuma especifica√ß√£o definindo o HATEOAS deve ser implementado detalhadamente. As defini√ß√µes s√£o gen√©ricas e nenhum dos frameworks de mercado provem um padr√£o simples de se implementrar. Logo nossa defini√ß√£o tamb√©m ser√° generica, o HATEOAS permite a navega√ß√£o entre recursos afim de reduzir a complexidade de uma API. A maturidade de uma API Nosso √∫ltimo par√¢metro para avaliar uma API √© questionar se existe algum modelo de maturidade para API. Modelos de maturidades s√£o bons para avaliarmos onde estamos e como podemos melhorar. Eles normalmente s√£o compostos por n√≠veis e requisitos, ao se cumprir todos os requisitos de um n√≠vel, podemos afirmar que atingimos aquele n√≠vel. Todo modelo de maturidade come√ßa com um n√≠vel zero sem nenhuma exig√™ncia, em alguns casos esse n√≠vel √© chamado de caos. Quando usamos um modelo de maturidade temos uma an√°lise estruturada do que estamos trabalhado, deixamos de ser subjetivos e passamos ser objetivos. Para APIs REST, temos o Richardson Maturity Model. Ele define quatro n√≠vels para uma API REST, mas o pr√≥rio Fielding deixou claro que o n√≠vel 3 √© um pre-requisito para chamar uma API de RESTful. Isso n√£o significa que sua API n√£o √© REST se n√£o chegou a esse n√≠vel, precisamos ser flex√≠veis pois todo software evolui. Se ela exp√µe recursos e usa os verbos HTTP, de certa forma ela √© um tipo de REST. No n√≠vel zero, podemos qualificar qualquer comunica√ß√£o HTTP. Existem muitos projetos legados que se encaixam nesse n√≠vel, me recordo que pelo ano de 2008, quando comecei a trabalhar com projetos web, era comum encontrar endpoints como /listarUsuarios.do em que os par√¢metros da busca eram passados pelo corpo da mensagem. No n√≠vel um, podemos classificar as APIs que tem alguma l√≥gica na identifica√ß√£o das entidades. Assim qualquer esfor√ßo para catalogar as entidades podem fazer com que sua API seja mais f√°cil de se utilizar. Nesse caso, os end-points ser√£o deriva√ß√µes da entidade, por exemplo, a busca de usu√°rios podem ser /usuario/buscar ou somente /usuario. No n√≠vel dois, podemos classificar as APIs que usam os verbos considerando a sua sem√¢ntica. Nesse n√≠vel n√£o vamos ver os seguintes antipadr√µes T√∫nel atrav√©s de GET e T√∫nel atrav√©s de POST. Por fim, no n√≠vel tr√™s, temos o controle de h√≠permidia. Uma requisi√ß√£o vai retornar n√£o somente a informa√ß√£o, mas as entidades e a√ß√µes correlatas e seus respectivos end-points. Nesse n√≠vel temos o que conhecemos como HATEOAS (Hypertext As The Engine Of Application State ou Hipertexto como o Motor do Estado do Aplicativo). O back-end ganha um import√¢ncia meio na aplica√ß√£o, e o front-end se torna menos acoplado ao back-end. Ser√° poss√≠vel adicionar novas funcionalidades ao front-end sem nenhuma altera√ß√£o no mesmo. Para alcan√ßar o n√≠vel 3, √© necess√°rio um esfor√ßo grande de design que deve ser alinhado tanto com todos os consumidores da API. A implica√ß√£o de criar esse n√≠vel de API significa que o consumidor vai navegar no resultado, n√£o somente usar a API.7 Conclus√£o Neste cap√≠tulo, tentamos definir como podemos avaliar uma API. O primeiro elemento para classifica√ß√£o s√£o padr√µes e antipadr√µes de projetos. Com eles podemos aumentar o nosso repert√≥rio para classificar e descrever APIs. Ser√° que nossa API segue padr√µes de mercado? Ser√° quem um dos padr√µes pode ser aplicado para resolver um problema que temos? Depois avaliamos como se classifica a complexidade de uma API. APIs devem ser de f√°cil compreens√£o, quando elas se tornam muito complexas, ou elas n√£o deveriam ser uma API REST, ou elas precisam ser retrabalhadas. Existe algum recurso desnecess√°rio? Podemos extrair um recurso novp? Podemos aplicar algum padr√£o? APIs complexas podem dificultar a implementa√ß√£o de cliente ou de servidores, e isso pode ser resolvido com uma refatora√ß√£o da API. Por fim, podemos analizar a maturidade de uma API. Existem um m√©todo para isso? Vimos que sim, podemos qualificar qualquer API em n√≠veis. Isso n√£o significa que nossa API precisa ter o n√≠vel m√°ximo, mas que com ela podemos ver como podemos adicionar mais funcionalidades a nossa API.</summary></entry><entry><title type="html">Determinando a Confiabilidade de uma evid√™ncia</title><link href="https://vepo.github.io/posts/determinando-a-confiabilidade-de-uma-evidencia" rel="alternate" type="text/html" title="Determinando a Confiabilidade de uma evid√™ncia" /><published>2021-11-10T00:00:00+00:00</published><updated>2021-11-10T00:00:00+00:00</updated><id>https://vepo.github.io/posts/09-29-00-determinando-a-confiabilidade-de-uma-evidencia</id><content type="html" xml:base="https://vepo.github.io/posts/determinando-a-confiabilidade-de-uma-evidencia">&lt;p&gt;O que pode impactar na confiabilidade de uma evid√™ncia? Aqui vou levantar tr√™s pontos e vamos discutir sobre eles.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Dados ruins&lt;/li&gt;
  &lt;li&gt;Preconceitos sutis&lt;/li&gt;
  &lt;li&gt;Confus√£o entre Confiabilidade e Precis√£o&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;dados-ruins&quot;&gt;Dados ruins&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Dados ruins&lt;/strong&gt; podem vir de um universo pequeno ou n√£o representativo.&lt;/p&gt;

&lt;p&gt;Esse √© um ponto muito interessante que pode ser visto em algumas discuss√µes na 
&lt;a href=&quot;https://twitter.com/search?q=%23BolhaDev&quot;&gt;#BolhaDev&lt;/a&gt; do Twitter, alguns engenheiros que 
trabalham no vale do sil√≠cio acreditam que todas as politicas que eles usam por l√° pode 
ser aplicadas em empresas aqui no Brasil.&lt;/p&gt;

&lt;p&gt;Porque isso √© um erro de dados ruins?&lt;/p&gt;

&lt;p&gt;Porque as caracter√≠stica da m√£o de obra de l√° s√£o completamente diferentes das caracter√≠stica 
da m√£o de obra que temos aqui. Qualquer empresa brasileira tem um problema de sele√ß√£o de m√£o 
de obra que implicar√° na um qualifica√ß√£o inferior a desejada e alto turnover. Enquanto no vale 
do sil√≠cio esses problemas podem ser contornados com a importa√ß√£o de m√£o de obra qualificada. 
√â complicado supor que qualquer politica possa ser simplesmente usada em contextos t√£o distintos. 
Isso pode ser contornado ao se analisar as caracter√≠stica do universo a ser fruto da nossa an√°lise. 
Nossa amostra representa o universo?&lt;/p&gt;

&lt;p&gt;Para nos previnirmos de dados ruins, precisamos sempre procurar informa√ß√µes, estudar o universo
em quest√£o. Se estamos aplicando conhecimento de uma √°rea em outra, se o contexto mudou, 
precisamos primeiro nos contextualizar antes de omitir opini√£o ou decis√µes.&lt;/p&gt;

&lt;p&gt;Mudan√ßas de contextos s√£o sutis e podem acontecer mesmo quando n√£o percebemos.&lt;/p&gt;

&lt;h1 id=&quot;preconceitos-sutis&quot;&gt;Preconceitos sutis&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Preconceitos sutis&lt;/strong&gt; tamb√©m afetam a confiabilidade das nossas evid√™ncias.&lt;/p&gt;

&lt;p&gt;Vamos voltar ao caso dos engenheiros do vale do sil√≠cio? Quando voc√™ v√™ uma FAANG no curriculo, 
voc√™ j√° sup√µe que eles s√£o bons engenheiros, correto? E o que voc√™ sup√µes por engenheiros que nunca
trabalharam fora do pa√≠s?&lt;/p&gt;

&lt;p&gt;Eu n√£o preciso das respostas para saber que qualquer pessoa tem preconceitos.&lt;/p&gt;

&lt;p&gt;Isso acontece porque o nome Vale do Sil√≠cio traz uma autoridade, mas n√£o √© uma garantia autom√°tica 
de qualidade. Confiar em autoridade pode ser um problema, porque n√£o √© uma boa ferramenta. 
A pergunta que devemos fazer √©: &lt;em&gt;qual seria uma boa ferramenta para qualificar bons engenheiros?&lt;/em&gt;
Se encontrar uma resposta, podemos fugir da fal√°cia chamada &lt;strong&gt;Argumento de Autoridade&lt;/strong&gt;. Ela 
√© representada por uma contru√ß√£o comum: &lt;strong&gt;Y √© bom porque √© tem a origem X&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filosofia/esquema-com-tipos-de-argumentos.png&quot; alt=&quot;Argumentos e Fal√°cias&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Preconceitos sutis podem vir de coisas que n√£o gostamos. Vamos mudar nosso exemplo, se eu 
por exemplo n√£o gostar de produtos de uma determinada empresa X, mas tiver uma boa experi√™ncia
com produtos da empresa Y, ao escolher um novo produto vou ter que levantar todas as op√ß√µes 
poss√≠veis. Com certeza o novo produto da empresa X ser√° preterido mesmo ele sendo melhor que
o da empresa Y. N√£o vou dar nome aos produtos, mas vamos pensar em provedores de Cloud, temos 
tr√™s grandes players no mercado, e √© bem provavel que nossa escolha se paute no preconceito.&lt;/p&gt;

&lt;h1 id=&quot;confus√£o-entre-confiabilidade-e-precis√£o&quot;&gt;Confus√£o entre Confiabilidade e Precis√£o&lt;/h1&gt;

&lt;p&gt;E por fim podemos confundir &lt;strong&gt;precis√£o com confiabildiade&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Se temos algu√©m em nosso time que √© preciso nas suas respostas, usa palavras diretas e tem 
argumentos claros para defender suas posi√ß√µes podemos supor que essa pessoa est√° sempre correta?&lt;/p&gt;

&lt;p&gt;E se temos outra pessoa que n√£o √© preciso em suas respostas, e, ao defender sua posi√ß√£o,
coloca d√∫vida em certos pontos, √© ponderada em outros e apresenta v√°rias op√ß√µes. Seria essa pessoa 
menos confi√°vel que a primeira?&lt;/p&gt;

&lt;p&gt;Precis√£o n√£o √© confiabilidade, o primeiro integrante pode n√£o ter ponderado nos pontos 
negativos da sua decis√£o, enquanto o segundo pode ter avaliado todos os pontos negativos 
por isso tem mais d√∫vidas sobre a ado√ß√£o de uma solu√ß√£o ou n√£o.&lt;/p&gt;

&lt;p&gt;√â mais confi√°vel aquele que ponderam sobre as qualidades positivas e negativas de uma solu√ß√£o. 
Quem se foca nas qualidades negativas ser√° mais impreciso em suas decis√µes, mas essas decis√µes
ser√£o mais embasadas, pois as qualidades negativas foram bem exploradas.&lt;/p&gt;

&lt;p&gt;Outra forma dessa confus√£o aparecer √© quando temos um leque maior de possibilidades, 
a decis√£o pode parecer mais precisa qusndo limitamos as nossas op√ß√µes de escolha, expandir as
possibilidades leva a mais probabilidade de d√∫vida.&lt;/p&gt;

&lt;p&gt;Essa confus√£o gera uma dificuldade cognitiva, somos propensos a escolher pelo que √© preciso. 
E como podemos decidir se temos uma dificuldade cognitiva?&lt;/p&gt;

&lt;p&gt;Nessas situa√ß√£o n√£o podemos decidir baseado em nosso subconsciente, mas analisando friamente 
pr√≥s e contras de cada op√ß√£o.&lt;/p&gt;

&lt;p&gt;Outra ferramenta para vencermos essa confus√£o √© separar decis√£o de afeto. Somos levados a confiar
em pessoas pr√≥ximas, mas proximidade n√£o significa confian√ßa. Nem sempre meus amigos est√£o certos.
Essa √© uma caracter√≠stica exarcebarda nos povos latinos e por isso, n√≥s brasileiros precisamos ter
muito cuidado com as vozes amigas. N√£o que elas sejam maliciosas, longe de mim afirmar isso, mas 
quando precisamos tomar decis√µes cr√≠ticas precisamos de confiabilidade. Toda decis√£o merece uma 
an√°lise.&lt;/p&gt;

&lt;p&gt;E se s√≥ tivermos uma op√ß√£o? Quando temos uma op√ß√£o, na grande maioria das vezes, n√£o significa que
temos s√≥ uma op√ß√£o, mas que houve uma curadoria pr√©via. Algumas empresas criam processos para tomadas
de decis√µes e nesses processos envolvem a escolha de ao menos tr√™s solu√ß√µes alternativas. Essa √© uma
boa ferramenta para evitarmos ser enganados pela curadoria externa.&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Filosofia" /><category term="Pensamento Cr√≠tico" /><category term="Evid√™ncias" /><summary type="html">O que pode impactar na confiabilidade de uma evid√™ncia? Aqui vou levantar tr√™s pontos e vamos discutir sobre eles. Dados ruins Preconceitos sutis Confus√£o entre Confiabilidade e Precis√£o Dados ruins Dados ruins podem vir de um universo pequeno ou n√£o representativo. Esse √© um ponto muito interessante que pode ser visto em algumas discuss√µes na #BolhaDev do Twitter, alguns engenheiros que trabalham no vale do sil√≠cio acreditam que todas as politicas que eles usam por l√° pode ser aplicadas em empresas aqui no Brasil. Porque isso √© um erro de dados ruins? Porque as caracter√≠stica da m√£o de obra de l√° s√£o completamente diferentes das caracter√≠stica da m√£o de obra que temos aqui. Qualquer empresa brasileira tem um problema de sele√ß√£o de m√£o de obra que implicar√° na um qualifica√ß√£o inferior a desejada e alto turnover. Enquanto no vale do sil√≠cio esses problemas podem ser contornados com a importa√ß√£o de m√£o de obra qualificada. √â complicado supor que qualquer politica possa ser simplesmente usada em contextos t√£o distintos. Isso pode ser contornado ao se analisar as caracter√≠stica do universo a ser fruto da nossa an√°lise. Nossa amostra representa o universo? Para nos previnirmos de dados ruins, precisamos sempre procurar informa√ß√µes, estudar o universo em quest√£o. Se estamos aplicando conhecimento de uma √°rea em outra, se o contexto mudou, precisamos primeiro nos contextualizar antes de omitir opini√£o ou decis√µes. Mudan√ßas de contextos s√£o sutis e podem acontecer mesmo quando n√£o percebemos. Preconceitos sutis Preconceitos sutis tamb√©m afetam a confiabilidade das nossas evid√™ncias. Vamos voltar ao caso dos engenheiros do vale do sil√≠cio? Quando voc√™ v√™ uma FAANG no curriculo, voc√™ j√° sup√µe que eles s√£o bons engenheiros, correto? E o que voc√™ sup√µes por engenheiros que nunca trabalharam fora do pa√≠s? Eu n√£o preciso das respostas para saber que qualquer pessoa tem preconceitos. Isso acontece porque o nome Vale do Sil√≠cio traz uma autoridade, mas n√£o √© uma garantia autom√°tica de qualidade. Confiar em autoridade pode ser um problema, porque n√£o √© uma boa ferramenta. A pergunta que devemos fazer √©: qual seria uma boa ferramenta para qualificar bons engenheiros? Se encontrar uma resposta, podemos fugir da fal√°cia chamada Argumento de Autoridade. Ela √© representada por uma contru√ß√£o comum: Y √© bom porque √© tem a origem X. Preconceitos sutis podem vir de coisas que n√£o gostamos. Vamos mudar nosso exemplo, se eu por exemplo n√£o gostar de produtos de uma determinada empresa X, mas tiver uma boa experi√™ncia com produtos da empresa Y, ao escolher um novo produto vou ter que levantar todas as op√ß√µes poss√≠veis. Com certeza o novo produto da empresa X ser√° preterido mesmo ele sendo melhor que o da empresa Y. N√£o vou dar nome aos produtos, mas vamos pensar em provedores de Cloud, temos tr√™s grandes players no mercado, e √© bem provavel que nossa escolha se paute no preconceito. Confus√£o entre Confiabilidade e Precis√£o E por fim podemos confundir precis√£o com confiabildiade. Se temos algu√©m em nosso time que √© preciso nas suas respostas, usa palavras diretas e tem argumentos claros para defender suas posi√ß√µes podemos supor que essa pessoa est√° sempre correta? E se temos outra pessoa que n√£o √© preciso em suas respostas, e, ao defender sua posi√ß√£o, coloca d√∫vida em certos pontos, √© ponderada em outros e apresenta v√°rias op√ß√µes. Seria essa pessoa menos confi√°vel que a primeira? Precis√£o n√£o √© confiabilidade, o primeiro integrante pode n√£o ter ponderado nos pontos negativos da sua decis√£o, enquanto o segundo pode ter avaliado todos os pontos negativos por isso tem mais d√∫vidas sobre a ado√ß√£o de uma solu√ß√£o ou n√£o. √â mais confi√°vel aquele que ponderam sobre as qualidades positivas e negativas de uma solu√ß√£o. Quem se foca nas qualidades negativas ser√° mais impreciso em suas decis√µes, mas essas decis√µes ser√£o mais embasadas, pois as qualidades negativas foram bem exploradas. Outra forma dessa confus√£o aparecer √© quando temos um leque maior de possibilidades, a decis√£o pode parecer mais precisa qusndo limitamos as nossas op√ß√µes de escolha, expandir as possibilidades leva a mais probabilidade de d√∫vida. Essa confus√£o gera uma dificuldade cognitiva, somos propensos a escolher pelo que √© preciso. E como podemos decidir se temos uma dificuldade cognitiva? Nessas situa√ß√£o n√£o podemos decidir baseado em nosso subconsciente, mas analisando friamente pr√≥s e contras de cada op√ß√£o. Outra ferramenta para vencermos essa confus√£o √© separar decis√£o de afeto. Somos levados a confiar em pessoas pr√≥ximas, mas proximidade n√£o significa confian√ßa. Nem sempre meus amigos est√£o certos. Essa √© uma caracter√≠stica exarcebarda nos povos latinos e por isso, n√≥s brasileiros precisamos ter muito cuidado com as vozes amigas. N√£o que elas sejam maliciosas, longe de mim afirmar isso, mas quando precisamos tomar decis√µes cr√≠ticas precisamos de confiabilidade. Toda decis√£o merece uma an√°lise. E se s√≥ tivermos uma op√ß√£o? Quando temos uma op√ß√£o, na grande maioria das vezes, n√£o significa que temos s√≥ uma op√ß√£o, mas que houve uma curadoria pr√©via. Algumas empresas criam processos para tomadas de decis√µes e nesses processos envolvem a escolha de ao menos tr√™s solu√ß√µes alternativas. Essa √© uma boa ferramenta para evitarmos ser enganados pela curadoria externa.</summary></entry><entry><title type="html">Ponderando a relev√¢ncia de uma evid√™ncia</title><link href="https://vepo.github.io/posts/ponderando-a-relevancia-de-uma-evidencia" rel="alternate" type="text/html" title="Ponderando a relev√¢ncia de uma evid√™ncia" /><published>2021-11-10T00:00:00+00:00</published><updated>2021-11-10T00:00:00+00:00</updated><id>https://vepo.github.io/posts/12-04-00-ponderando-a-relevancia-de-uma-evidencia</id><content type="html" xml:base="https://vepo.github.io/posts/ponderando-a-relevancia-de-uma-evidencia">&lt;p&gt;O que √© relev√¢ncia? Relev√¢ncia √© o peso que uma evid√™ncia tem para apoiar ou rejeitar quest√µes importantes.&lt;/p&gt;

&lt;p&gt;Algumas evid√™ncias s√£o importantes para alguns contextos e totalmente irrelevantes para outros. Vamos supor
que estamos contratando um desenvolvedor, seria relevante se soubessemos que ele √© t√≠mido? N√ÉO! Mas e se 
na posi√ß√£o que ele est√° sendo cotado existe a necessidade de fazer palestras e apresenta√ß√µes, um 
desenvolvedor t√≠mido poderia atuar? Poderia, mas ele n√£o se sentiria confortavel e isso provavelmente 
afetaria a performance dele. Ele poderia muito bem trabalhar em qualquer outra posi√ß√£o na empresa, ou 
mesmo atuar com conjunto com outro desenvolvedor que se sinta a vontade para palestrar.&lt;/p&gt;

&lt;p&gt;Ent√£o se formos exposto a uma evid√™ncia dessas, como proceder? Existe algum m√©todo para determinarmos 
se uma evid√™ncia √© relavente ou n√£o?&lt;/p&gt;

&lt;p&gt;A resposta √© sim. Devemos:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Procurar por fal√°cias l√≥gicas&lt;/li&gt;
  &lt;li&gt;Fazer perguntas iniciadas por ‚Äúcomo‚Äù&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Se estamos procurando um desenvolvedor e surge um argumento que ele √© t√≠mido, isso √© uma fal√°cia chamada 
&lt;strong&gt;Ad Hominem&lt;/strong&gt;. Ela acontece quando deixamos de discutir um argumento e vamos atacar um o portador do 
argumento. No caso, ser t√≠mido n√£o afeta a qualidade da pessoa como desenvolvedor. Mas e se surgir o 
argumento ‚Äúquem indicou foi o Victor, ele n√£o √© um bom desenvolvedor‚Äù? Essa tamb√©m √© um argumento ‚ÄúAd Hominem‚Äù,
estamos deixando de avaliar a pessoa indicada para validar uma suposta caracter√≠stica de quem o indicou.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/filosofia/ad-homine.gif&quot; alt=&quot;Tirinha sobre Ad Hominem&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Conhecer as fal√°cias l√≥gicas √© muito importante para termos um pensamento cr√≠tico, elas podem nos livrar de 
armadilhas de pensamento que nos s√£o imposta at√© mesmo pelo senso comum. Em muitos casos fal√°cias s√£o usadas
n√£o por maldade, mas culturalmente. Se a pessoa A √© ineficiente e a pessoa B √© amiga da A, logo a pessoa B 
√© ineficiente. √â v√°lido esse argumento? N√£o! Essa √© a Fal√°cia da Associa√ß√£o. Existem in√∫meras, mas podemos 
posso enumerar outras importantes como a fal√°cia da composi√ß√£o ou da divis√£o ou o apelo ao rid√≠culo.&lt;/p&gt;

&lt;p&gt;Por fim, fazer perguntas usando ‚Äúcomo‚Äù pode nos ajudar a superar a irrelev√¢ncia de uma evid√™ncia. Vamos supor
que temos a evid√™ncia que nosso desenvolvedor √© t√≠mido.&lt;/p&gt;

&lt;p&gt;‚ÄúComo chegamos a essa conclus√£o?‚Äù Essa pergunta √© importante, uma vez eu perdi uma vaga em uma empresa 
porque surgiu uma fofoca que n√£o tinha nenhuma proced√™ncia. Isso afetou a minha vida.&lt;/p&gt;

&lt;p&gt;‚ÄúSe ele for realmente t√≠mido, como isso afeta no seu trabalho?‚Äù Essa pergunta √© a chave do racioc√≠nio, se 
o trabalho dele envolver atividades como palestrar, apresentar reuni√µes com clientes ou encontrar clientes,
logo ser t√≠mido √© uma caracter√≠stica que vai importar. Mas se ele for um desenvolvedor que vai trabalhar 
em um time desenvolvendo atividades de engenharia ou gerenciando times, o que importa?&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Filosofia" /><category term="Pensamento Cr√≠tico" /><category term="Evid√™ncias" /><summary type="html">O que √© relev√¢ncia? Relev√¢ncia √© o peso que uma evid√™ncia tem para apoiar ou rejeitar quest√µes importantes. Algumas evid√™ncias s√£o importantes para alguns contextos e totalmente irrelevantes para outros. Vamos supor que estamos contratando um desenvolvedor, seria relevante se soubessemos que ele √© t√≠mido? N√ÉO! Mas e se na posi√ß√£o que ele est√° sendo cotado existe a necessidade de fazer palestras e apresenta√ß√µes, um desenvolvedor t√≠mido poderia atuar? Poderia, mas ele n√£o se sentiria confortavel e isso provavelmente afetaria a performance dele. Ele poderia muito bem trabalhar em qualquer outra posi√ß√£o na empresa, ou mesmo atuar com conjunto com outro desenvolvedor que se sinta a vontade para palestrar. Ent√£o se formos exposto a uma evid√™ncia dessas, como proceder? Existe algum m√©todo para determinarmos se uma evid√™ncia √© relavente ou n√£o? A resposta √© sim. Devemos: Procurar por fal√°cias l√≥gicas Fazer perguntas iniciadas por ‚Äúcomo‚Äù Se estamos procurando um desenvolvedor e surge um argumento que ele √© t√≠mido, isso √© uma fal√°cia chamada Ad Hominem. Ela acontece quando deixamos de discutir um argumento e vamos atacar um o portador do argumento. No caso, ser t√≠mido n√£o afeta a qualidade da pessoa como desenvolvedor. Mas e se surgir o argumento ‚Äúquem indicou foi o Victor, ele n√£o √© um bom desenvolvedor‚Äù? Essa tamb√©m √© um argumento ‚ÄúAd Hominem‚Äù, estamos deixando de avaliar a pessoa indicada para validar uma suposta caracter√≠stica de quem o indicou. Conhecer as fal√°cias l√≥gicas √© muito importante para termos um pensamento cr√≠tico, elas podem nos livrar de armadilhas de pensamento que nos s√£o imposta at√© mesmo pelo senso comum. Em muitos casos fal√°cias s√£o usadas n√£o por maldade, mas culturalmente. Se a pessoa A √© ineficiente e a pessoa B √© amiga da A, logo a pessoa B √© ineficiente. √â v√°lido esse argumento? N√£o! Essa √© a Fal√°cia da Associa√ß√£o. Existem in√∫meras, mas podemos posso enumerar outras importantes como a fal√°cia da composi√ß√£o ou da divis√£o ou o apelo ao rid√≠culo. Por fim, fazer perguntas usando ‚Äúcomo‚Äù pode nos ajudar a superar a irrelev√¢ncia de uma evid√™ncia. Vamos supor que temos a evid√™ncia que nosso desenvolvedor √© t√≠mido. ‚ÄúComo chegamos a essa conclus√£o?‚Äù Essa pergunta √© importante, uma vez eu perdi uma vaga em uma empresa porque surgiu uma fofoca que n√£o tinha nenhuma proced√™ncia. Isso afetou a minha vida. ‚ÄúSe ele for realmente t√≠mido, como isso afeta no seu trabalho?‚Äù Essa pergunta √© a chave do racioc√≠nio, se o trabalho dele envolver atividades como palestrar, apresentar reuni√µes com clientes ou encontrar clientes, logo ser t√≠mido √© uma caracter√≠stica que vai importar. Mas se ele for um desenvolvedor que vai trabalhar em um time desenvolvendo atividades de engenharia ou gerenciando times, o que importa?</summary></entry><entry><title type="html">Um pouco de Pensamento Cr√≠tico</title><link href="https://vepo.github.io/posts/um-pouco-de-pensamento-critico" rel="alternate" type="text/html" title="Um pouco de Pensamento Cr√≠tico" /><published>2021-11-09T00:00:00+00:00</published><updated>2021-11-09T00:00:00+00:00</updated><id>https://vepo.github.io/posts/09-40-00-pensamento-critico</id><content type="html" xml:base="https://vepo.github.io/posts/um-pouco-de-pensamento-critico">&lt;h2 id=&quot;introdu√ß√£o&quot;&gt;Introdu√ß√£o&lt;/h2&gt;

&lt;p&gt;A origem do pensamento cr√≠tico √© a gr√©cia antiga? Sim e n√£o. Podemos afirmar que ele partiu de Conf√∫cio, 
mas o m√©todo que o ocidente usa √© baseado em S√≥crates e n√£o Conf√∫cio. E como ele se desenvolveu at√© hoje?&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Pensador&lt;/th&gt;
      &lt;th&gt;Contribui√ß√£o&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;S√≥crates&lt;/td&gt;
      &lt;td&gt;Introduziu a ideia questionar as cren√ßas, autoridades e procurar evid√™ncias. Ele n√£o produziu material, pois acreditava que a escrita era uma forma inferior de pensamento. A forma superior era o dialogo como uma forma de atingir a verdade.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Plat√£o&lt;/td&gt;
      &lt;td&gt;Fundou a primeira escola do mundo ocidental, a Academia. Foi respons√°vel por escrever os dialogos do seu mestre S√≥crates.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Arist√≥teles&lt;/td&gt;
      &lt;td&gt;Introduziu o pensamento estruturado. Coisas como a classifica√ß√£o da informa√ß√£o, organizar e analisar argumentos, identificar fal√°cias (que s√£o erros no pensamento l√≥gico), a ret√≥rica e o argumento persuasivo estruturado.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bacon&lt;/td&gt;
      &lt;td&gt;Organizou o que √© o pensamento cient√≠fico.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;O pensamento cr√≠tico usa o m√©todo do racioc√≠nio dedutivo, que √© um m√©todo para partir de uma observa√ß√£o 
gen√©rica e chegar a uma conclus√£o espec√≠fica. O pensamento cr√≠tico √© irm√£o do pensamento cient√≠fico e ambos
vem da filosofia.&lt;/p&gt;

&lt;p&gt;O pensamento cient√≠fico usa o m√©todo do pensamento indutivo, que √© um m√©todo para partir de uma observa√ß√£o 
especifica e char a uma conclus√£o gen√©rica. Questionar, pensar, argumentar, duvidar e testar s√£o uma parte 
natural da mentalidade cient√≠fica.&lt;/p&gt;

&lt;h2 id=&quot;o-bom-pensador&quot;&gt;O Bom Pensador&lt;/h2&gt;

&lt;p&gt;O que define um bom pensador? Como boas ideias chegam e transformam a realidade?
S√£o elas fruto de inspira√ß√£o? N√£o! Um bom pensador est√° baseado em tr√™s pilares:
criatividade, estrat√©gia e pensamento crit√≠co.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;pensamento criativo&lt;/strong&gt; vem de aplicar outras formas de pensar ao seu campo de trabalho.
Em muitos casos essas novas forma de pensar n√£o s√£o novas, s√£o apenas adaptadas de outros
campos. Como √© o machine learning por exemplo, que resolveu copiar a forma que o neur√¥nio
usa para processar informa√ß√µes. Ou ela parte da simples invers√£o da ordem das coisas.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;pensamento estrat√©gico&lt;/strong&gt; √© usado para analisar o problema, detalhando for√ßas e fraquezas,
analisando tend√™ncias atrav√©s do tempo, ou simplesmente chegando a raiz do problema. 
Perguntar o porque das coisas √© um bom m√©todo de alcan√ßar o pensamento estrat√©gico. 
Cada resposta levantar√° uma s√©rie de outras perguntas, e assim por diante, expandindo
o conhecimento e as possibilidades de mais investiga√ß√£o sobre o problema.&lt;/p&gt;

&lt;p&gt;O &lt;strong&gt;pensamento cr√≠tico&lt;/strong&gt; trar√° valor a informa√ß√£o coletada. Dentre todas as respostas levantadas
anteriormente, qual √© a mais valiosa? Ou qual √© a mais relevante para antingirmos o nosso 
objetivo a curto prazo? Para ser cr√≠tico, voc√™ precisa ser c√©tico, n√£o c√≠nico. Voc√™ validar
e questionar todas as evid√™ncias que tem em m√£os, n√£o deixando de explorar premissas e 
preconceitos. O pensamento cr√≠tico junto com o estrat√©gia e criatividade ajudam a conseguir 
evid√™ncias para tomar deci√ß√µes confiantes, relevantes e validadas.&lt;/p&gt;

&lt;p&gt;Se voc√™ √© capaz de ter um objetivo, fazer perguntas importantes e exercitar o seu pensamento
para chegar a conclus√µes, voc√™ √© um bom pensador.&lt;/p&gt;

&lt;h2 id=&quot;os-fundamentos-do-pensamento-cr√≠tico&quot;&gt;Os fundamentos do pensamento cr√≠tico&lt;/h2&gt;

&lt;p&gt;Idealmente o pensamento cr√≠tico atua quando criticamos o que cremos. 
Mas existe algum framework que pode nos ajudar nisso? Sim! Podemos 
sempre questionar a confiabilidade, relev√¢ncia e validade.&lt;/p&gt;

&lt;p&gt;Um exemplo classico de como podemos ser traidos pela &lt;strong&gt;confiabilidade&lt;/strong&gt; 
foram de alguns engenheiros que construiram uma IA para reconhecer 
cachorros ou lobos em fotos. Essa IA foi treinada alcan√ßando uma 
confiabilidade altissima, mas quando os engenheiros foram validar 
se ela era realmente √∫til, perceberam que os parametros usados n√£o
valorizavam a imagem do animal, mas o meio em que ele estava. O 
aminal estava na neve ou na natureza? Lobo. O animal estava em um 
jardim ou dentro de casa? Cachorro. Esse algoritmo √© confi√°vel?
N√£o! Essa √© uma forma de exercer o pensamento cr√≠tico, se os 
engenheiros tivessem confiado que o algoritmo √© confi√°vel, eles n√£o
teriam obtido sucesso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relev√¢ncia&lt;/strong&gt; √© usada para julgar se quest√µes que s√£o importantes para 
determinados contextos tem significado em outros contextos. Para 
identificar se um animal √© um cachorro ou um lobo o ambiente √© 
relevante? Mas e se quis√©ssemos identificar qual esporte uma pessoa 
est√° praticando ser√° extremamente √∫til para distinguir esqui aqu√°tico
do seu primo mais velho esqui.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validade&lt;/strong&gt; √© usada para criar um fluxo l√≥gico entre evid√™ncias e conclus√µes.
Sempre que chegamos a uma conclus√£o baseada em uma evid√™ncia, precisamos
fazer a pergunta inversa: &lt;em&gt;essa conclus√£o √© comprovada pela evid√™ncia?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Um exemplo classico:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Lobos s√£o animais que vivem na floresta&lt;/li&gt;
  &lt;li&gt;Rex √© um animal que vive na floresta&lt;/li&gt;
  &lt;li&gt;Logo, Rex √© um lobo.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Seria &lt;strong&gt;(3)&lt;/strong&gt; uma conclus√£o das duas evid√™ncias? N√£o, pois n√£o h√° nenhuma 
evid√™ncia que Rex seja realmente um lobo, &lt;strong&gt;(1)&lt;/strong&gt; √© um argumento vago visto que 
existem in√∫meros animais que vivem nas florestas. As duas evid√™ncias s√£o fracas.
Eu poderia at√© fazer a cl√°ssica piada do Steve Wonder ser Deus, mas creio
que ela √© muito velha e poucos a conheceriam.&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Filosofia" /><category term="Pensamento Cr√≠tico" /><summary type="html">Introdu√ß√£o A origem do pensamento cr√≠tico √© a gr√©cia antiga? Sim e n√£o. Podemos afirmar que ele partiu de Conf√∫cio, mas o m√©todo que o ocidente usa √© baseado em S√≥crates e n√£o Conf√∫cio. E como ele se desenvolveu at√© hoje? Pensador Contribui√ß√£o S√≥crates Introduziu a ideia questionar as cren√ßas, autoridades e procurar evid√™ncias. Ele n√£o produziu material, pois acreditava que a escrita era uma forma inferior de pensamento. A forma superior era o dialogo como uma forma de atingir a verdade. Plat√£o Fundou a primeira escola do mundo ocidental, a Academia. Foi respons√°vel por escrever os dialogos do seu mestre S√≥crates. Arist√≥teles Introduziu o pensamento estruturado. Coisas como a classifica√ß√£o da informa√ß√£o, organizar e analisar argumentos, identificar fal√°cias (que s√£o erros no pensamento l√≥gico), a ret√≥rica e o argumento persuasivo estruturado. Bacon Organizou o que √© o pensamento cient√≠fico. O pensamento cr√≠tico usa o m√©todo do racioc√≠nio dedutivo, que √© um m√©todo para partir de uma observa√ß√£o gen√©rica e chegar a uma conclus√£o espec√≠fica. O pensamento cr√≠tico √© irm√£o do pensamento cient√≠fico e ambos vem da filosofia. O pensamento cient√≠fico usa o m√©todo do pensamento indutivo, que √© um m√©todo para partir de uma observa√ß√£o especifica e char a uma conclus√£o gen√©rica. Questionar, pensar, argumentar, duvidar e testar s√£o uma parte natural da mentalidade cient√≠fica. O Bom Pensador O que define um bom pensador? Como boas ideias chegam e transformam a realidade? S√£o elas fruto de inspira√ß√£o? N√£o! Um bom pensador est√° baseado em tr√™s pilares: criatividade, estrat√©gia e pensamento crit√≠co. O pensamento criativo vem de aplicar outras formas de pensar ao seu campo de trabalho. Em muitos casos essas novas forma de pensar n√£o s√£o novas, s√£o apenas adaptadas de outros campos. Como √© o machine learning por exemplo, que resolveu copiar a forma que o neur√¥nio usa para processar informa√ß√µes. Ou ela parte da simples invers√£o da ordem das coisas. O pensamento estrat√©gico √© usado para analisar o problema, detalhando for√ßas e fraquezas, analisando tend√™ncias atrav√©s do tempo, ou simplesmente chegando a raiz do problema. Perguntar o porque das coisas √© um bom m√©todo de alcan√ßar o pensamento estrat√©gico. Cada resposta levantar√° uma s√©rie de outras perguntas, e assim por diante, expandindo o conhecimento e as possibilidades de mais investiga√ß√£o sobre o problema. O pensamento cr√≠tico trar√° valor a informa√ß√£o coletada. Dentre todas as respostas levantadas anteriormente, qual √© a mais valiosa? Ou qual √© a mais relevante para antingirmos o nosso objetivo a curto prazo? Para ser cr√≠tico, voc√™ precisa ser c√©tico, n√£o c√≠nico. Voc√™ validar e questionar todas as evid√™ncias que tem em m√£os, n√£o deixando de explorar premissas e preconceitos. O pensamento cr√≠tico junto com o estrat√©gia e criatividade ajudam a conseguir evid√™ncias para tomar deci√ß√µes confiantes, relevantes e validadas. Se voc√™ √© capaz de ter um objetivo, fazer perguntas importantes e exercitar o seu pensamento para chegar a conclus√µes, voc√™ √© um bom pensador. Os fundamentos do pensamento cr√≠tico Idealmente o pensamento cr√≠tico atua quando criticamos o que cremos. Mas existe algum framework que pode nos ajudar nisso? Sim! Podemos sempre questionar a confiabilidade, relev√¢ncia e validade. Um exemplo classico de como podemos ser traidos pela confiabilidade foram de alguns engenheiros que construiram uma IA para reconhecer cachorros ou lobos em fotos. Essa IA foi treinada alcan√ßando uma confiabilidade altissima, mas quando os engenheiros foram validar se ela era realmente √∫til, perceberam que os parametros usados n√£o valorizavam a imagem do animal, mas o meio em que ele estava. O aminal estava na neve ou na natureza? Lobo. O animal estava em um jardim ou dentro de casa? Cachorro. Esse algoritmo √© confi√°vel? N√£o! Essa √© uma forma de exercer o pensamento cr√≠tico, se os engenheiros tivessem confiado que o algoritmo √© confi√°vel, eles n√£o teriam obtido sucesso. Relev√¢ncia √© usada para julgar se quest√µes que s√£o importantes para determinados contextos tem significado em outros contextos. Para identificar se um animal √© um cachorro ou um lobo o ambiente √© relevante? Mas e se quis√©ssemos identificar qual esporte uma pessoa est√° praticando ser√° extremamente √∫til para distinguir esqui aqu√°tico do seu primo mais velho esqui. Validade √© usada para criar um fluxo l√≥gico entre evid√™ncias e conclus√µes. Sempre que chegamos a uma conclus√£o baseada em uma evid√™ncia, precisamos fazer a pergunta inversa: essa conclus√£o √© comprovada pela evid√™ncia? Um exemplo classico: Lobos s√£o animais que vivem na floresta Rex √© um animal que vive na floresta Logo, Rex √© um lobo. Seria (3) uma conclus√£o das duas evid√™ncias? N√£o, pois n√£o h√° nenhuma evid√™ncia que Rex seja realmente um lobo, (1) √© um argumento vago visto que existem in√∫meros animais que vivem nas florestas. As duas evid√™ncias s√£o fracas. Eu poderia at√© fazer a cl√°ssica piada do Steve Wonder ser Deus, mas creio que ela √© muito velha e poucos a conheceriam.</summary></entry><entry><title type="html">Log n√£o √© auditoria!</title><link href="https://vepo.github.io/posts/log-nao-e-auditoria" rel="alternate" type="text/html" title="Log n√£o √© auditoria!" /><published>2021-11-02T00:00:00+00:00</published><updated>2021-11-02T00:00:00+00:00</updated><id>https://vepo.github.io/posts/10-37-00-log-nao-e-auditoria</id><content type="html" xml:base="https://vepo.github.io/posts/log-nao-e-auditoria">&lt;p&gt;Esse post √© uma resposta as in√∫meras mensagens que recebi por um tweet.&lt;/p&gt;

&lt;p&gt;No dia 02/11/2021 uma empresa de entrega de comida sofreu um ataque interno de um colaborador. Os nomes dos restaurantes foram alterados para nomes ofensivos. Foi um ataque politico, direcionado e baixo. Tentavam macular a imagem da vereadora Marielle Franco em ataques infantil. Na minha opini√£o era melhor a policia investigar e n√£o a empresa. Foi uma ofensa a fam√≠lia da Marielle, aos restaurantes envolvidos e aos usu√°rios.&lt;/p&gt;

&lt;p&gt;Foi a√≠ que comecei a ler minha timeline e percebi que muito se falava de investigar. E levantei a quest√£o‚Ä¶. seu sistema tem auditoria como uma funcionalidade?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/auditoria/auditoria.png&quot; alt=&quot;Meu tweet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Era tarde e pela manh√£ j√° havia v√°rias intera√ß√µes, muitas delas falando de log. √â confuso, mas vamos definir o que √© um log e o que √© uma auditoria?&lt;/p&gt;

&lt;h1 id=&quot;o-que-√©-log&quot;&gt;O que √© log?&lt;/h1&gt;

&lt;p&gt;Muitos confundem log por log de aplica√ß√£o. Log √© um formato de armazenamento. √â quando uma aplica√ß√£o sempre escreve em um fluxo de dados. Esse fluxo pode ser qualquer coisa, um arquivo, um socket ou quem sabe uma impressora.&lt;/p&gt;

&lt;p&gt;Logs s√£o usados desde o inicio da computa√ß√£o pois s√£o extremamente √∫teis. Se voc√™ pensa que √© usado somente com um proposito, est√° errado! Existem bancos de dados que usam logs para armazenar as informa√ß√µes. O Apache Kafka armazena as mensagem em arquivos de logs.&lt;/p&gt;

&lt;p&gt;Para simplificar, qualquer dado imut√°vel pode, e deve, ser armazenado usando logs. O que vai diferenciar √© o framework. J√° vi sistema que usava o SLF4J para enviar mensagens para o Apache Kafka, pode parecer fora de proposito, mas isso facilitava em muito a implementa√ß√£o e o Kafka poderia ser substitu√≠do pelo log de arquivo.&lt;/p&gt;

&lt;p&gt;O log de sistema √© um m√©todo para resolu√ß√£o de problemas (o famoso troubleshooting). Toda aplica√ß√£o deve ter log usando n√≠veis, mensagens mais importantes deve ser associadas a n√≠veis mais elevados. Como o log √© uma atividade cara, em termos de performance, certos n√≠veis podem ser desabilitados. Eu n√£o vou definir os n√≠veis, porque eles s√£o abertos e muitas vezes definido pelo framework.&lt;/p&gt;

&lt;p&gt;No momento em que escrevo esse post estou trabalhando em um sistema legado que tem tr√™s n√≠veis de debug! Se eu ativer o n√≠vel m√°ximo consigo at√© ler como as mensagens socket est√£o sendo lidas pela aplica√ß√£o. Esse n√≠vel m√°ximo s√≥ deve ser usando quando h√° algum problema no protocolo de comunica√ß√£o e n√£o na aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;O log de sistema deve ter mensagens √∫teis para a resolu√ß√£o de problema, assim como avisos e erros de execu√ß√£o. Ele √© um fluxo de dados vol√°til, pode ser descartado se n√£o houver nada a se investigar. Ou em sistemas est√°veis, pode at√© ser desabilitado, registrando apenas mensagens de erros.&lt;/p&gt;

&lt;h1 id=&quot;o-que-√©-auditoria&quot;&gt;O que √© auditoria?&lt;/h1&gt;

&lt;p&gt;Auditoria √© um processo. Voc√™ com certeza j√° ouviu o termo ‚Äúauditoria externa‚Äù. Qualquer empresa pode passar por auditoria, √© quando um auditor vem observar se os processos est√£o condizentes com a norma. Se n√£o ficou √≥bvio vou ressaltar: auditoria pressup√µe a exist√™ncia de processos e normas.&lt;/p&gt;

&lt;p&gt;Qualquer empresa que trabalha com dados precisa de processos bem definidos. Usar dados envolve armazenar, transformar e usar dados. Dados s√£o ativos regulados por leis, inclusive pela LGPD que define que os dados n√£o pertencem a empresa, mas ao usu√°rio que originou ele. O usu√°rio cede a empresa seus dados e deve autorizar o seu uso (n√£o sou advogado e posso estar confundindo a LGPD brasileira com a europeia).&lt;/p&gt;

&lt;p&gt;√â papel de um CTO e do arquiteto da empresa ter um mapeamento de quais dados a empresa possui e como eles s√£o usados internamente. Sei que √© praticamente imposs√≠vel ter essa informa√ß√£o atualizada por causa da agilidade do desenvolvimento.&lt;/p&gt;

&lt;p&gt;Computa√ß√£o ainda √© um campo sem processos bem definidos, assim como a ind√∫stria do petr√≥leo era no passado. Mas vazamentos e acidentes come√ßaram a ocorrer com frequ√™ncia o que ocasionou uma intensa regulamenta√ß√£o. A computa√ß√£o est√° prestes a chegar a maturidade, voc√™ pode ver no notici√°rio um CEO de uma Big Tech depondo (mentindo) para o congresso americano. Eu acompanhei o depoimento dele de 2018, ele se recusou a responder o que fazia com os dados de usu√°rio da plataforma dele. Ele poderia ser preso por n√£o responder ou responder de forma gen√©rica, mas ele preferiu desconversar do que falar a verdade. Isso significa que a resposta dele poderia ocasionar sua imediata pris√£o e o fechamento da plataforma.&lt;/p&gt;

&lt;p&gt;Porque eu estou falando isso? Fugi ao tema do post? N√£o! Processos de auditoria v√£o ficar cada vez mais comuns! Essa discuss√£o do senado americano no fim vai provar como o uso de dados pessoais foram uma amea√ßa a democracia americana, democracia brasileira e a economia do Reino Unido. Quando eles provarem isso vir√° uma severa legisla√ß√£o. Muitas empresas v√£o reclamar, mas ser√° culpa deles pode n√£o terem se auto regulado!&lt;/p&gt;

&lt;p&gt;Empresas v√£o precisar gerar dados para auditoria, frameworks v√£o ser padronizados e terceirizados, surgir√£o normas para gest√£o de dados, modelos de ML ser√£o auditados. J√° h√° uma literatura sobre o assunto, tente ler o livro &lt;a href=&quot;https://www.amazon.com.br/Algoritmos-Destrui%C3%A7%C3%A3o-Massa-Cathy-ONeil/dp/6586460026/&quot;&gt;Algoritmos de Destrui√ß√£o em Massa&lt;/a&gt; da Cathy O‚ÄôNeil. Qualquer empresa que mexe com dados vai precisar construir sistemas de auditoria.&lt;/p&gt;

&lt;p&gt;Mas esses sistemas j√° deveriam existir internamente. Sei que eles existem em bancos, porque s√£o entidades muito regulamentadas. AINDA BEM!!! Se acha isso chato, √© melhor do que voc√™ acordar pobre porque o banco n√£o tem dinheiro. Isso j√° aconteceu no Brasil.&lt;/p&gt;

&lt;h1 id=&quot;porque-n√£o-usar-o-log-para-auditoria&quot;&gt;Porque n√£o usar o log para Auditoria&lt;/h1&gt;

&lt;p&gt;No fundo auditoria √© um log, mas a diferen√ßa √© quem o consulta e quando. Mas usar uma funcionalidade de log vai fazer com que a auditoria seja especifica de um servi√ßo e n√£o uma empresa.&lt;/p&gt;

&lt;p&gt;Quando falamos de microsservi√ßos e computa√ß√£o distribu√≠da, alguns sistemas n√£o tem a informa√ß√£o completa. J√° implementei um sistema que certos servi√ßos n√£o tinha a informa√ß√£o de usu√°rio, s√≥ o identificador. Uma auditoria precisa de dados correlacionados, significado.&lt;/p&gt;

&lt;p&gt;Auditoria precisa de interface de usu√°rio tamb√©m. Porque n√£o criar uma interface simples que permite ver que dados foram alterados. Essa interface tem que proteger a integridade do dados, se um usu√°rio alterar o n√∫mero do cart√£o de cr√©dito esse dado tem que estar ileg√≠vel, mas tem que existir esse dados. Na verdade √© recomend√°vel que informa√ß√µes sens√≠veis n√£o estejam vis√≠veis na base de dados. NINGU√âM DA EMPRESA PODE TER ACESSO A DADOS DE USU√ÅRIO!&lt;/p&gt;

&lt;h1 id=&quot;frameworks-para-auditoria&quot;&gt;Frameworks para auditoria&lt;/h1&gt;

&lt;p&gt;Se voc√™ √© desenvolvedor Java como eu e usa bases relacionais. Recomendo fortemente o uso do Hibernate com Envers. √â uma framework de mercado, est√°vel, bem documentado e que entrega audit√≥ria. N√£o conhe√ßo outros frameworks para bases n√£o relacionais, se tiver algum me manda pelo twitter.&lt;/p&gt;

&lt;p&gt;Mas isso n√£o significa que o trabalho terminou. Voc√™ apenas armazenou os dados, o que √© relevante para o sistema. Mas esses dados s√£o signficativos?&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Logging" /><category term="Auditoria" /><category term="Produto" /><summary type="html">Esse post √© uma resposta as in√∫meras mensagens que recebi por um tweet. No dia 02/11/2021 uma empresa de entrega de comida sofreu um ataque interno de um colaborador. Os nomes dos restaurantes foram alterados para nomes ofensivos. Foi um ataque politico, direcionado e baixo. Tentavam macular a imagem da vereadora Marielle Franco em ataques infantil. Na minha opini√£o era melhor a policia investigar e n√£o a empresa. Foi uma ofensa a fam√≠lia da Marielle, aos restaurantes envolvidos e aos usu√°rios. Foi a√≠ que comecei a ler minha timeline e percebi que muito se falava de investigar. E levantei a quest√£o‚Ä¶. seu sistema tem auditoria como uma funcionalidade? Era tarde e pela manh√£ j√° havia v√°rias intera√ß√µes, muitas delas falando de log. √â confuso, mas vamos definir o que √© um log e o que √© uma auditoria? O que √© log? Muitos confundem log por log de aplica√ß√£o. Log √© um formato de armazenamento. √â quando uma aplica√ß√£o sempre escreve em um fluxo de dados. Esse fluxo pode ser qualquer coisa, um arquivo, um socket ou quem sabe uma impressora. Logs s√£o usados desde o inicio da computa√ß√£o pois s√£o extremamente √∫teis. Se voc√™ pensa que √© usado somente com um proposito, est√° errado! Existem bancos de dados que usam logs para armazenar as informa√ß√µes. O Apache Kafka armazena as mensagem em arquivos de logs. Para simplificar, qualquer dado imut√°vel pode, e deve, ser armazenado usando logs. O que vai diferenciar √© o framework. J√° vi sistema que usava o SLF4J para enviar mensagens para o Apache Kafka, pode parecer fora de proposito, mas isso facilitava em muito a implementa√ß√£o e o Kafka poderia ser substitu√≠do pelo log de arquivo. O log de sistema √© um m√©todo para resolu√ß√£o de problemas (o famoso troubleshooting). Toda aplica√ß√£o deve ter log usando n√≠veis, mensagens mais importantes deve ser associadas a n√≠veis mais elevados. Como o log √© uma atividade cara, em termos de performance, certos n√≠veis podem ser desabilitados. Eu n√£o vou definir os n√≠veis, porque eles s√£o abertos e muitas vezes definido pelo framework. No momento em que escrevo esse post estou trabalhando em um sistema legado que tem tr√™s n√≠veis de debug! Se eu ativer o n√≠vel m√°ximo consigo at√© ler como as mensagens socket est√£o sendo lidas pela aplica√ß√£o. Esse n√≠vel m√°ximo s√≥ deve ser usando quando h√° algum problema no protocolo de comunica√ß√£o e n√£o na aplica√ß√£o. O log de sistema deve ter mensagens √∫teis para a resolu√ß√£o de problema, assim como avisos e erros de execu√ß√£o. Ele √© um fluxo de dados vol√°til, pode ser descartado se n√£o houver nada a se investigar. Ou em sistemas est√°veis, pode at√© ser desabilitado, registrando apenas mensagens de erros. O que √© auditoria? Auditoria √© um processo. Voc√™ com certeza j√° ouviu o termo ‚Äúauditoria externa‚Äù. Qualquer empresa pode passar por auditoria, √© quando um auditor vem observar se os processos est√£o condizentes com a norma. Se n√£o ficou √≥bvio vou ressaltar: auditoria pressup√µe a exist√™ncia de processos e normas. Qualquer empresa que trabalha com dados precisa de processos bem definidos. Usar dados envolve armazenar, transformar e usar dados. Dados s√£o ativos regulados por leis, inclusive pela LGPD que define que os dados n√£o pertencem a empresa, mas ao usu√°rio que originou ele. O usu√°rio cede a empresa seus dados e deve autorizar o seu uso (n√£o sou advogado e posso estar confundindo a LGPD brasileira com a europeia). √â papel de um CTO e do arquiteto da empresa ter um mapeamento de quais dados a empresa possui e como eles s√£o usados internamente. Sei que √© praticamente imposs√≠vel ter essa informa√ß√£o atualizada por causa da agilidade do desenvolvimento. Computa√ß√£o ainda √© um campo sem processos bem definidos, assim como a ind√∫stria do petr√≥leo era no passado. Mas vazamentos e acidentes come√ßaram a ocorrer com frequ√™ncia o que ocasionou uma intensa regulamenta√ß√£o. A computa√ß√£o est√° prestes a chegar a maturidade, voc√™ pode ver no notici√°rio um CEO de uma Big Tech depondo (mentindo) para o congresso americano. Eu acompanhei o depoimento dele de 2018, ele se recusou a responder o que fazia com os dados de usu√°rio da plataforma dele. Ele poderia ser preso por n√£o responder ou responder de forma gen√©rica, mas ele preferiu desconversar do que falar a verdade. Isso significa que a resposta dele poderia ocasionar sua imediata pris√£o e o fechamento da plataforma. Porque eu estou falando isso? Fugi ao tema do post? N√£o! Processos de auditoria v√£o ficar cada vez mais comuns! Essa discuss√£o do senado americano no fim vai provar como o uso de dados pessoais foram uma amea√ßa a democracia americana, democracia brasileira e a economia do Reino Unido. Quando eles provarem isso vir√° uma severa legisla√ß√£o. Muitas empresas v√£o reclamar, mas ser√° culpa deles pode n√£o terem se auto regulado! Empresas v√£o precisar gerar dados para auditoria, frameworks v√£o ser padronizados e terceirizados, surgir√£o normas para gest√£o de dados, modelos de ML ser√£o auditados. J√° h√° uma literatura sobre o assunto, tente ler o livro Algoritmos de Destrui√ß√£o em Massa da Cathy O‚ÄôNeil. Qualquer empresa que mexe com dados vai precisar construir sistemas de auditoria. Mas esses sistemas j√° deveriam existir internamente. Sei que eles existem em bancos, porque s√£o entidades muito regulamentadas. AINDA BEM!!! Se acha isso chato, √© melhor do que voc√™ acordar pobre porque o banco n√£o tem dinheiro. Isso j√° aconteceu no Brasil. Porque n√£o usar o log para Auditoria No fundo auditoria √© um log, mas a diferen√ßa √© quem o consulta e quando. Mas usar uma funcionalidade de log vai fazer com que a auditoria seja especifica de um servi√ßo e n√£o uma empresa. Quando falamos de microsservi√ßos e computa√ß√£o distribu√≠da, alguns sistemas n√£o tem a informa√ß√£o completa. J√° implementei um sistema que certos servi√ßos n√£o tinha a informa√ß√£o de usu√°rio, s√≥ o identificador. Uma auditoria precisa de dados correlacionados, significado. Auditoria precisa de interface de usu√°rio tamb√©m. Porque n√£o criar uma interface simples que permite ver que dados foram alterados. Essa interface tem que proteger a integridade do dados, se um usu√°rio alterar o n√∫mero do cart√£o de cr√©dito esse dado tem que estar ileg√≠vel, mas tem que existir esse dados. Na verdade √© recomend√°vel que informa√ß√µes sens√≠veis n√£o estejam vis√≠veis na base de dados. NINGU√âM DA EMPRESA PODE TER ACESSO A DADOS DE USU√ÅRIO! Frameworks para auditoria Se voc√™ √© desenvolvedor Java como eu e usa bases relacionais. Recomendo fortemente o uso do Hibernate com Envers. √â uma framework de mercado, est√°vel, bem documentado e que entrega audit√≥ria. N√£o conhe√ßo outros frameworks para bases n√£o relacionais, se tiver algum me manda pelo twitter. Mas isso n√£o significa que o trabalho terminou. Voc√™ apenas armazenou os dados, o que √© relevante para o sistema. Mas esses dados s√£o signficativos?</summary></entry><entry><title type="html">Java &amp;amp; Clocks</title><link href="https://vepo.github.io/posts/java-e-clocks" rel="alternate" type="text/html" title="Java &amp; Clocks" /><published>2021-10-07T00:00:00+00:00</published><updated>2021-10-07T00:00:00+00:00</updated><id>https://vepo.github.io/posts/08-30-00-java-clocks</id><content type="html" xml:base="https://vepo.github.io/posts/java-e-clocks">&lt;p&gt;Lendo o livro ‚ÄúDesigning Data-Intensive Applications‚Äù aprendi algo muito util em Java. Sabia que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.currentTimeMillis()&lt;/code&gt; e &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.nanoTime()&lt;/code&gt; s√£o duas funcionalidades completamente diferente?&lt;/p&gt;

&lt;p&gt;Para entender isso tem que se entender o conceito de &lt;strong&gt;Monotonic&lt;/strong&gt; e &lt;strong&gt;Time-of-Day Clocks&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Clock&lt;/em&gt; √© um sistema independente dentro de qualquer m√°quina que alimenta um contador independente da CPU. Tem um tick que incrementa esse contador e  esse contador √© usado para calcular a data.&lt;/p&gt;

&lt;p&gt;Data √© o n√∫mero segundos/milissegundos desde do Epoch, que √© 1¬∫ de janeiro de 1970 00:00:00.&lt;/p&gt;

&lt;p&gt;D√° uma lida na documenta√ß√£o do GNU sobre a procedimento &lt;a href=&quot;https://www.gnu.org/software/libc/manual/html_node/Getting-the-Time.html&quot;&gt;clock_gettime&lt;/a&gt;. Observa os par√¢metros, v√™ que s√£o dois clocks diferentes?&lt;/p&gt;

&lt;p&gt;No &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOCK_REALTIME&lt;/code&gt;, vai retornar um contador que √© sempre atualizado pelo Sistema Operacional usando o servidor &lt;a href=&quot;https://ntp.br&quot;&gt;NTP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOCK_MONOTONIC&lt;/code&gt; temos um contador monotonico, isso signitica que n√£o vai ser atualizado pelo NTP.&lt;/p&gt;

&lt;h2 id=&quot;quais-as-implica√ß√µes-disso&quot;&gt;Quais as implica√ß√µes disso?&lt;/h2&gt;

&lt;p&gt;Sempre que voc√™ for usar o clock para pegar a data atual, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOCK_REALTIME&lt;/code&gt;. Ele estar√° mais pr√≥ximo da verdade (observer que ele tem um erro).&lt;/p&gt;

&lt;p&gt;Sempre que voc√™ for calcular tempos de execu√ß√£o, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOCK_MONOTONIC&lt;/code&gt;. Ele dar√° o real tempo de execu√ß√£o.&lt;/p&gt;

&lt;p&gt;Em Java o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.currentTimeMillis()&lt;/code&gt; usa o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOCK_REALTIME&lt;/code&gt; e o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.nanoTime()&lt;/code&gt; usa o &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CLOCK_MONOTONIC&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Isso porque o real time n√£o tem tanta resolu√ß√£o, tem que se descontar a lat√™ncia da rede entre o seu computador e o servidor NTP.&lt;/p&gt;

&lt;p&gt;Imagina o caso abaixo:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ... c√≥digo ...&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsedMillis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Durante a execu√ß√£o o SO pode ter atualizado o clock e o elapsedMillis pode at√© ser negativo.&lt;/p&gt;

&lt;p&gt;J√° o c√≥digo abaixo, temos a certeza que n√£o foi atualizado.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ... c√≥digo ...&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsedNanos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nanoTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;E se eu quiser o tempo real universal? Acho que Einstein se entristece com essa pergunta, mas blz!&lt;/p&gt;

&lt;p&gt;O Google tem uma API chamada &lt;a href=&quot;https://research.google/pubs/pub45855/&quot;&gt;TrueTime&lt;/a&gt;, que vai retornar a data baseada em v√°rios servidores NTP e um intervalo de erro. Toda medida tem erro no mundo‚Ä¶ Aceite!&lt;/p&gt;

&lt;p&gt;Mas o TrueTime s√≥ √© √∫til em caso de resolu√ß√£o de conflitos de concorr√™ncia complexos.&lt;/p&gt;

&lt;p&gt;Ainda n√£o achei uma API do TrueTime para Java (s√≥ para Android). Tamb√©m nunca precisei. üòâ&lt;/p&gt;

&lt;div class=&quot;img-block&quot;&gt;
    &lt;blockquote class=&quot;twitter-tweet&quot;&gt;
        &lt;p lang=&quot;pt&quot; dir=&quot;ltr&quot;&gt;Lendo o livro &amp;quot;Designing Data-Intensive Applications&amp;quot; aprendi algo muito util em &lt;a href=&quot;https://twitter.com/java?ref_src=twsrc%5Etfw&quot;&gt;@Java&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;Sabia que System.currentTimeMillis() e System.nanoTime() s√£o duas funcionalidades completamente diferente?&lt;/p&gt;&amp;mdash; dev-roadmap (@dev_roadmap) &lt;a href=&quot;https://twitter.com/dev_roadmap/status/1446064000165416964?ref_src=twsrc%5Etfw&quot;&gt;October 7, 2021&lt;/a&gt;
    &lt;/blockquote&gt; 
    &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclus√£o&quot;&gt;Conclus√£o&lt;/h2&gt;

&lt;p&gt;Se voc√™ quer a data, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.currentTimeMillis()&lt;/code&gt;. Se voc√™ quer pegar o timestamp inicial para calcultar um tempo de execu√ß√£o, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;System.nanoTime()&lt;/code&gt;. √â mais confi√°vel.&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="Java" /><summary type="html">Lendo o livro ‚ÄúDesigning Data-Intensive Applications‚Äù aprendi algo muito util em Java. Sabia que System.currentTimeMillis() e System.nanoTime() s√£o duas funcionalidades completamente diferente? Para entender isso tem que se entender o conceito de Monotonic e Time-of-Day Clocks. Clock √© um sistema independente dentro de qualquer m√°quina que alimenta um contador independente da CPU. Tem um tick que incrementa esse contador e esse contador √© usado para calcular a data. Data √© o n√∫mero segundos/milissegundos desde do Epoch, que √© 1¬∫ de janeiro de 1970 00:00:00. D√° uma lida na documenta√ß√£o do GNU sobre a procedimento clock_gettime. Observa os par√¢metros, v√™ que s√£o dois clocks diferentes? No CLOCK_REALTIME, vai retornar um contador que √© sempre atualizado pelo Sistema Operacional usando o servidor NTP. No CLOCK_MONOTONIC temos um contador monotonico, isso signitica que n√£o vai ser atualizado pelo NTP. Quais as implica√ß√µes disso? Sempre que voc√™ for usar o clock para pegar a data atual, use CLOCK_REALTIME. Ele estar√° mais pr√≥ximo da verdade (observer que ele tem um erro). Sempre que voc√™ for calcular tempos de execu√ß√£o, use CLOCK_MONOTONIC. Ele dar√° o real tempo de execu√ß√£o. Em Java o System.currentTimeMillis() usa o CLOCK_REALTIME e o System.nanoTime() usa o CLOCK_MONOTONIC. Isso porque o real time n√£o tem tanta resolu√ß√£o, tem que se descontar a lat√™ncia da rede entre o seu computador e o servidor NTP. Imagina o caso abaixo: long startTime = System.currentTimeMillis(); // ... c√≥digo ... long elapsedMillis = System.currentTimeMillis() - startTime; Durante a execu√ß√£o o SO pode ter atualizado o clock e o elapsedMillis pode at√© ser negativo. J√° o c√≥digo abaixo, temos a certeza que n√£o foi atualizado. long startTime = System.nanoTime(); // ... c√≥digo ... long elapsedNanos = System.nanoTime() - startTime; E se eu quiser o tempo real universal? Acho que Einstein se entristece com essa pergunta, mas blz! O Google tem uma API chamada TrueTime, que vai retornar a data baseada em v√°rios servidores NTP e um intervalo de erro. Toda medida tem erro no mundo‚Ä¶ Aceite! Mas o TrueTime s√≥ √© √∫til em caso de resolu√ß√£o de conflitos de concorr√™ncia complexos. Ainda n√£o achei uma API do TrueTime para Java (s√≥ para Android). Tamb√©m nunca precisei. üòâ Lendo o livro &amp;quot;Designing Data-Intensive Applications&amp;quot; aprendi algo muito util em @Java. Sabia que System.currentTimeMillis() e System.nanoTime() s√£o duas funcionalidades completamente diferente?&amp;mdash; dev-roadmap (@dev_roadmap) October 7, 2021 Conclus√£o Se voc√™ quer a data, use System.currentTimeMillis(). Se voc√™ quer pegar o timestamp inicial para calcultar um tempo de execu√ß√£o, use System.nanoTime(). √â mais confi√°vel.</summary></entry><entry><title type="html">REST &amp;amp; HTTP</title><link href="https://vepo.github.io/posts/rest-e-http" rel="alternate" type="text/html" title="REST &amp; HTTP" /><published>2021-09-09T00:00:00+00:00</published><updated>2021-09-09T00:00:00+00:00</updated><id>https://vepo.github.io/posts/15-40-00-rest-e-http</id><content type="html" xml:base="https://vepo.github.io/posts/rest-e-http">&lt;p&gt;Ano passado eu me dediquei a escrever sobre HTTP e REST. Estava com alguns objetivos claro em mente, queria mostrar quando usar e como usar o HTTP. Depois me fiz algumas perguntas e fui pesquisar se existem padr√µes de projeto em REST. Dessa peqquisa saiu dois POST enormes. O primeiro eu decidi tornar um livreto, mas sem muita revis√£o e sem muita experi√™ncia.&lt;/p&gt;

&lt;p&gt;Com esse ‚Äúlivreto‚Äù eu acabei conseguindo ser aceito como escritor na &lt;a href=&quot;https://www.casadocodigo.com.br/&quot;&gt;Casa do C√≥digo&lt;/a&gt;, a ideia √© escrever um livro sobre desenvolvimento backend, mas focado nos protocolos e n√£o nos frameworks. A parte HTTP j√° est√° pronta, e o tal ‚Äúlivreto‚Äù √© s√≥ um capitulo, tem muito mais.&lt;/p&gt;

&lt;p&gt;Esse tal livreto est√° dispon√≠vel na Amazon, de gra√ßa pra quem gosta de sustentar o Jeff Benzos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com.br/Anatomia-Protocolo-HTTP-protocolos-frameworks-ebook/dp/B08PSDT35Y/?_encoding=UTF8&amp;amp;pd_rd_w=uCTIy&amp;amp;pf_rd_p=4b9652c9-ac45-4535-ac4d-eec51129bb6c&amp;amp;pf_rd_r=15TFWDDHRR59X7MWSBNM&amp;amp;pd_rd_r=57f799bb-5689-4dd4-8b73-f7ba4703b773&amp;amp;pd_rd_wg=1Ar7d&amp;amp;ref_=pd_gw_ci_mcx_mr_hp_d&quot;&gt;&lt;img src=&quot;/assets/images/Anatomia-do-Protocolo-HTTP-medium.png&quot; alt=&quot;Anatomia do Protocolo HTTP&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se voc√™ quiser pegar no Leanpub, tamb√©m est√° l√°: &lt;a href=&quot;https://leanpub.com/anatomiahttp/&quot;&gt;leanpub.com/anatomiahttp&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="REST" /><category term="HTTP" /><category term="Backend" /><category term="Livros" /><summary type="html">Ano passado eu me dediquei a escrever sobre HTTP e REST. Estava com alguns objetivos claro em mente, queria mostrar quando usar e como usar o HTTP. Depois me fiz algumas perguntas e fui pesquisar se existem padr√µes de projeto em REST. Dessa peqquisa saiu dois POST enormes. O primeiro eu decidi tornar um livreto, mas sem muita revis√£o e sem muita experi√™ncia. Com esse ‚Äúlivreto‚Äù eu acabei conseguindo ser aceito como escritor na Casa do C√≥digo, a ideia √© escrever um livro sobre desenvolvimento backend, mas focado nos protocolos e n√£o nos frameworks. A parte HTTP j√° est√° pronta, e o tal ‚Äúlivreto‚Äù √© s√≥ um capitulo, tem muito mais. Esse tal livreto est√° dispon√≠vel na Amazon, de gra√ßa pra quem gosta de sustentar o Jeff Benzos. Se voc√™ quiser pegar no Leanpub, tamb√©m est√° l√°: leanpub.com/anatomiahttp</summary></entry><entry><title type="html">Jornada AIOps</title><link href="https://vepo.github.io/posts/jornada-aiops" rel="alternate" type="text/html" title="Jornada AIOps" /><published>2021-08-30T00:00:00+00:00</published><updated>2021-08-30T00:00:00+00:00</updated><id>https://vepo.github.io/posts/10-42-00-jornada-aiops</id><content type="html" xml:base="https://vepo.github.io/posts/jornada-aiops">&lt;p&gt;No √∫ltimo s√°bado terminamos (eu e meu grupo) o MBA da FIAP de Arquitetura de Software como campe√µes do desafio principal. Preciso confersar que estavamos completamente c√©ticos em rela√ß√£o a qualquer pr√™mio por dois motivos. O primeiro √© que n√£o entregamos o que foi pedido e o segundo √© que a nossa proposi√ß√£o de arquitetura era o mais simples poss√≠vel. Mas vou descrever essa jornada.&lt;/p&gt;

&lt;h1 id=&quot;o-desafio&quot;&gt;O Desafio&lt;/h1&gt;

&lt;p&gt;Na verdade era um &lt;em&gt;Chalenge&lt;/em&gt;, mas como eu me recuso a usar termos extrangeiros se temos bons termos em pt-BR, mas vou chamar de desafio mesmo! üòÄ&lt;/p&gt;

&lt;p&gt;Um banco que existe antes das FinTechs, mas que cresceu na era das FinTechs, apresentou uma proposta de melhoria da sua gest√£o de infraestrutura: &lt;strong&gt;&lt;em&gt;‚Äúqueremos AIOps‚Äù&lt;/em&gt;&lt;/strong&gt;. A proposta parecia generica, e realmente era. Tudo que eles pediam era uma apresenta√ß√£o da arquitetura proposta com um demonstra√ß√£o. Eles focaram que era algo HandsOn! Queriam ver funcionando no dia da entrega. N√£o havia nada mais especificado.&lt;/p&gt;

&lt;p&gt;Durante as mentorias, conseguimos levantar alguns pontos da infraestrutura do banco. Eles usavam um provedor de Cloud que j√° tinham escolhidos como principal fornecedor. E usavam duas ferramentas, uma para APM e outra para monitoramento de rede. N√£o conheciamos e nunca t√≠nhamos usado nenhuma dessas ferramentas, para ser sincero, durante minha carreira eu tive pouco contato com software em produ√ß√£o, ent√£o monitoramento √© uma fraqueza. S√≥ usei o NewRelic e fiz alguns deploys usando a plataforma ELK. Mas isso n√£o me d√° a vis√£o de uma infraestrutura completa para um banco.&lt;/p&gt;

&lt;h1 id=&quot;desi√ß√µes-decis√µes-iniciais-e-defini√ß√µes&quot;&gt;&lt;del&gt;Desi√ß√µes&lt;/del&gt; Decis√µes iniciais e Defini√ß√µes&lt;/h1&gt;

&lt;p&gt;Na conversa com o grupo chegamos a primeira conclus√£o: &lt;em&gt;o desafio √© vago&lt;/em&gt;. Se entregarmos algo HandsOn, √© bem prov√°vel que cubra todos os requisitos e podemos at√© ganhar, mas ao encarar o primeiro trade-off, pode ser completamente descartado. Ent√£o fizemos a primeira pergunta: &lt;em&gt;como entregar algo que com certeza n√£o vai ser jogado fora?&lt;/em&gt; Era hora de pesquisar.&lt;/p&gt;

&lt;p&gt;A primeira defini√ß√£o que encontramos foi do &lt;a href=&quot;https://www.gartner.com/en/information-technology/glossary/aiops-artificial-intelligence-operations&quot;&gt;Gartner&lt;/a&gt;, na verdade foi a √∫nica que fomos atr√°s. N√£o fomos atr√°s de outras defini√ß√£o por um motivo bem simples: &lt;strong&gt;fugir do papo de vendedor&lt;/strong&gt;. Normalmente quem escreve sobre um assunto √© quem vende um produto relacionado, e muitos desses ‚Äúwhite-papers‚Äù est√£o na verdade n√£o apaixonados pelo problema, mas vendendo uma solu√ß√£o.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;AIOps combines big data and machine learning to automate IT operations processes, including event correlation, anomaly detection and causality determination.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Segundo o Gartner, AIOps envolve eventos. AIOps come√ßa quando eventos podem ser colocados dentro um algoritmos de Machine Learning. Nesse ponto informamos claramente para a equipe do banco: &lt;em&gt;pode tirar o cavalinho da chuva que n√£o vai ser f√°cil&lt;/em&gt;. Pois √©, ao inv√©s de vendermos nossa solu√ß√£o, falamos a verdade. Para criar um solu√ß√£o robusta de AIOps era preciso catalogar dados, criar eventos e treinar uma rede neural.&lt;/p&gt;

&lt;h1 id=&quot;conhece-te-a-ti-mesmo&quot;&gt;&lt;em&gt;‚ÄúConhece-te a ti mesmo‚Äù&lt;/em&gt;&lt;/h1&gt;

&lt;p&gt;O segundo passo foi criar um meio de auto avalia√ß√£o. N√£o faz sentido apresentarmos uma solu√ß√£o para uma empresa e ela mesmo n√£o conseguir avaliar se a solu√ß√£o permitia AIOps ou n√£o. Logo procuramos se existe algum modelo de maturidade para AIOps.&lt;/p&gt;

&lt;p&gt;Se voc√™ nunca parou para olhar o que √© um modelo de maturidade, recomendo fortemente que procure algum. Voc√™ pode encontrar facilmente para Metodologias √Ågil e DevOps. Na maioria dos casos come√ßar a fazer algo n√£o significa apenas usar ferramentas, mas entender o problema e saber como a ferramenta pode de ajudar a implementar uma politica.&lt;/p&gt;

&lt;p&gt;Ao procurar um bom modelo de maturidade tivemos o mesmo problema com a defini√ß√£o: &lt;em&gt;papo de vendedor&lt;/em&gt;. Normalmente quem produz um modelo de maturidade quer validar a pr√≥pria ferramenta e n√£o avaliar a adequa√ß√£o do problema com a solu√ß√£o. O problema √© que a solu√ß√£o proposta vai sempre levar ao n√≠vel mais alto, pois todas as defici√™ncias da solu√ß√£o ser√£o propositadamente omitidas. Ent√£o passamos a segunda, terceira, quarta, etc‚Ä¶ p√°gina do google para encontrar um modelo que fosse realmente abrangente.&lt;/p&gt;

&lt;p&gt;Assim pudemos propor o seguinte modelo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;N√≠vel 0 - Caos
    &lt;ul&gt;
      &lt;li&gt;Sem dados&lt;/li&gt;
      &lt;li&gt;Sem an√°lises&lt;/li&gt;
      &lt;li&gt;Sem automa√ß√£o&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;N√≠vel 1 - Coleta
    &lt;ul&gt;
      &lt;li&gt;Servi√ßos com suporte a coleta de informa√ß√µes de opera√ß√£o&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;N√≠vel 2 - Consolida√ß√£o
    &lt;ul&gt;
      &lt;li&gt;Dados da opera√ß√£o centralizados&lt;/li&gt;
      &lt;li&gt;Identifica√ß√£o manual de erros&lt;/li&gt;
      &lt;li&gt;Constru√ß√£o manual de dashboards&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;N√≠vel 3 - Contextualiza√ß√£o
    &lt;ul&gt;
      &lt;li&gt;Extra√ß√£o de informa√ß√µes dos dados&lt;/li&gt;
      &lt;li&gt;Identifica√ß√£o autom√°tica de erros&lt;/li&gt;
      &lt;li&gt;Estat√≠sticas n√£o supervisionadas&lt;/li&gt;
      &lt;li&gt;Automa√ß√£o bi-direcional (ITSM)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;N√≠vel 4 - Conselho
    &lt;ul&gt;
      &lt;li&gt;Recomenda√ß√£o de fontes de dados&lt;/li&gt;
      &lt;li&gt;Recomenda√ß√µes de an√°lises e correla√ß√µes&lt;/li&gt;
      &lt;li&gt;Automa√ß√£o de m√∫ltiplos passos&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;N√≠vel 5 - Aut√¥mato
    &lt;ul&gt;
      &lt;li&gt;Otimiza√ß√£o proativa&lt;/li&gt;
      &lt;li&gt;Tuning de performance&lt;/li&gt;
      &lt;li&gt;Solu√ß√£o autom√°tica de problemas&lt;/li&gt;
      &lt;li&gt;Automa√ß√£o Closed-Loop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;√â muito importante que o modelo de maturidade seja devidamente apresentado a empresa, porque muitos entendem que podem chegar ao n√≠vel m√°ximo apenas usando algumas ferramentas. ISSO √â UM MITO! Todo maturidade chega atrav√©s de muito esfor√ßo e mudan√ßas graduais. √â bem prov√°vel que a maioria das empresas esteja no n√≠vel 0, mas se simplesmente falarmos que elas vivem o Caos j√° perdemos o cliente. Porque na verdade nenhuma empresa s√©ria vive o Caos, eles podem at√© estar nessa fase, mas j√° criaram uma s√©rie de processos para garantir que o caos seja controlado. O que acontece √© que a empresa caminha para o lado no modelo de maturidade, ao inv√©s de andar para o n√≠vel 1, ela vai criar processos que engessem o caos tornando ele extremamente burocratico.&lt;/p&gt;

&lt;p&gt;Quer um exemplo dessa burocracia? Uns 5 anos atr√°s eu vi uma palestra de um IT Leader (termo generico, n√£o!?) contando como foi a migra√ß√£o de todos os servi√ßos da empresa para nuvem. A apresenta√ß√£o de cerca de 50 minutos n√£o contou com nenhuma defini√ß√£o, padr√£o estabelecido ou mesmo conceito. N√£o falaram de Cloud Native, Microservices, etc‚Ä¶ Como a empresa fez? Replicou tudo na nuvem e foi verificando se o servi√ßo replicado na nuvem era igual ao executado on-premise. Ora, qual foi o custo disso?!!? Depois eles migraram pra nuvem e mantiveram o on-premise ainda em atividade para garantir um fallback. Eu n√£o quero saber quantas noites esses infelizes perderam por n√£o estudar o conceito de Cloud Native que j√° tem uns 10 anos, ou por n√£o ter estabelicido um padr√£o para toda a aplica√ß√£o.&lt;/p&gt;

&lt;p&gt;Com o modelo de maturidade acima, a empresa poderia criar um planejamento para andar entre as fases.&lt;/p&gt;

&lt;h1 id=&quot;escolhas-de-ferramentas&quot;&gt;Escolhas de ferramentas&lt;/h1&gt;

&lt;p&gt;O pr√≥ximo passo era escolher ferramentas que pudessem possiblitar a implanta√ß√£o de cada n√≠vel do AIOps. Para isso fizemos um grande levantamento. Quem pode ajudar em cada linha do nosso modelo de maturidade? Fizemos a lista de todos os nomes e come√ßamos a jogar em um diagrama. Mas para fazer uma integra√ß√£o n√£o √© s√≥ criar uma seta num diagrama &lt;a href=&quot;https://www.opengroup.org/archimate-forum/archimate-overview&quot;&gt;ArchiMate&lt;/a&gt;, √© muito f√°cil criar diagramas mas √© bastante complexo colocar eles em funcionamento.&lt;/p&gt;

&lt;p&gt;Logo come√ßamos uma busca intensiva por toda a documenta√ß√£o de todas as ferramentas com a seguinte pergunta: &lt;em&gt;como eu integro a ferramenta A na ferramenta B?&lt;/em&gt; Com essa an√°lise simples, j√° pudemos dividir as ferramentas em conjuntos de poss√≠veis solu√ß√µes. Mas j√° no come√ßo sabiamos de algumas limita√ß√µes, pois o banco j√° usava duas ferramentas e escolhido o provedor Cloud. Assim todas as solu√ß√µes deveriam incluir essas duas ferramentas e esse provedor cloud.&lt;/p&gt;

&lt;h1 id=&quot;a-decis√£o-dif√≠cil&quot;&gt;A decis√£o dif√≠cil&lt;/h1&gt;

&lt;p&gt;Entre as v√°rias op√ß√µes arquiteturais, tinhamos algumas plataformas Open Source e v√°rias empresas oferecendo servi√ßos.&lt;/p&gt;

&lt;p&gt;Escolher uma solu√ß√£o open source seria minha escolha de cora√ß√£o, mas isso requer bastante trabalho para implantar. Muitas vezes acreditamos que √© f√°cil montar uma equipe com bons desenvolvedores que entendem de plataformas open source e s√£o h√°beis em pesquisar solu√ß√µes na internet. Mas na verdade o mercado √© bem diferente da nossa bolha. A grande maioria dos desenvolvedores n√£o tem essa habilidade, n√£o conseguem entender os protocolos e muitos n√£o entendem nada em ingl√™s. Logo a solu√ß√£o precisava ser provida por uma empresa que daria um bom suporte.&lt;/p&gt;

&lt;p&gt;E sobre ter v√°rias empresas, isso √© realmente bom‚Ä¶ MAS‚Ä¶ O que observamos no passo anterior foi que as pr√≥prias empresas que prov√™em servi√ßos de observabilidade est√£o se chefando em silos propositadamente. A empresa sabe que se ela os produtos A e B, se ela prover integra√ß√£o do produto A com o B da concorr√™ncia, ela vai perder mercador. Logo as empresas que tem produtos lideres de mercado est√£o removendo possiblidades de integra√ß√£o. N√≥s verificamos isso fazendo uma correla√ß√£o de datas de lan√ßamento de produtos, posts de blogs e documenta√ß√£o. Quando a empresa lan√ßa um produto, ela retira a possibilidade de integra√ß√£o da documenta√ß√£o e os posts de blogs anteriores a data de lan√ßamento do produto v√£o possuir links inv√°lidos. O que isso significa?&lt;/p&gt;

&lt;p&gt;Se escolhessemos as melhores ferramentas para cada passo, teriamos uma grande dificuldade de evoluir pois cada integra√ß√£o seria custosa. Ent√£o era mais f√°cil acentar o Vendor Lock-In para podermos propor uma arquitetura f√°cil e r√°pida de se implantar. Depois de implantada a empresa poderia avaliar uma troca de servi√ßo. Assim decidimos que todas os servi√ßos deveriam ser do proprio provedor de Cloud, que nesse caso era a AWS.&lt;/p&gt;

&lt;p&gt;Usando o mesmo provedor de servi√ßos evitamos silos de dados. Se a ferramenta de AIOps s√≥ precisar olhar para um local √© muito mais f√°cil de manter e evoluir a solu√ß√£o.&lt;/p&gt;

&lt;h1 id=&quot;cria√ß√£o-de-um-plano&quot;&gt;Cria√ß√£o de um plano&lt;/h1&gt;

&lt;p&gt;Eu sempre digo que se temos um plano, temos tudo. Ter um plano √© como viajar para um lugar desconhecido com um mapa, mesmo se pegarmos o caminho errado, √© poss√≠vel reavaliar e propor uma nova rota. Todo plano pode ser reavaliado.&lt;/p&gt;

&lt;p&gt;Dados os n√≠vels de maturidade come√ßamos a escolher ponto a ponto de como integrar. Primeiro era preciso ter dados! Por isso propusemos um escolha que todos os microsservi√ßos deveriam expor seus dados em formato &lt;a href=&quot;https://prometheus.io/docs/introduction/overview/&quot;&gt;Prometheus&lt;/a&gt;. N√£o vamos usar o Prometheus, mesmo sendo uma das possibilidades, mas percebemos que todos os servi√ßos est√£o abertos a se integrar com solu√ß√µes open source. Todo servi√ßo deve ser Cloud Native, seguir os 12 Fatores e usar um framework moderno. Como exemplo criei um servi√ßo de registro de pagamento bem simples usando &lt;a href=&quot;http://quarkus.io/&quot;&gt;Quarkus.io&lt;/a&gt;, &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; com JPA Panache, &lt;a href=&quot;https://vepo.github.io/posts/using-bean-Validation-on-quarkus&quot;&gt;Jakarta Bean Validation&lt;/a&gt;, &lt;a href=&quot;https://quarkus.io/guides/smallrye-metrics&quot;&gt;Microprofile Metrics&lt;/a&gt;, &lt;a href=&quot;https://quarkus.io/guides/smallrye-health&quot;&gt;Microprofile Health&lt;/a&gt; e &lt;a href=&quot;https://www.openapis.org/&quot;&gt;OpenAPI&lt;/a&gt;. Usando o esqueleto de microsseri√ßo j√° atingimos o n√≠vel 1, habilitando a coleta de informa√ß√µes.&lt;/p&gt;

&lt;p&gt;O pr√≥ximo passo √© consolidar todos esses dados em um s√≥ local. √â muito importante que seja um s√≥ local, pois isso facilitar√° a implementa√ß√£o. Para isso escolhemos o AWS CloudWatch, porque ele √© o servi√ßo que faz isso nativamente para Amazon. Se precisamos coletar dados de servidores on-premise, podemos usar o AWS CloudWatch Agente para coletar todos os dados e salvar no mesmo &lt;em&gt;‚Äúlake‚Äù&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Lembra que a empresa j√° possuia alguns servi√ßos de monitoramento? Esses servi√ßos n√£o poderiam ser facilmente integrados, n√£o h√° suporte. Por isso propusemos exportar os dados em formato Prometheus, que podemser coletado pelo AWS CloudWatch Agente e, al√©m disso, criar eventos e alarmes que podem ser enviados via API para o AWS CloudWatch. Esses servi√ßos podem ser usados, mas a integra√ß√£o n√£o vai ser nativa.&lt;/p&gt;

&lt;p&gt;Usando apenas o AWS CloudWatch j√° √© poss√≠vel criar um dashboard com as informa√ß√µes principais do ecossistema. √â poss√≠vel tamb√©m identificar erros e criar eventos e alertas baseado em padr√µes de logs, correla√ß√£o de eventos, etc‚Ä¶ A escolha do AWS CloudWatch por se s√≥ j√° leva ao n√≠vel 2, mas ser√° preciso uma fase de cria√ß√£o de dashboards, eventos e alertas para chegar a plenitude do n√≠vel 2 e depois chegar ao n√≠vel 3, contextualizando dados e logs.&lt;/p&gt;

&lt;p&gt;Um ponto interessante que eu n√£o tinha nem ideia, √© que o sistema banc√°rio √© super regulamentado. Agrade√ßa a essa regulamenta√ß√£o por n√£o termos tido crise nos anos 2008/09. Essa regulamenta√ß√£o vem l√° dos anos 90, quando v√°rios bancos quebraram por pura picaretagem dos seus diretores. Quem tem mais de 35 vai se &lt;a href=&quot;https://pt.wikipedia.org/wiki/Salvatore_Cacciola&quot;&gt;lembrar&lt;/a&gt; de v√°rios homens branco classe AAA+++++ sendo presos, mans√µes sendo leiloadas, etc‚Ä¶ Bom, dessa regulamenta√ß√£o vem um rigido processo de ITSM, isso significa que nenhuma opera√ß√£o na produ√ß√£o deve ser feita sem um rastreamento. Por isso precisamos escolher uma ferramenta de ITSM externa a AWS, mas que pode ser integrada vai API usando Lambda. Com alertas e fun√ß√µes lambdas √© poss√≠vel automatizar v√°rias opera√ß√µes tanto na n√∫vem quanto em on premise.&lt;/p&gt;

&lt;p&gt;Para finalizar, propomos o uso do AWS DevOps Guru, um produto da propria AWS que promete magicamente habiltiar o AIOps. Mas fomos bem c√©tico nesse uso. Ao propor j√° avisamos que nenhuma solu√ß√£o de Machine Learning vem de gra√ßa, tem que ter uma base tageada e treinamento de modelos. N√£o fizemos nenhuma PoC usando o DevOps Guru, apenas propomos e ainda dissemos para s√≥ habilitar quando todo o dever de casa estiver feito.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/aws-devops-guru.png&quot; alt=&quot;AWS DevOps Guru&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Essa solu√ß√£o √© propositadamente simples.&lt;/p&gt;

&lt;h1 id=&quot;outras-solu√ß√µes&quot;&gt;Outras solu√ß√µes&lt;/h1&gt;

&lt;p&gt;N√£o tinhamos nenhuma esperan√ßa de ganhar e quando come√ßaram as apresenta√ß√µes percebemos claramente que n√£o iriamos ganhar. Todas as solu√ß√µes eram extremamente complexas, usavam ao menos 10 produtos diferentes. Teve um grupo que chegou a propor uma integra√ß√£o plugando um Apache Kafka no AWS CloudWatch, nessa hora eu peguei minha garrafa de √°gua pra ver se algu√©m tinha colocado drogas ou se o grupo realmente n√£o tinha parado para avaliar o n√≠vel de dificuldade da solu√ß√£o proposta.&lt;/p&gt;

&lt;p&gt;Muitos quando era questionados das escolhas gagejavam ou dava desculpas esfarrapadas. Nossa solu√ß√£o n√£o era a cereja do bolo, no documento que entregamos ela ocupava poucos paragr√°fos (algo como uns dois a mais que a sess√£o anterior) com alguns links de documenta√ß√£o. O ponto principal era o modelo de maturidade.&lt;/p&gt;

&lt;h1 id=&quot;outras-aplica√ß√µes-reais&quot;&gt;Outras aplica√ß√µes reais&lt;/h1&gt;

&lt;p&gt;Voc√™ pode achar que isso s√≥ funciona para infraestrutura de aplica√ß√µes, mas √© bem provavel que seu acesso ao mundo ser√° controlado por uma solu√ß√£o AIOps. As especifica√ß√µes 5G j√° preveem algo chamado como SDMN (Software-defined mobile networking) onde a estrutura da rede √© definida por software. Isso possibilita que seja tamb√©m alterada por software, assim h√° alguns casos de AIOps j√° estudados, que nesse caso se chama Closed Loop. Para maiores informa√ß√µes leia &lt;a href=&quot;https://dl.acm.org/doi/10.1145/3472735.3474458&quot;&gt;AI-driven Closed-loop Automation in 5G and beyond Mobile Networks&lt;/a&gt; ou &lt;a href=&quot;https://ieeexplore.ieee.org/abstract/document/8802040&quot;&gt;Towards Closed Loop 5G Service Assurance Architecture for Network Slices as a Service&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mas vou descrever como isso pode acontecer no futuro. Imagina que alguma empresa lance um jogo que sobrecarrega toda a rede de telefonia. √â preciso de muito tr√°fego pra isso, mas vamos supor que esse jogo seja mesmo um grande disperdicio. Se a rede n√£o se reorganizar, a lat√™ncia e velocidade de todos os usu√°rio da rede ser√° afetada. Usando Closed Loop, a propria rede pode perceber que apenas um servi√ßo est√° causando um impacto enorme (normalmente 20% dos usu√°rios usam 80% da rede), ent√£o a rede √© dividida (network slicing) e esses usu√°rios s√£o direcionados para uma rede exclusiva. Deste modo, se o uso est√° abusivo, apenas eles v√£o sentir o impacto, evitando que outros usu√°rios sejam impactados. Isso √© muito importante em 5G pois nessa rede n√£o estar√£o somente usu√°rios, mas equipamentos importantes de f√°bricas, hospitais e locomo√ß√£o.&lt;/p&gt;

&lt;h1 id=&quot;conclus√£o&quot;&gt;Conclus√£o&lt;/h1&gt;

&lt;p&gt;Complexidade e papo de vendedor vende. Mas verdade e simplicidade convencem muito melhor. Muitos arquitetos gostam de complexidade porque eles acreditam que ela vai dar eleg√¢ncia a solu√ß√£o. Mas o conceito de eleg√¢ncia vem da simplicidade, fazer o b√°sico bem feito.&lt;/p&gt;

&lt;p&gt;Ao propor uma arquitetura leia toda a documenta√ß√£o, evite passar vergonha de propor a solu√ß√£o errada. Pode ser que quando voc√™ for apresentar ningu√©m realmente saiba do que voc√™ est√° falando, mas pode ser que exista um especialista no assunto. Existe at√© um conto centen√°rio chamado &lt;a href=&quot;https://www.amazon.com.br/Homem-Sabia-Javan%C3%AAs-Outros-Contos/dp/8534235929&quot;&gt;O homem que sabia javan√™s&lt;/a&gt; que mostra como uma pessoa pode parecer inteligente apenas sendo cara de pau. N√£o seja essa pessoa, isso √© leviano e injusto. Creio que n√≥s s√≥ ganhamos esse pr√™mio porque ao vender as dificuldades de implementa√ß√£o e fazer uma pesquisa s√©ria no tema implodimos todas as solu√ß√µes imposs√≠veis e colocamos uma bomba rel√≥gio na complexidade desnecess√°ria.&lt;/p&gt;</content><author><name>{&quot;twitter&quot;=&gt;&quot;vepo&quot;, &quot;linkedin&quot;=&gt;&quot;https://www.linkedin.com/in/victorosorio/&quot;, &quot;picture&quot;=&gt;&quot;/assets/images/me.jpg&quot;}</name></author><category term="AIOps" /><category term="AI" /><category term="O homem que sabia javan√™s" /><summary type="html">No √∫ltimo s√°bado terminamos (eu e meu grupo) o MBA da FIAP de Arquitetura de Software como campe√µes do desafio principal. Preciso confersar que estavamos completamente c√©ticos em rela√ß√£o a qualquer pr√™mio por dois motivos. O primeiro √© que n√£o entregamos o que foi pedido e o segundo √© que a nossa proposi√ß√£o de arquitetura era o mais simples poss√≠vel. Mas vou descrever essa jornada. O Desafio Na verdade era um Chalenge, mas como eu me recuso a usar termos extrangeiros se temos bons termos em pt-BR, mas vou chamar de desafio mesmo! üòÄ Um banco que existe antes das FinTechs, mas que cresceu na era das FinTechs, apresentou uma proposta de melhoria da sua gest√£o de infraestrutura: ‚Äúqueremos AIOps‚Äù. A proposta parecia generica, e realmente era. Tudo que eles pediam era uma apresenta√ß√£o da arquitetura proposta com um demonstra√ß√£o. Eles focaram que era algo HandsOn! Queriam ver funcionando no dia da entrega. N√£o havia nada mais especificado. Durante as mentorias, conseguimos levantar alguns pontos da infraestrutura do banco. Eles usavam um provedor de Cloud que j√° tinham escolhidos como principal fornecedor. E usavam duas ferramentas, uma para APM e outra para monitoramento de rede. N√£o conheciamos e nunca t√≠nhamos usado nenhuma dessas ferramentas, para ser sincero, durante minha carreira eu tive pouco contato com software em produ√ß√£o, ent√£o monitoramento √© uma fraqueza. S√≥ usei o NewRelic e fiz alguns deploys usando a plataforma ELK. Mas isso n√£o me d√° a vis√£o de uma infraestrutura completa para um banco. Desi√ß√µes Decis√µes iniciais e Defini√ß√µes Na conversa com o grupo chegamos a primeira conclus√£o: o desafio √© vago. Se entregarmos algo HandsOn, √© bem prov√°vel que cubra todos os requisitos e podemos at√© ganhar, mas ao encarar o primeiro trade-off, pode ser completamente descartado. Ent√£o fizemos a primeira pergunta: como entregar algo que com certeza n√£o vai ser jogado fora? Era hora de pesquisar. A primeira defini√ß√£o que encontramos foi do Gartner, na verdade foi a √∫nica que fomos atr√°s. N√£o fomos atr√°s de outras defini√ß√£o por um motivo bem simples: fugir do papo de vendedor. Normalmente quem escreve sobre um assunto √© quem vende um produto relacionado, e muitos desses ‚Äúwhite-papers‚Äù est√£o na verdade n√£o apaixonados pelo problema, mas vendendo uma solu√ß√£o. AIOps combines big data and machine learning to automate IT operations processes, including event correlation, anomaly detection and causality determination. Segundo o Gartner, AIOps envolve eventos. AIOps come√ßa quando eventos podem ser colocados dentro um algoritmos de Machine Learning. Nesse ponto informamos claramente para a equipe do banco: pode tirar o cavalinho da chuva que n√£o vai ser f√°cil. Pois √©, ao inv√©s de vendermos nossa solu√ß√£o, falamos a verdade. Para criar um solu√ß√£o robusta de AIOps era preciso catalogar dados, criar eventos e treinar uma rede neural. ‚ÄúConhece-te a ti mesmo‚Äù O segundo passo foi criar um meio de auto avalia√ß√£o. N√£o faz sentido apresentarmos uma solu√ß√£o para uma empresa e ela mesmo n√£o conseguir avaliar se a solu√ß√£o permitia AIOps ou n√£o. Logo procuramos se existe algum modelo de maturidade para AIOps. Se voc√™ nunca parou para olhar o que √© um modelo de maturidade, recomendo fortemente que procure algum. Voc√™ pode encontrar facilmente para Metodologias √Ågil e DevOps. Na maioria dos casos come√ßar a fazer algo n√£o significa apenas usar ferramentas, mas entender o problema e saber como a ferramenta pode de ajudar a implementar uma politica. Ao procurar um bom modelo de maturidade tivemos o mesmo problema com a defini√ß√£o: papo de vendedor. Normalmente quem produz um modelo de maturidade quer validar a pr√≥pria ferramenta e n√£o avaliar a adequa√ß√£o do problema com a solu√ß√£o. O problema √© que a solu√ß√£o proposta vai sempre levar ao n√≠vel mais alto, pois todas as defici√™ncias da solu√ß√£o ser√£o propositadamente omitidas. Ent√£o passamos a segunda, terceira, quarta, etc‚Ä¶ p√°gina do google para encontrar um modelo que fosse realmente abrangente. Assim pudemos propor o seguinte modelo: N√≠vel 0 - Caos Sem dados Sem an√°lises Sem automa√ß√£o N√≠vel 1 - Coleta Servi√ßos com suporte a coleta de informa√ß√µes de opera√ß√£o N√≠vel 2 - Consolida√ß√£o Dados da opera√ß√£o centralizados Identifica√ß√£o manual de erros Constru√ß√£o manual de dashboards N√≠vel 3 - Contextualiza√ß√£o Extra√ß√£o de informa√ß√µes dos dados Identifica√ß√£o autom√°tica de erros Estat√≠sticas n√£o supervisionadas Automa√ß√£o bi-direcional (ITSM) N√≠vel 4 - Conselho Recomenda√ß√£o de fontes de dados Recomenda√ß√µes de an√°lises e correla√ß√µes Automa√ß√£o de m√∫ltiplos passos N√≠vel 5 - Aut√¥mato Otimiza√ß√£o proativa Tuning de performance Solu√ß√£o autom√°tica de problemas Automa√ß√£o Closed-Loop √â muito importante que o modelo de maturidade seja devidamente apresentado a empresa, porque muitos entendem que podem chegar ao n√≠vel m√°ximo apenas usando algumas ferramentas. ISSO √â UM MITO! Todo maturidade chega atrav√©s de muito esfor√ßo e mudan√ßas graduais. √â bem prov√°vel que a maioria das empresas esteja no n√≠vel 0, mas se simplesmente falarmos que elas vivem o Caos j√° perdemos o cliente. Porque na verdade nenhuma empresa s√©ria vive o Caos, eles podem at√© estar nessa fase, mas j√° criaram uma s√©rie de processos para garantir que o caos seja controlado. O que acontece √© que a empresa caminha para o lado no modelo de maturidade, ao inv√©s de andar para o n√≠vel 1, ela vai criar processos que engessem o caos tornando ele extremamente burocratico. Quer um exemplo dessa burocracia? Uns 5 anos atr√°s eu vi uma palestra de um IT Leader (termo generico, n√£o!?) contando como foi a migra√ß√£o de todos os servi√ßos da empresa para nuvem. A apresenta√ß√£o de cerca de 50 minutos n√£o contou com nenhuma defini√ß√£o, padr√£o estabelecido ou mesmo conceito. N√£o falaram de Cloud Native, Microservices, etc‚Ä¶ Como a empresa fez? Replicou tudo na nuvem e foi verificando se o servi√ßo replicado na nuvem era igual ao executado on-premise. Ora, qual foi o custo disso?!!? Depois eles migraram pra nuvem e mantiveram o on-premise ainda em atividade para garantir um fallback. Eu n√£o quero saber quantas noites esses infelizes perderam por n√£o estudar o conceito de Cloud Native que j√° tem uns 10 anos, ou por n√£o ter estabelicido um padr√£o para toda a aplica√ß√£o. Com o modelo de maturidade acima, a empresa poderia criar um planejamento para andar entre as fases. Escolhas de ferramentas O pr√≥ximo passo era escolher ferramentas que pudessem possiblitar a implanta√ß√£o de cada n√≠vel do AIOps. Para isso fizemos um grande levantamento. Quem pode ajudar em cada linha do nosso modelo de maturidade? Fizemos a lista de todos os nomes e come√ßamos a jogar em um diagrama. Mas para fazer uma integra√ß√£o n√£o √© s√≥ criar uma seta num diagrama ArchiMate, √© muito f√°cil criar diagramas mas √© bastante complexo colocar eles em funcionamento. Logo come√ßamos uma busca intensiva por toda a documenta√ß√£o de todas as ferramentas com a seguinte pergunta: como eu integro a ferramenta A na ferramenta B? Com essa an√°lise simples, j√° pudemos dividir as ferramentas em conjuntos de poss√≠veis solu√ß√µes. Mas j√° no come√ßo sabiamos de algumas limita√ß√µes, pois o banco j√° usava duas ferramentas e escolhido o provedor Cloud. Assim todas as solu√ß√µes deveriam incluir essas duas ferramentas e esse provedor cloud. A decis√£o dif√≠cil Entre as v√°rias op√ß√µes arquiteturais, tinhamos algumas plataformas Open Source e v√°rias empresas oferecendo servi√ßos. Escolher uma solu√ß√£o open source seria minha escolha de cora√ß√£o, mas isso requer bastante trabalho para implantar. Muitas vezes acreditamos que √© f√°cil montar uma equipe com bons desenvolvedores que entendem de plataformas open source e s√£o h√°beis em pesquisar solu√ß√µes na internet. Mas na verdade o mercado √© bem diferente da nossa bolha. A grande maioria dos desenvolvedores n√£o tem essa habilidade, n√£o conseguem entender os protocolos e muitos n√£o entendem nada em ingl√™s. Logo a solu√ß√£o precisava ser provida por uma empresa que daria um bom suporte. E sobre ter v√°rias empresas, isso √© realmente bom‚Ä¶ MAS‚Ä¶ O que observamos no passo anterior foi que as pr√≥prias empresas que prov√™em servi√ßos de observabilidade est√£o se chefando em silos propositadamente. A empresa sabe que se ela os produtos A e B, se ela prover integra√ß√£o do produto A com o B da concorr√™ncia, ela vai perder mercador. Logo as empresas que tem produtos lideres de mercado est√£o removendo possiblidades de integra√ß√£o. N√≥s verificamos isso fazendo uma correla√ß√£o de datas de lan√ßamento de produtos, posts de blogs e documenta√ß√£o. Quando a empresa lan√ßa um produto, ela retira a possibilidade de integra√ß√£o da documenta√ß√£o e os posts de blogs anteriores a data de lan√ßamento do produto v√£o possuir links inv√°lidos. O que isso significa? Se escolhessemos as melhores ferramentas para cada passo, teriamos uma grande dificuldade de evoluir pois cada integra√ß√£o seria custosa. Ent√£o era mais f√°cil acentar o Vendor Lock-In para podermos propor uma arquitetura f√°cil e r√°pida de se implantar. Depois de implantada a empresa poderia avaliar uma troca de servi√ßo. Assim decidimos que todas os servi√ßos deveriam ser do proprio provedor de Cloud, que nesse caso era a AWS. Usando o mesmo provedor de servi√ßos evitamos silos de dados. Se a ferramenta de AIOps s√≥ precisar olhar para um local √© muito mais f√°cil de manter e evoluir a solu√ß√£o. Cria√ß√£o de um plano Eu sempre digo que se temos um plano, temos tudo. Ter um plano √© como viajar para um lugar desconhecido com um mapa, mesmo se pegarmos o caminho errado, √© poss√≠vel reavaliar e propor uma nova rota. Todo plano pode ser reavaliado. Dados os n√≠vels de maturidade come√ßamos a escolher ponto a ponto de como integrar. Primeiro era preciso ter dados! Por isso propusemos um escolha que todos os microsservi√ßos deveriam expor seus dados em formato Prometheus. N√£o vamos usar o Prometheus, mesmo sendo uma das possibilidades, mas percebemos que todos os servi√ßos est√£o abertos a se integrar com solu√ß√µes open source. Todo servi√ßo deve ser Cloud Native, seguir os 12 Fatores e usar um framework moderno. Como exemplo criei um servi√ßo de registro de pagamento bem simples usando Quarkus.io, PostgreSQL com JPA Panache, Jakarta Bean Validation, Microprofile Metrics, Microprofile Health e OpenAPI. Usando o esqueleto de microsseri√ßo j√° atingimos o n√≠vel 1, habilitando a coleta de informa√ß√µes. O pr√≥ximo passo √© consolidar todos esses dados em um s√≥ local. √â muito importante que seja um s√≥ local, pois isso facilitar√° a implementa√ß√£o. Para isso escolhemos o AWS CloudWatch, porque ele √© o servi√ßo que faz isso nativamente para Amazon. Se precisamos coletar dados de servidores on-premise, podemos usar o AWS CloudWatch Agente para coletar todos os dados e salvar no mesmo ‚Äúlake‚Äù. Lembra que a empresa j√° possuia alguns servi√ßos de monitoramento? Esses servi√ßos n√£o poderiam ser facilmente integrados, n√£o h√° suporte. Por isso propusemos exportar os dados em formato Prometheus, que podemser coletado pelo AWS CloudWatch Agente e, al√©m disso, criar eventos e alarmes que podem ser enviados via API para o AWS CloudWatch. Esses servi√ßos podem ser usados, mas a integra√ß√£o n√£o vai ser nativa. Usando apenas o AWS CloudWatch j√° √© poss√≠vel criar um dashboard com as informa√ß√µes principais do ecossistema. √â poss√≠vel tamb√©m identificar erros e criar eventos e alertas baseado em padr√µes de logs, correla√ß√£o de eventos, etc‚Ä¶ A escolha do AWS CloudWatch por se s√≥ j√° leva ao n√≠vel 2, mas ser√° preciso uma fase de cria√ß√£o de dashboards, eventos e alertas para chegar a plenitude do n√≠vel 2 e depois chegar ao n√≠vel 3, contextualizando dados e logs. Um ponto interessante que eu n√£o tinha nem ideia, √© que o sistema banc√°rio √© super regulamentado. Agrade√ßa a essa regulamenta√ß√£o por n√£o termos tido crise nos anos 2008/09. Essa regulamenta√ß√£o vem l√° dos anos 90, quando v√°rios bancos quebraram por pura picaretagem dos seus diretores. Quem tem mais de 35 vai se lembrar de v√°rios homens branco classe AAA+++++ sendo presos, mans√µes sendo leiloadas, etc‚Ä¶ Bom, dessa regulamenta√ß√£o vem um rigido processo de ITSM, isso significa que nenhuma opera√ß√£o na produ√ß√£o deve ser feita sem um rastreamento. Por isso precisamos escolher uma ferramenta de ITSM externa a AWS, mas que pode ser integrada vai API usando Lambda. Com alertas e fun√ß√µes lambdas √© poss√≠vel automatizar v√°rias opera√ß√µes tanto na n√∫vem quanto em on premise. Para finalizar, propomos o uso do AWS DevOps Guru, um produto da propria AWS que promete magicamente habiltiar o AIOps. Mas fomos bem c√©tico nesse uso. Ao propor j√° avisamos que nenhuma solu√ß√£o de Machine Learning vem de gra√ßa, tem que ter uma base tageada e treinamento de modelos. N√£o fizemos nenhuma PoC usando o DevOps Guru, apenas propomos e ainda dissemos para s√≥ habilitar quando todo o dever de casa estiver feito. Essa solu√ß√£o √© propositadamente simples. Outras solu√ß√µes N√£o tinhamos nenhuma esperan√ßa de ganhar e quando come√ßaram as apresenta√ß√µes percebemos claramente que n√£o iriamos ganhar. Todas as solu√ß√µes eram extremamente complexas, usavam ao menos 10 produtos diferentes. Teve um grupo que chegou a propor uma integra√ß√£o plugando um Apache Kafka no AWS CloudWatch, nessa hora eu peguei minha garrafa de √°gua pra ver se algu√©m tinha colocado drogas ou se o grupo realmente n√£o tinha parado para avaliar o n√≠vel de dificuldade da solu√ß√£o proposta. Muitos quando era questionados das escolhas gagejavam ou dava desculpas esfarrapadas. Nossa solu√ß√£o n√£o era a cereja do bolo, no documento que entregamos ela ocupava poucos paragr√°fos (algo como uns dois a mais que a sess√£o anterior) com alguns links de documenta√ß√£o. O ponto principal era o modelo de maturidade. Outras aplica√ß√µes reais Voc√™ pode achar que isso s√≥ funciona para infraestrutura de aplica√ß√µes, mas √© bem provavel que seu acesso ao mundo ser√° controlado por uma solu√ß√£o AIOps. As especifica√ß√µes 5G j√° preveem algo chamado como SDMN (Software-defined mobile networking) onde a estrutura da rede √© definida por software. Isso possibilita que seja tamb√©m alterada por software, assim h√° alguns casos de AIOps j√° estudados, que nesse caso se chama Closed Loop. Para maiores informa√ß√µes leia AI-driven Closed-loop Automation in 5G and beyond Mobile Networks ou Towards Closed Loop 5G Service Assurance Architecture for Network Slices as a Service. Mas vou descrever como isso pode acontecer no futuro. Imagina que alguma empresa lance um jogo que sobrecarrega toda a rede de telefonia. √â preciso de muito tr√°fego pra isso, mas vamos supor que esse jogo seja mesmo um grande disperdicio. Se a rede n√£o se reorganizar, a lat√™ncia e velocidade de todos os usu√°rio da rede ser√° afetada. Usando Closed Loop, a propria rede pode perceber que apenas um servi√ßo est√° causando um impacto enorme (normalmente 20% dos usu√°rios usam 80% da rede), ent√£o a rede √© dividida (network slicing) e esses usu√°rios s√£o direcionados para uma rede exclusiva. Deste modo, se o uso est√° abusivo, apenas eles v√£o sentir o impacto, evitando que outros usu√°rios sejam impactados. Isso √© muito importante em 5G pois nessa rede n√£o estar√£o somente usu√°rios, mas equipamentos importantes de f√°bricas, hospitais e locomo√ß√£o. Conclus√£o Complexidade e papo de vendedor vende. Mas verdade e simplicidade convencem muito melhor. Muitos arquitetos gostam de complexidade porque eles acreditam que ela vai dar eleg√¢ncia a solu√ß√£o. Mas o conceito de eleg√¢ncia vem da simplicidade, fazer o b√°sico bem feito. Ao propor uma arquitetura leia toda a documenta√ß√£o, evite passar vergonha de propor a solu√ß√£o errada. Pode ser que quando voc√™ for apresentar ningu√©m realmente saiba do que voc√™ est√° falando, mas pode ser que exista um especialista no assunto. Existe at√© um conto centen√°rio chamado O homem que sabia javan√™s que mostra como uma pessoa pode parecer inteligente apenas sendo cara de pau. N√£o seja essa pessoa, isso √© leviano e injusto. Creio que n√≥s s√≥ ganhamos esse pr√™mio porque ao vender as dificuldades de implementa√ß√£o e fazer uma pesquisa s√©ria no tema implodimos todas as solu√ß√µes imposs√≠veis e colocamos uma bomba rel√≥gio na complexidade desnecess√°ria.</summary></entry></feed>